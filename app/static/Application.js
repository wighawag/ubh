var $_, $hxClasses = $hxClasses || {}, $estr = function() { return js.Boot.__string_rec(this,''); }
function $extend(from, fields) {
	function inherit() {}; inherit.prototype = from; var proto = new inherit();
	for (var name in fields) proto[name] = fields[name];
	return proto;
}
var hsl = hsl || {}
if(!hsl.haxe) hsl.haxe = {}
hsl.haxe.Signaler = $hxClasses["hsl.haxe.Signaler"] = function() { }
hsl.haxe.Signaler.__name__ = ["hsl","haxe","Signaler"];
hsl.haxe.Signaler.prototype = {
	isListenedTo: null
	,subject: null
	,addBubblingTarget: null
	,addNotificationTarget: null
	,bind: null
	,bindAdvanced: null
	,bindVoid: null
	,dispatch: null
	,getIsListenedTo: null
	,removeBubblingTarget: null
	,removeNotificationTarget: null
	,unbind: null
	,unbindAdvanced: null
	,unbindVoid: null
	,__class__: hsl.haxe.Signaler
	,__properties__: {get_isListenedTo:"getIsListenedTo"}
}
hsl.haxe.DirectSignaler = $hxClasses["hsl.haxe.DirectSignaler"] = function(subject,rejectNullData) {
	$s.push("hsl.haxe.DirectSignaler::new");
	var $spos = $s.length;
	if(null == subject) throw new haxe.exception.ArgumentNullException("subject",1);
	this.subject = subject;
	this.rejectNullData = rejectNullData;
	this.sentinel = new hsl.haxe._DirectSignaler.SentinelBond();
	$s.pop();
}
hsl.haxe.DirectSignaler.__name__ = ["hsl","haxe","DirectSignaler"];
hsl.haxe.DirectSignaler.__interfaces__ = [hsl.haxe.Signaler];
hsl.haxe.DirectSignaler.prototype = {
	bubblingTargets: null
	,isListenedTo: null
	,notificationTargets: null
	,rejectNullData: null
	,sentinel: null
	,subject: null
	,subjectClassNames: null
	,addBubblingTarget: function(value) {
		$s.push("hsl.haxe.DirectSignaler::addBubblingTarget");
		var $spos = $s.length;
		if(null == this.bubblingTargets) this.bubblingTargets = new List();
		this.bubblingTargets.add(value);
		$s.pop();
	}
	,addNotificationTarget: function(value) {
		$s.push("hsl.haxe.DirectSignaler::addNotificationTarget");
		var $spos = $s.length;
		if(null == this.notificationTargets) this.notificationTargets = new List();
		this.notificationTargets.add(value);
		$s.pop();
	}
	,bind: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::bind");
		var $spos = $s.length;
		if(null == listener) throw new haxe.exception.ArgumentNullException("listener",1);
		var $tmp = this.sentinel.add(new hsl.haxe._DirectSignaler.RegularBond(listener));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,bindAdvanced: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::bindAdvanced");
		var $spos = $s.length;
		if(null == listener) throw new haxe.exception.ArgumentNullException("listener",1);
		var $tmp = this.sentinel.add(new hsl.haxe._DirectSignaler.AdvancedBond(listener));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,bindVoid: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::bindVoid");
		var $spos = $s.length;
		if(null == listener) throw new haxe.exception.ArgumentNullException("listener",1);
		var $tmp = this.sentinel.add(new hsl.haxe._DirectSignaler.NiladicBond(listener));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,bubble: function(data,origin) {
		$s.push("hsl.haxe.DirectSignaler::bubble");
		var $spos = $s.length;
		if(null != this.bubblingTargets) {
			var $it0 = this.bubblingTargets.iterator();
			while( $it0.hasNext() ) {
				var bubblingTarget = $it0.next();
				bubblingTarget.dispatch(data,origin,{ fileName : "DirectSignaler.hx", lineNumber : 109, className : "hsl.haxe.DirectSignaler", methodName : "bubble"});
			}
		}
		if(null != this.notificationTargets) {
			var $it1 = this.notificationTargets.iterator();
			while( $it1.hasNext() ) {
				var notificationTarget = $it1.next();
				notificationTarget.dispatch(null,origin,{ fileName : "DirectSignaler.hx", lineNumber : 114, className : "hsl.haxe.DirectSignaler", methodName : "bubble"});
			}
		}
		$s.pop();
	}
	,dispatch: function(data,origin,positionInformation) {
		$s.push("hsl.haxe.DirectSignaler::dispatch");
		var $spos = $s.length;
		if("dispatchNative" != positionInformation.methodName && "bubble" != positionInformation.methodName) this.verifyCaller(positionInformation);
		if(this.rejectNullData && null == data) throw new haxe.exception.Exception("Some data that was passed is null, but this signaler has been set to reject null data.",null,1);
		origin = null == origin?this.subject:origin;
		if(3 == this.sentinel.callListener(data,this.subject,origin,3)) {
			if(null != this.bubblingTargets) {
				var $it0 = this.bubblingTargets.iterator();
				while( $it0.hasNext() ) {
					var bubblingTarget = $it0.next();
					bubblingTarget.dispatch(data,origin,{ fileName : "DirectSignaler.hx", lineNumber : 109, className : "hsl.haxe.DirectSignaler", methodName : "bubble"});
				}
			}
			if(null != this.notificationTargets) {
				var $it1 = this.notificationTargets.iterator();
				while( $it1.hasNext() ) {
					var notificationTarget = $it1.next();
					notificationTarget.dispatch(null,origin,{ fileName : "DirectSignaler.hx", lineNumber : 114, className : "hsl.haxe.DirectSignaler", methodName : "bubble"});
				}
			}
		}
		$s.pop();
	}
	,getIsListenedTo: function() {
		$s.push("hsl.haxe.DirectSignaler::getIsListenedTo");
		var $spos = $s.length;
		var $tmp = this.sentinel.getIsConnected();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getOrigin: function(origin) {
		$s.push("hsl.haxe.DirectSignaler::getOrigin");
		var $spos = $s.length;
		var $tmp = null == origin?this.subject:origin;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,verifyCaller: function(positionInformation) {
		$s.push("hsl.haxe.DirectSignaler::verifyCaller");
		var $spos = $s.length;
		if(null == this.subjectClassNames) this.subjectClassNames = haxe.TypeTools.getClassNames(this.subject);
		var $it0 = this.subjectClassNames.iterator();
		while( $it0.hasNext() ) {
			var subjectClassName = $it0.next();
			if(subjectClassName == positionInformation.className) {
				$s.pop();
				return;
			}
		}
		throw new haxe.exception.Exception("This method may only be called by the subject of the signaler.",null,2);
		$s.pop();
	}
	,removeBubblingTarget: function(value) {
		$s.push("hsl.haxe.DirectSignaler::removeBubblingTarget");
		var $spos = $s.length;
		if(null != this.bubblingTargets) this.bubblingTargets.remove(value);
		$s.pop();
	}
	,removeNotificationTarget: function(value) {
		$s.push("hsl.haxe.DirectSignaler::removeNotificationTarget");
		var $spos = $s.length;
		if(null != this.notificationTargets) this.notificationTargets.remove(value);
		$s.pop();
	}
	,toString: function() {
		$s.push("hsl.haxe.DirectSignaler::toString");
		var $spos = $s.length;
		var $tmp = "[Signaler isListenedTo=" + this.getIsListenedTo() + "]";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,unbind: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::unbind");
		var $spos = $s.length;
		this.sentinel.remove(new hsl.haxe._DirectSignaler.RegularBond(listener));
		$s.pop();
	}
	,unbindAdvanced: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::unbindAdvanced");
		var $spos = $s.length;
		this.sentinel.remove(new hsl.haxe._DirectSignaler.AdvancedBond(listener));
		$s.pop();
	}
	,unbindVoid: function(listener) {
		$s.push("hsl.haxe.DirectSignaler::unbindVoid");
		var $spos = $s.length;
		this.sentinel.remove(new hsl.haxe._DirectSignaler.NiladicBond(listener));
		$s.pop();
	}
	,__class__: hsl.haxe.DirectSignaler
	,__properties__: {get_isListenedTo:"getIsListenedTo"}
}
var haxe = haxe || {}
if(!haxe.exception) haxe.exception = {}
haxe.exception.Exception = $hxClasses["haxe.exception.Exception"] = function(message,innerException,numberOfStackTraceShifts) {
	$s.push("haxe.exception.Exception::new");
	var $spos = $s.length;
	this.message = null == message?"Unknown exception":message;
	this.innerException = innerException;
	this.generateStackTrace(numberOfStackTraceShifts);
	this.stackTrace = this.stackTraceArray;
	$s.pop();
}
haxe.exception.Exception.__name__ = ["haxe","exception","Exception"];
haxe.exception.Exception.prototype = {
	baseException: null
	,innerException: null
	,message: null
	,stackTrace: null
	,stackTraceArray: null
	,generateStackTrace: function(numberOfStackTraceShifts) {
		$s.push("haxe.exception.Exception::generateStackTrace");
		var $spos = $s.length;
		this.stackTraceArray = haxe.Stack.callStack().slice(numberOfStackTraceShifts + 1);
		var exceptionClass = Type.getClass(this);
		while(haxe.exception.Exception != exceptionClass) {
			this.stackTraceArray.shift();
			exceptionClass = Type.getSuperClass(exceptionClass);
		}
		$s.pop();
	}
	,getBaseException: function() {
		$s.push("haxe.exception.Exception::getBaseException");
		var $spos = $s.length;
		var result = this;
		while(null != result.innerException) result = result.innerException;
		$s.pop();
		return result;
		$s.pop();
	}
	,toString: function() {
		$s.push("haxe.exception.Exception::toString");
		var $spos = $s.length;
		var $tmp = this.message + haxe.Stack.toString(this.stackTraceArray);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: haxe.exception.Exception
	,__properties__: {get_baseException:"getBaseException"}
}
haxe.exception.ArgumentNullException = $hxClasses["haxe.exception.ArgumentNullException"] = function(argumentName,numberOfStackTraceShifts) {
	$s.push("haxe.exception.ArgumentNullException::new");
	var $spos = $s.length;
	haxe.exception.Exception.call(this,"Argument " + argumentName + " must be non-null",null,numberOfStackTraceShifts);
	$s.pop();
}
haxe.exception.ArgumentNullException.__name__ = ["haxe","exception","ArgumentNullException"];
haxe.exception.ArgumentNullException.__super__ = haxe.exception.Exception;
haxe.exception.ArgumentNullException.prototype = $extend(haxe.exception.Exception.prototype,{
	__class__: haxe.exception.ArgumentNullException
});
hsl.haxe.Bond = $hxClasses["hsl.haxe.Bond"] = function() {
	$s.push("hsl.haxe.Bond::new");
	var $spos = $s.length;
	this.halted = false;
	$s.pop();
}
hsl.haxe.Bond.__name__ = ["hsl","haxe","Bond"];
hsl.haxe.Bond.prototype = {
	halted: null
	,willDestroyOnUse: null
	,destroy: function() {
		$s.push("hsl.haxe.Bond::destroy");
		var $spos = $s.length;
		$s.pop();
	}
	,destroyOnUse: function() {
		$s.push("hsl.haxe.Bond::destroyOnUse");
		var $spos = $s.length;
		this.willDestroyOnUse = true;
		$s.pop();
		return this;
		$s.pop();
	}
	,halt: function() {
		$s.push("hsl.haxe.Bond::halt");
		var $spos = $s.length;
		this.halted = true;
		$s.pop();
	}
	,resume: function() {
		$s.push("hsl.haxe.Bond::resume");
		var $spos = $s.length;
		this.halted = false;
		$s.pop();
	}
	,toString: function() {
		$s.push("hsl.haxe.Bond::toString");
		var $spos = $s.length;
		$s.pop();
		return "[Bond]";
		$s.pop();
	}
	,__class__: hsl.haxe.Bond
}
if(!hsl.haxe._DirectSignaler) hsl.haxe._DirectSignaler = {}
hsl.haxe._DirectSignaler.LinkedBond = $hxClasses["hsl.haxe._DirectSignaler.LinkedBond"] = function() {
	$s.push("hsl.haxe._DirectSignaler.LinkedBond::new");
	var $spos = $s.length;
	hsl.haxe.Bond.call(this);
	this.destroyed = false;
	$s.pop();
}
hsl.haxe._DirectSignaler.LinkedBond.__name__ = ["hsl","haxe","_DirectSignaler","LinkedBond"];
hsl.haxe._DirectSignaler.LinkedBond.__super__ = hsl.haxe.Bond;
hsl.haxe._DirectSignaler.LinkedBond.prototype = $extend(hsl.haxe.Bond.prototype,{
	destroyed: null
	,next: null
	,previous: null
	,callListener: function(data,currentTarget,origin,propagationStatus) {
		$s.push("hsl.haxe._DirectSignaler.LinkedBond::callListener");
		var $spos = $s.length;
		$s.pop();
		return 0;
		$s.pop();
	}
	,determineEquals: function(value) {
		$s.push("hsl.haxe._DirectSignaler.LinkedBond::determineEquals");
		var $spos = $s.length;
		$s.pop();
		return false;
		$s.pop();
	}
	,destroy: function() {
		$s.push("hsl.haxe._DirectSignaler.LinkedBond::destroy");
		var $spos = $s.length;
		if(false == this.destroyed) {
			this.previous.next = this.next;
			this.next.previous = this.previous;
			this.destroyed = true;
		}
		$s.pop();
	}
	,unlink: function() {
		$s.push("hsl.haxe._DirectSignaler.LinkedBond::unlink");
		var $spos = $s.length;
		if(false == this.destroyed) {
			this.previous.next = this.next;
			this.next.previous = this.previous;
			this.destroyed = true;
		}
		$s.pop();
	}
	,__class__: hsl.haxe._DirectSignaler.LinkedBond
});
hsl.haxe._DirectSignaler.SentinelBond = $hxClasses["hsl.haxe._DirectSignaler.SentinelBond"] = function() {
	$s.push("hsl.haxe._DirectSignaler.SentinelBond::new");
	var $spos = $s.length;
	hsl.haxe._DirectSignaler.LinkedBond.call(this);
	this.next = this.previous = this;
	$s.pop();
}
hsl.haxe._DirectSignaler.SentinelBond.__name__ = ["hsl","haxe","_DirectSignaler","SentinelBond"];
hsl.haxe._DirectSignaler.SentinelBond.__super__ = hsl.haxe._DirectSignaler.LinkedBond;
hsl.haxe._DirectSignaler.SentinelBond.prototype = $extend(hsl.haxe._DirectSignaler.LinkedBond.prototype,{
	isConnected: null
	,add: function(value) {
		$s.push("hsl.haxe._DirectSignaler.SentinelBond::add");
		var $spos = $s.length;
		value.next = this;
		value.previous = this.previous;
		var $tmp = this.previous = this.previous.next = value;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,callListener: function(data,currentTarget,origin,propagationStatus) {
		$s.push("hsl.haxe._DirectSignaler.SentinelBond::callListener");
		var $spos = $s.length;
		var node = this.next;
		while(node != this && 1 != propagationStatus) {
			propagationStatus = node.callListener(data,currentTarget,origin,propagationStatus);
			node = node.next;
		}
		$s.pop();
		return propagationStatus;
		$s.pop();
	}
	,getIsConnected: function() {
		$s.push("hsl.haxe._DirectSignaler.SentinelBond::getIsConnected");
		var $spos = $s.length;
		var $tmp = this.next != this;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(value) {
		$s.push("hsl.haxe._DirectSignaler.SentinelBond::remove");
		var $spos = $s.length;
		var node = this.next;
		while(node != this) {
			if(node.determineEquals(value)) {
				if(false == node.destroyed) {
					node.previous.next = node.next;
					node.next.previous = node.previous;
					node.destroyed = true;
				}
				break;
			}
			node = node.next;
		}
		$s.pop();
	}
	,__class__: hsl.haxe._DirectSignaler.SentinelBond
	,__properties__: {get_isConnected:"getIsConnected"}
});
var com = com || {}
if(!com.wighawag) com.wighawag = {}
if(!com.wighawag.log) com.wighawag.log = {}
com.wighawag.log.EventSignaler = $hxClasses["com.wighawag.log.EventSignaler"] = function() {
	$s.push("com.wighawag.log.EventSignaler::new");
	var $spos = $s.length;
	$s.pop();
}
com.wighawag.log.EventSignaler.__name__ = ["com","wighawag","log","EventSignaler"];
com.wighawag.log.EventSignaler.dispatchEvent = function(value) {
	$s.push("com.wighawag.log.EventSignaler::dispatchEvent");
	var $spos = $s.length;
	com.wighawag.log.EventSignaler.event.dispatch(value,null,{ fileName : "EventSignaler.hx", lineNumber : 17, className : "com.wighawag.log.EventSignaler", methodName : "dispatchEvent"});
	$s.pop();
}
com.wighawag.log.EventSignaler.dispatchWarning = function(value) {
	$s.push("com.wighawag.log.EventSignaler::dispatchWarning");
	var $spos = $s.length;
	com.wighawag.log.EventSignaler.warning.dispatch(value,null,{ fileName : "EventSignaler.hx", lineNumber : 22, className : "com.wighawag.log.EventSignaler", methodName : "dispatchWarning"});
	$s.pop();
}
com.wighawag.log.EventSignaler.dispatchError = function(value) {
	$s.push("com.wighawag.log.EventSignaler::dispatchError");
	var $spos = $s.length;
	com.wighawag.log.EventSignaler.error.dispatch(value,null,{ fileName : "EventSignaler.hx", lineNumber : 27, className : "com.wighawag.log.EventSignaler", methodName : "dispatchError"});
	$s.pop();
}
com.wighawag.log.EventSignaler.dispatchCriticalError = function(value) {
	$s.push("com.wighawag.log.EventSignaler::dispatchCriticalError");
	var $spos = $s.length;
	com.wighawag.log.EventSignaler.criticalError.dispatch(value,null,{ fileName : "EventSignaler.hx", lineNumber : 32, className : "com.wighawag.log.EventSignaler", methodName : "dispatchCriticalError"});
	$s.pop();
}
com.wighawag.log.EventSignaler.prototype = {
	__class__: com.wighawag.log.EventSignaler
}
if(!haxe.macro) haxe.macro = {}
haxe.macro.Context = $hxClasses["haxe.macro.Context"] = function() { }
haxe.macro.Context.__name__ = ["haxe","macro","Context"];
haxe.macro.Context.prototype = {
	__class__: haxe.macro.Context
}
var IntHash = $hxClasses["IntHash"] = function() {
	$s.push("IntHash::new");
	var $spos = $s.length;
	this.h = {}
	if(this.h.__proto__ != null) {
		this.h.__proto__ = null;
		delete(this.h.__proto__);
	}
	$s.pop();
}
IntHash.__name__ = ["IntHash"];
IntHash.prototype = {
	h: null
	,set: function(key,value) {
		$s.push("IntHash::set");
		var $spos = $s.length;
		this.h[key] = value;
		$s.pop();
	}
	,get: function(key) {
		$s.push("IntHash::get");
		var $spos = $s.length;
		var $tmp = this.h[key];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,exists: function(key) {
		$s.push("IntHash::exists");
		var $spos = $s.length;
		var $tmp = this.h[key] != null;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(key) {
		$s.push("IntHash::remove");
		var $spos = $s.length;
		if(this.h[key] == null) {
			$s.pop();
			return false;
		}
		delete(this.h[key]);
		$s.pop();
		return true;
		$s.pop();
	}
	,keys: function() {
		$s.push("IntHash::keys");
		var $spos = $s.length;
		var a = new Array();
		for( x in this.h ) a.push(x);
		var $tmp = a.iterator();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,iterator: function() {
		$s.push("IntHash::iterator");
		var $spos = $s.length;
		var $tmp = { ref : this.h, it : this.keys(), hasNext : function() {
			$s.push("IntHash::iterator@66");
			var $spos = $s.length;
			var $tmp = this.it.hasNext();
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("IntHash::iterator@67");
			var $spos = $s.length;
			var i = this.it.next();
			var $tmp = this.ref[i];
			$s.pop();
			return $tmp;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("IntHash::toString");
		var $spos = $s.length;
		var s = new StringBuf();
		s.b[s.b.length] = "{";
		var it = this.keys();
		while( it.hasNext() ) {
			var i = it.next();
			s.b[s.b.length] = i == null?"null":i;
			s.b[s.b.length] = " => ";
			s.add(Std.string(this.get(i)));
			if(it.hasNext()) s.b[s.b.length] = ", ";
		}
		s.b[s.b.length] = "}";
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: IntHash
}
var de = de || {}
if(!de.polygonal) de.polygonal = {}
if(!de.polygonal.ds) de.polygonal.ds = {}
de.polygonal.ds.Hashable = $hxClasses["de.polygonal.ds.Hashable"] = function() { }
de.polygonal.ds.Hashable.__name__ = ["de","polygonal","ds","Hashable"];
de.polygonal.ds.Hashable.prototype = {
	key: null
	,__class__: de.polygonal.ds.Hashable
}
de.polygonal.ds.HashableItem = $hxClasses["de.polygonal.ds.HashableItem"] = function() {
	$s.push("de.polygonal.ds.HashableItem::new");
	var $spos = $s.length;
	this.key = de.polygonal.ds.HashKey._counter++;
	$s.pop();
}
de.polygonal.ds.HashableItem.__name__ = ["de","polygonal","ds","HashableItem"];
de.polygonal.ds.HashableItem.__interfaces__ = [de.polygonal.ds.Hashable];
de.polygonal.ds.HashableItem.prototype = {
	key: null
	,__class__: de.polygonal.ds.HashableItem
}
if(!de.polygonal.core) de.polygonal.core = {}
if(!de.polygonal.core.event) de.polygonal.core.event = {}
de.polygonal.core.event.IObservable = $hxClasses["de.polygonal.core.event.IObservable"] = function() { }
de.polygonal.core.event.IObservable.__name__ = ["de","polygonal","core","event","IObservable"];
de.polygonal.core.event.IObservable.prototype = {
	attach: null
	,detach: null
	,notify: null
	,__class__: de.polygonal.core.event.IObservable
}
de.polygonal.core.event.Observable = $hxClasses["de.polygonal.core.event.Observable"] = function(poolSize,source) {
	$s.push("de.polygonal.core.event.Observable::new");
	var $spos = $s.length;
	if(poolSize == null) poolSize = 0;
	de.polygonal.ds.HashableItem.call(this);
	this._source = source == null?this:source;
	this._observer = null;
	this._observerCount = 0;
	this._head = new de.polygonal.core.event.ObserverNode();
	this._tail = this._head;
	this._hook = null;
	this._blacklist = 0;
	this._poolSize = 0;
	this._poolCapacity = poolSize;
	this._freed = false;
	this._updating = false;
	this._stack = new de.polygonal.ds.ArrayedStack();
	this._type = 0;
	this._userData = null;
	this._nodeLookup = new IntHash();
	$s.pop();
}
de.polygonal.core.event.Observable.__name__ = ["de","polygonal","core","event","Observable"];
de.polygonal.core.event.Observable.__interfaces__ = [de.polygonal.core.event.IObservable];
de.polygonal.core.event.Observable._registry = null;
de.polygonal.core.event.Observable._getRegistry = function() {
	$s.push("de.polygonal.core.event.Observable::_getRegistry");
	var $spos = $s.length;
	if(de.polygonal.core.event.Observable._registry == null) de.polygonal.core.event.Observable._registry = new de.polygonal.ds.ListSet();
	var $tmp = de.polygonal.core.event.Observable._registry;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.event.Observable.dump = function() {
	$s.push("de.polygonal.core.event.Observable::dump");
	var $spos = $s.length;
	var c = 0;
	var s = "";
	var $it0 = de.polygonal.core.event.Observable._getRegistry().iterator();
	while( $it0.hasNext() ) {
		var observable = $it0.next();
		c += observable.size();
		s += de.polygonal.core.fmt.Sprintf.format("%-20s -> %s\n",[de.polygonal.core.fmt.StringUtil.ellipsis(Std.string(observable),20,true),observable.getObserverList().join(",")]);
	}
	var $tmp = de.polygonal.core.fmt.Sprintf.format("#observers: %03d\n",[c]) + s;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.event.Observable.release = function() {
	$s.push("de.polygonal.core.event.Observable::release");
	var $spos = $s.length;
	try {
		var $it0 = de.polygonal.core.event.Observable._getRegistry().iterator();
		while( $it0.hasNext() ) {
			var observable = $it0.next();
			observable.clear();
			observable.free();
		}
		de.polygonal.core.event.Observable._getRegistry().clear();
	} catch( unknown ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
	}
	$s.pop();
}
de.polygonal.core.event.Observable.totalObserverCount = function() {
	$s.push("de.polygonal.core.event.Observable::totalObserverCount");
	var $spos = $s.length;
	var c = 0;
	var $it0 = de.polygonal.core.event.Observable._getRegistry().iterator();
	while( $it0.hasNext() ) {
		var observable = $it0.next();
		c += observable.size();
	}
	$s.pop();
	return c;
	$s.pop();
}
de.polygonal.core.event.Observable.bind = function(f,source,type) {
	$s.push("de.polygonal.core.event.Observable::bind");
	var $spos = $s.length;
	source.attach(de.polygonal.core.event._Observable.Bind.get(f,type));
	$s.pop();
}
de.polygonal.core.event.Observable.bindMulti = function(f,source,types) {
	$s.push("de.polygonal.core.event.Observable::bindMulti");
	var $spos = $s.length;
	source.attach(de.polygonal.core.event._Observable.MultiBind.get(f,types));
	$s.pop();
}
de.polygonal.core.event.Observable.delegate = function(f) {
	$s.push("de.polygonal.core.event.Observable::delegate");
	var $spos = $s.length;
	var $tmp = de.polygonal.core.event._Observable.Delegate.get(f);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.event.Observable.__super__ = de.polygonal.ds.HashableItem;
de.polygonal.core.event.Observable.prototype = $extend(de.polygonal.ds.HashableItem.prototype,{
	_source: null
	,_observer: null
	,_observerCount: null
	,_head: null
	,_tail: null
	,_hook: null
	,_blacklist: null
	,_poolSize: null
	,_poolCapacity: null
	,_freed: null
	,_updating: null
	,_stack: null
	,_type: null
	,_userData: null
	,_nodeLookup: null
	,free: function() {
		$s.push("de.polygonal.core.event.Observable::free");
		var $spos = $s.length;
		if(this._freed) {
			$s.pop();
			return;
		}
		this.clear();
		this._stack.free();
		var n = this._head;
		while(n != null) {
			var t = n.next;
			n.prev = null;
			n.next = null;
			n.observer = null;
			n = t;
		}
		this._nodeLookup = null;
		this._stack = null;
		this._head = null;
		this._tail = null;
		this._userData = null;
		this._freed = true;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.core.event.Observable::size");
		var $spos = $s.length;
		var $tmp = this._observerCount;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,reserve: function(x) {
		$s.push("de.polygonal.core.event.Observable::reserve");
		var $spos = $s.length;
		this._poolCapacity = x;
		if(x < this._poolSize) {
			var _g1 = 0, _g = this._poolSize - x;
			while(_g1 < _g) {
				var i = _g1++;
				this._head = this._head.next;
			}
		} else {
			var _g1 = 0, _g = x - this._poolSize;
			while(_g1 < _g) {
				var i = _g1++;
				this._tail = this._tail.next = new de.polygonal.core.event.ObserverNode();
			}
		}
		this._poolSize = x;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.core.event.Observable::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		if(this._observerCount > 0) de.polygonal.core.event.Observable._getRegistry().remove(this);
		this._stack.clear(null);
		this._userData = false;
		this._updating = false;
		this._hook = null;
		this._observer = null;
		this._observerCount = 0;
		this._nodeLookup = new IntHash();
		if(purge) {
			this._poolSize = 0;
			var node = this._head;
			while(node != null) {
				var next = node.next;
				node.prev = null;
				node.next = null;
				node.observer = null;
				node = next;
			}
			this._head = new de.polygonal.core.event.ObserverNode();
			this._tail = this._head;
		}
		$s.pop();
	}
	,_findNode: function(o) {
		$s.push("de.polygonal.core.event.Observable::_findNode");
		var $spos = $s.length;
		var $tmp = this._nodeLookup.get(o.__guid);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,attach: function(o,mask) {
		$s.push("de.polygonal.core.event.Observable::attach");
		var $spos = $s.length;
		if(mask == null) mask = 0;
		if(this._freed) {
			$s.pop();
			return;
		}
		if(o.__guid == 0) o.__guid = de.polygonal.core.event.Observable._nextGUID++;
		var n = this._nodeLookup.get(o.__guid);
		if(n != null) {
			if(n.mask == -1) {
				if(mask != 0) n.mask = mask & 134217727;
			} else if(mask != 0) n.mask |= mask & 134217727; else n.mask = -1;
			$s.pop();
			return;
		}
		if(this._poolCapacity == 0) n = new de.polygonal.core.event.ObserverNode(); else if(this._poolSize == 0) n = new de.polygonal.core.event.ObserverNode(); else {
			n = this._head;
			this._head = this._head.next;
			this._poolSize--;
		}
		n.observer = o;
		n.mask = mask == 0?-1:mask & 134217727;
		this._nodeLookup.set(o.__guid,n);
		n.next = this._observer;
		if(this._observer != null) this._observer.prev = n;
		this._observer = n;
		this._observerCount++;
		if(this._observerCount == 1) de.polygonal.core.event.Observable._getRegistry().set(this);
		$s.pop();
	}
	,detach: function(o,mask) {
		$s.push("de.polygonal.core.event.Observable::detach");
		var $spos = $s.length;
		if(mask == null) mask = 0;
		if(this._freed) {
			$s.pop();
			return;
		}
		var n = this._nodeLookup.get(o.__guid);
		if(n == null) {
			$s.pop();
			return;
		}
		if(mask != 0) {
			n.mask &= ~(mask & 134217727);
			n.mask &= 134217727;
			if(n.mask > 0) {
				$s.pop();
				return;
			}
		}
		if(n.prev != null) n.prev.next = n.next;
		if(n.next != null) n.next.prev = n.prev;
		if(n == this._observer) this._observer = n.next;
		if(n == this._hook) this._hook = this._hook.next;
		if(this._updating) {
			var i = 0;
			var k = this._stack._top;
			while(i < k) {
				if(this._stack.get(i) == n) this._stack.set(i,n.next);
				i += 3;
			}
		}
		this._nodeLookup.remove(n.observer.__guid);
		n.observer = null;
		n.prev = n.next = null;
		if(this._poolCapacity > 0) {
			if(this._poolSize < this._poolCapacity) {
				this._tail = this._tail.next = n;
				this._poolSize++;
			}
		}
		this._observerCount--;
		if(this._observerCount == 0) de.polygonal.core.event.Observable._getRegistry().remove(this);
		$s.pop();
	}
	,notify: function(type,userData) {
		$s.push("de.polygonal.core.event.Observable::notify");
		var $spos = $s.length;
		if(this._observerCount == 0 || (type & this._blacklist) == type) {
			$s.pop();
			return;
		}
		var eventBits = type & 134217727;
		if(this._updating) {
			this._stack.push(this._hook);
			this._stack.push(this._type);
			this._stack.push(this._userData);
			this._type = type;
			this._userData = userData;
			this._update(this._observer,type,eventBits,userData);
		} else {
			this._updating = true;
			this._type = type;
			this._userData = userData;
			this._update(this._observer,type,eventBits,userData);
			if(this._stack == null) {
				this._hook = null;
				this._observer = null;
				$s.pop();
				return;
			}
			if(this._stack._top > 0) while(this._stack._top > 0) {
				userData = this._stack.pop();
				type = this._stack.pop();
				this._update(this._stack.pop(),type,eventBits,userData);
			}
			this._updating = false;
			this._hook = null;
		}
		$s.pop();
	}
	,mute: function(x) {
		$s.push("de.polygonal.core.event.Observable::mute");
		var $spos = $s.length;
		this._blacklist |= x;
		$s.pop();
	}
	,unmute: function(x) {
		$s.push("de.polygonal.core.event.Observable::unmute");
		var $spos = $s.length;
		this._blacklist = this._blacklist & ~x;
		$s.pop();
	}
	,contains: function(o) {
		$s.push("de.polygonal.core.event.Observable::contains");
		var $spos = $s.length;
		var n = this._observer;
		while(n != null) {
			if(n.observer == o) {
				$s.pop();
				return true;
			}
			n = n.next;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,getObserverList: function() {
		$s.push("de.polygonal.core.event.Observable::getObserverList");
		var $spos = $s.length;
		var v = new Array();
		var n = this._observer;
		while(n != null) {
			v.push(n.observer);
			n = n.next;
		}
		$s.pop();
		return v;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.core.event.Observable::iterator");
		var $spos = $s.length;
		var $tmp = new de.polygonal.core.event._Observable.ObservableIterator(this._observer);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_update: function(node,type,eventBits,userData) {
		$s.push("de.polygonal.core.event.Observable::_update");
		var $spos = $s.length;
		while(node != null) {
			this._hook = node.next;
			if((node.mask & eventBits) > 0) node.observer.update(type,this._source,userData);
			node = this._hook;
		}
		$s.pop();
	}
	,__class__: de.polygonal.core.event.Observable
});
if(!de.polygonal.ui) de.polygonal.ui = {}
de.polygonal.ui.UI = $hxClasses["de.polygonal.ui.UI"] = function() {
	$s.push("de.polygonal.ui.UI::new");
	var $spos = $s.length;
	de.polygonal.core.event.Observable.call(this);
	this.reserve(10);
	this._mouse = new de.polygonal.core.math.Vec2();
	this._tmp = new de.polygonal.core.math.Vec2();
	this._keysDown = new de.polygonal.ds.IntHashSet(256);
	this._keysDownItr = this._keysDown.iterator();
	this._keysDownTimer = new de.polygonal.ds.IntIntHashTable(256);
	this._sequenceList = new de.polygonal.ds.DA();
	this._sequenceListItr = this._sequenceList.iterator();
	this._registerEvents();
	$s.pop();
}
de.polygonal.ui.UI.__name__ = ["de","polygonal","ui","UI"];
de.polygonal.ui.UI.__properties__ = {get_get:"_getGetter"}
de.polygonal.ui.UI._instance = null;
de.polygonal.ui.UI.instance = function() {
	$s.push("de.polygonal.ui.UI::instance");
	var $spos = $s.length;
	if(de.polygonal.ui.UI._instance == null) de.polygonal.ui.UI._instance = new de.polygonal.ui.UI();
	var $tmp = de.polygonal.ui.UI._instance;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ui.UI.get = null;
de.polygonal.ui.UI._getGetter = function() {
	$s.push("de.polygonal.ui.UI::_getGetter");
	var $spos = $s.length;
	var $tmp = de.polygonal.ui.UI.instance();
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ui.UI.sAttach = function(o,mask) {
	$s.push("de.polygonal.ui.UI::sAttach");
	var $spos = $s.length;
	if(mask == null) mask = 0;
	de.polygonal.ui.UI.instance().attach(o,mask);
	$s.pop();
}
de.polygonal.ui.UI.sDetach = function(o,mask) {
	$s.push("de.polygonal.ui.UI::sDetach");
	var $spos = $s.length;
	if(mask == null) mask = 0;
	de.polygonal.ui.UI.instance().detach(o,mask);
	$s.pop();
}
de.polygonal.ui.UI.__super__ = de.polygonal.core.event.Observable;
de.polygonal.ui.UI.prototype = $extend(de.polygonal.core.event.Observable.prototype,{
	currKeyHoldTime: null
	,_currKeyHoldTimeGetter: function() {
		$s.push("de.polygonal.ui.UI::_currKeyHoldTimeGetter");
		var $spos = $s.length;
		var $tmp = this._keyTimer;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,currKeyCode: null
	,_currKeyCodeGetter: function() {
		$s.push("de.polygonal.ui.UI::_currKeyCodeGetter");
		var $spos = $s.length;
		var $tmp = this._currKeyCode;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,currMouseHoldTime: null
	,_currMouseHoldTimeGetter: function() {
		$s.push("de.polygonal.ui.UI::_currMouseHoldTimeGetter");
		var $spos = $s.length;
		if((this._bits & 8) != 0) {
			var $tmp = de.polygonal.core.time.Timebase.instance()._realTime - this._mouseTimer;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return -1.;
		$s.pop();
	}
	,isAnyKeyDown: null
	,_isAnyKeyDownGetter: function() {
		$s.push("de.polygonal.ui.UI::_isAnyKeyDownGetter");
		var $spos = $s.length;
		var $tmp = !(this._keysDown._size == 0);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isCtrlDown: null
	,_isCtrlDownGetter: function() {
		$s.push("de.polygonal.ui.UI::_isCtrlDownGetter");
		var $spos = $s.length;
		var $tmp = (this._bits & 1) != 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isAltDown: null
	,_isAltDownGetter: function() {
		$s.push("de.polygonal.ui.UI::_isAltDownGetter");
		var $spos = $s.length;
		var $tmp = (this._bits & 2) != 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isShiftDown: null
	,_isShiftDownGetter: function() {
		$s.push("de.polygonal.ui.UI::_isShiftDownGetter");
		var $spos = $s.length;
		var $tmp = (this._bits & 4) != 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isMouseDown: null
	,_isMouseDownGetter: function() {
		$s.push("de.polygonal.ui.UI::_isMouseDownGetter");
		var $spos = $s.length;
		var $tmp = (this._bits & 8) != 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,mouse: null
	,_mouseGetter: function() {
		$s.push("de.polygonal.ui.UI::_mouseGetter");
		var $spos = $s.length;
		this._tmp.x = this._mouse.x;
		this._tmp.y = this._mouse.y;
		var $tmp = this._tmp;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_mouseMoveEvent: null
	,_keysDown: null
	,_keysDownItr: null
	,_keysDownTimer: null
	,_shortcutList: null
	,_shortcutListItr: null
	,_sequenceList: null
	,_sequenceListItr: null
	,_currKeyCode: null
	,_currCharCode: null
	,_mouse: null
	,_keyTimer: null
	,_mouseTimer: null
	,_bits: null
	,_tmp: null
	,free: function() {
		$s.push("de.polygonal.ui.UI::free");
		var $spos = $s.length;
		this._unregisterEvents();
		this.clear(true);
		this._keysDown.free();
		this._keysDownTimer.free();
		var $it0 = this._shortcutList.iterator();
		while( $it0.hasNext() ) {
			var i = $it0.next();
			i.free();
		}
		this._shortcutList.free();
		var $it1 = this._sequenceList.iterator();
		while( $it1.hasNext() ) {
			var i = $it1.next();
			i.free();
		}
		this._sequenceList.free();
		this._sequenceList = null;
		this._sequenceListItr = null;
		this._shortcutList = null;
		this._shortcutListItr = null;
		this._keysDownTimer = null;
		this._keysDown = null;
		de.polygonal.ui.UI._instance = null;
		$s.pop();
	}
	,isKeyDown: function(keyCode) {
		$s.push("de.polygonal.ui.UI::isKeyDown");
		var $spos = $s.length;
		var $tmp = this._keysDown.has(keyCode);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getKeyHoldTime: function(keyCode) {
		$s.push("de.polygonal.ui.UI::getKeyHoldTime");
		var $spos = $s.length;
		var time = this._keysDownTimer.get(keyCode);
		if(time != -2147483648) {
			var $tmp = de.polygonal.core.time.Timebase.instance()._realTime - time / 65536.0;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return -1;
		$s.pop();
	}
	,registerShortcut: function(name,keyCodes) {
		$s.push("de.polygonal.ui.UI::registerShortcut");
		var $spos = $s.length;
		if(this._shortcutList == null) {
			this._shortcutList = new de.polygonal.ds.DA();
			this._shortcutListItr = this._shortcutList.iterator();
		}
		if(true != !Lambda.exists(this._shortcutList,function(val) {
			$s.push("de.polygonal.ui.UI::registerShortcut@239");
			var $spos = $s.length;
			var $tmp = val.name == name;
			$s.pop();
			return $tmp;
			$s.pop();
		})) throw new de.polygonal.ASE("duplicate shortcut",{ fileName : "UI.hx", lineNumber : 239, className : "de.polygonal.ui.UI", methodName : "registerShortcut"}); else null;
		this._shortcutList.pushBack(new de.polygonal.ui._UI.Shortcut(name,keyCodes));
		$s.pop();
	}
	,unregisterShortcut: function(name) {
		$s.push("de.polygonal.ui.UI::unregisterShortcut");
		var $spos = $s.length;
		var $it0 = this._shortcutList.iterator();
		while( $it0.hasNext() ) {
			var shortcut = $it0.next();
			if(shortcut.name == name) {
				this._shortcutList.remove(shortcut);
				break;
			}
		}
		$s.pop();
	}
	,registerSequence: function(name,keyCodes) {
		$s.push("de.polygonal.ui.UI::registerSequence");
		var $spos = $s.length;
		if(true != !Lambda.exists(this._sequenceList,function(val) {
			$s.push("de.polygonal.ui.UI::registerSequence@258");
			var $spos = $s.length;
			var $tmp = val.name == name;
			$s.pop();
			return $tmp;
			$s.pop();
		})) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("sequence with id '%s' already exists",[name]),{ fileName : "UI.hx", lineNumber : 258, className : "de.polygonal.ui.UI", methodName : "registerSequence"}); else null;
		this._sequenceList.pushBack(new de.polygonal.ui._UI.Sequence(name,keyCodes));
		$s.pop();
	}
	,unregisterSequence: function(name) {
		$s.push("de.polygonal.ui.UI::unregisterSequence");
		var $spos = $s.length;
		var $it0 = this._sequenceList.iterator();
		while( $it0.hasNext() ) {
			var sequence = $it0.next();
			if(sequence.name == name) {
				this._sequenceList.remove(sequence);
				break;
			}
		}
		$s.pop();
	}
	,_registerEvents: function() {
		$s.push("de.polygonal.ui.UI::_registerEvents");
		var $spos = $s.length;
		var stage = jeash.Lib.jeashGetCurrent().GetStage();
		stage.addEventListener(jeash.events.KeyboardEvent.KEY_DOWN,this._onKeyDown.$bind(this));
		stage.addEventListener(jeash.events.KeyboardEvent.KEY_UP,this._onKeyUp.$bind(this));
		stage.addEventListener(jeash.events.MouseEvent.MOUSE_MOVE,this._onMouseMove.$bind(this));
		stage.addEventListener(jeash.events.MouseEvent.MOUSE_DOWN,this._onMouseDown.$bind(this));
		stage.addEventListener(jeash.events.MouseEvent.MOUSE_UP,this._onMouseUp.$bind(this));
		$s.pop();
	}
	,_unregisterEvents: function() {
		$s.push("de.polygonal.ui.UI::_unregisterEvents");
		var $spos = $s.length;
		var stage = jeash.Lib.jeashGetCurrent().GetStage();
		stage.removeEventListener(jeash.events.KeyboardEvent.KEY_DOWN,this._onKeyDown.$bind(this));
		stage.removeEventListener(jeash.events.KeyboardEvent.KEY_UP,this._onKeyUp.$bind(this));
		stage.removeEventListener(jeash.events.MouseEvent.MOUSE_MOVE,this._onMouseMove.$bind(this));
		stage.removeEventListener(jeash.events.MouseEvent.MOUSE_DOWN,this._onMouseDown.$bind(this));
		stage.removeEventListener(jeash.events.MouseEvent.MOUSE_UP,this._onMouseUp.$bind(this));
		$s.pop();
	}
	,_onKeyDown: function(e) {
		$s.push("de.polygonal.ui.UI::_onKeyDown");
		var $spos = $s.length;
		var keyCode = Std["int"](e.keyCode);
		if(this._keysDown.has(keyCode)) {
			$s.pop();
			return;
		}
		this._keysDown.set(keyCode);
		this._keysDownTimer.remove(keyCode);
		this._keysDownTimer.set(keyCode,Std["int"](de.polygonal.core.time.Timebase.instance()._realTime * 65536.));
		if(this._shortcutList != null) {
			this._shortcutListItr.reset();
			var $it0 = this._shortcutListItr;
			while( $it0.hasNext() ) {
				var shortcut = $it0.next();
				shortcut.insert(keyCode);
				if(shortcut.isComplete) this.notify(134217856,shortcut.name);
			}
		}
		if(this._sequenceList != null) {
			this._sequenceListItr.reset();
			var $it1 = this._sequenceListItr;
			while( $it1.hasNext() ) {
				var sequence = $it1.next();
				sequence.insert(keyCode);
				if(sequence.isComplete) this.notify(134217984,sequence.name);
			}
		}
		this._currKeyCode = keyCode;
		this.notify(134217729,keyCode);
		$s.pop();
	}
	,_onKeyUp: function(e) {
		$s.push("de.polygonal.ui.UI::_onKeyUp");
		var $spos = $s.length;
		var keyCode = Std["int"](e.keyCode);
		if(!this._keysDown.has(keyCode)) {
			$s.pop();
			return;
		}
		this._keyTimer = de.polygonal.core.time.Timebase.instance()._realTime - this._keysDownTimer.get(keyCode) / 65536.0;
		if(true != this._keysDownTimer.clr(keyCode)) throw new de.polygonal.ASE("_keysDownTimer.clr(keyCode)",{ fileName : "UI.hx", lineNumber : 399, className : "de.polygonal.ui.UI", methodName : "_onKeyUp"}); else null;
		this._keysDown.remove(keyCode);
		if(this._shortcutList != null) {
			this._shortcutListItr.reset();
			var $it0 = this._shortcutListItr;
			while( $it0.hasNext() ) {
				var shortcut = $it0.next();
				shortcut.remove(keyCode);
			}
		}
		this._currKeyCode = keyCode;
		this.notify(134217730,keyCode);
		$s.pop();
	}
	,_onMouseMove: function(e) {
		$s.push("de.polygonal.ui.UI::_onMouseMove");
		var $spos = $s.length;
		this._mouseMoveEvent = e;
		this.notify(134217792,this._getMouse(e));
		$s.pop();
	}
	,_onMouseDown: function(e) {
		$s.push("de.polygonal.ui.UI::_onMouseDown");
		var $spos = $s.length;
		this._bits = this._bits | 8;
		this._mouseTimer = de.polygonal.core.time.Timebase.instance()._realTime;
		this.notify(134217736,this._getMouse(e));
		$s.pop();
	}
	,_onMouseUp: function(e) {
		$s.push("de.polygonal.ui.UI::_onMouseUp");
		var $spos = $s.length;
		this._bits = this._bits & -9;
		this.notify(134217744,this._getMouse(e));
		$s.pop();
	}
	,_getMouse: function(e) {
		$s.push("de.polygonal.ui.UI::_getMouse");
		var $spos = $s.length;
		this._mouse.x = e.stageX;
		this._mouse.y = e.stageY;
		var $tmp = this._mouse;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ui.UI
	,__properties__: {get_mouse:"_mouseGetter",get_isMouseDown:"_isMouseDownGetter",get_isShiftDown:"_isShiftDownGetter",get_isAltDown:"_isAltDownGetter",get_isCtrlDown:"_isCtrlDownGetter",get_isAnyKeyDown:"_isAnyKeyDownGetter",get_currMouseHoldTime:"_currMouseHoldTimeGetter",get_currKeyCode:"_currKeyCodeGetter",get_currKeyHoldTime:"_currKeyHoldTimeGetter"}
});
if(!de.polygonal.ui._UI) de.polygonal.ui._UI = {}
de.polygonal.ui._UI.Shortcut = $hxClasses["de.polygonal.ui._UI.Shortcut"] = function(name,keyCodes) {
	$s.push("de.polygonal.ui._UI.Shortcut::new");
	var $spos = $s.length;
	this.name = name;
	this._set = new de.polygonal.ds.IntHashSet(256);
	var _g1 = 0, _g = keyCodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		this._set.set(keyCodes[i]);
	}
	this._cur = new de.polygonal.ds.IntHashSet(256);
	$s.pop();
}
de.polygonal.ui._UI.Shortcut.__name__ = ["de","polygonal","ui","_UI","Shortcut"];
de.polygonal.ui._UI.Shortcut.prototype = {
	name: null
	,isComplete: null
	,_set: null
	,_cur: null
	,free: function() {
		$s.push("de.polygonal.ui._UI.Shortcut::free");
		var $spos = $s.length;
		this._set.free();
		this._cur.free();
		this._set = null;
		this._cur = null;
		$s.pop();
	}
	,insert: function(keyCode) {
		$s.push("de.polygonal.ui._UI.Shortcut::insert");
		var $spos = $s.length;
		if(this._set.has(keyCode)) {
			this._cur.set(keyCode);
			if(this._cur.size() == this._set.size()) {
				if(!this.isComplete) this.isComplete = true;
			}
		} else this.isComplete = false;
		$s.pop();
	}
	,remove: function(keyCode) {
		$s.push("de.polygonal.ui._UI.Shortcut::remove");
		var $spos = $s.length;
		if(this._cur.remove(keyCode)) this.isComplete = false;
		$s.pop();
	}
	,__class__: de.polygonal.ui._UI.Shortcut
}
de.polygonal.ui._UI.Sequence = $hxClasses["de.polygonal.ui._UI.Sequence"] = function(name,keyCodes) {
	$s.push("de.polygonal.ui._UI.Sequence::new");
	var $spos = $s.length;
	this.name = name;
	this._list = new Array();
	de.polygonal.ds.ArrayUtil.copy(keyCodes,this._list,null,null);
	this._curSize = 0;
	this._maxSize = this._list.length;
	$s.pop();
}
de.polygonal.ui._UI.Sequence.__name__ = ["de","polygonal","ui","_UI","Sequence"];
de.polygonal.ui._UI.Sequence.prototype = {
	name: null
	,isComplete: null
	,_list: null
	,_curSize: null
	,_maxSize: null
	,free: function() {
		$s.push("de.polygonal.ui._UI.Sequence::free");
		var $spos = $s.length;
		this._list = null;
		$s.pop();
	}
	,insert: function(keyCode) {
		$s.push("de.polygonal.ui._UI.Sequence::insert");
		var $spos = $s.length;
		if(this._list[this._curSize] == keyCode) {
			this._curSize++;
			if(this._maxSize == this._curSize) {
				this._curSize = 0;
				this.isComplete = true;
			} else this.isComplete = false;
		} else {
			this._curSize = 0;
			this.isComplete = false;
		}
		$s.pop();
	}
	,__class__: de.polygonal.ui._UI.Sequence
}
de.polygonal.ds.Collection = $hxClasses["de.polygonal.ds.Collection"] = function() { }
de.polygonal.ds.Collection.__name__ = ["de","polygonal","ds","Collection"];
de.polygonal.ds.Collection.__interfaces__ = [de.polygonal.ds.Hashable];
de.polygonal.ds.Collection.prototype = {
	free: null
	,contains: null
	,remove: null
	,clear: null
	,iterator: null
	,isEmpty: null
	,size: null
	,toArray: null
	,toDA: null
	,clone: null
	,__class__: de.polygonal.ds.Collection
}
de.polygonal.ds.Map = $hxClasses["de.polygonal.ds.Map"] = function() { }
de.polygonal.ds.Map.__name__ = ["de","polygonal","ds","Map"];
de.polygonal.ds.Map.__interfaces__ = [de.polygonal.ds.Collection];
de.polygonal.ds.Map.prototype = {
	has: null
	,hasKey: null
	,get: null
	,set: null
	,clr: null
	,remap: null
	,toValSet: null
	,toKeySet: null
	,keys: null
	,__class__: de.polygonal.ds.Map
}
de.polygonal.ds.HashTable = $hxClasses["de.polygonal.ds.HashTable"] = function(slotCount,capacity,isResizable,maxSize) {
	$s.push("de.polygonal.ds.HashTable::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(isResizable == null) isResizable = true;
	if(capacity == null) capacity = -1;
	if(capacity == -1) capacity = slotCount;
	this._isResizable = isResizable;
	this._h = new de.polygonal.ds.IntIntHashTable(slotCount,capacity,isResizable,maxSize);
	this._keys = de.polygonal.ds.ArrayUtil.alloc(capacity);
	this._vals = de.polygonal.ds.ArrayUtil.alloc(capacity);
	this._next = de.polygonal.ds.ArrayUtil.alloc(capacity);
	var _g1 = 0, _g = capacity - 1;
	while(_g1 < _g) {
		var i = _g1++;
		this._next[i] = i + 1;
	}
	this._next[capacity - 1] = -1;
	this._free = 0;
	this._sizeLevel = 0;
	this._iterator = null;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.HashTable.__name__ = ["de","polygonal","ds","HashTable"];
de.polygonal.ds.HashTable.__interfaces__ = [de.polygonal.ds.Map];
de.polygonal.ds.HashTable.prototype = {
	key: null
	,reuseIterator: null
	,_h: null
	,_keys: null
	,_vals: null
	,_next: null
	,_free: null
	,_sizeLevel: null
	,_isResizable: null
	,_iterator: null
	,loadFactor: null
	,_loadFactorGetter: function() {
		$s.push("de.polygonal.ds.HashTable::_loadFactorGetter");
		var $spos = $s.length;
		var $tmp = this._h._loadFactorGetter();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,slotCount: null
	,_slotCountGetter: function() {
		$s.push("de.polygonal.ds.HashTable::_slotCountGetter");
		var $spos = $s.length;
		var $tmp = this._h._mask + 1;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,capacity: null
	,_capacityGetter: function() {
		$s.push("de.polygonal.ds.HashTable::_capacityGetter");
		var $spos = $s.length;
		var $tmp = this._h._capacity;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getCollisionCount: function() {
		$s.push("de.polygonal.ds.HashTable::getCollisionCount");
		var $spos = $s.length;
		var $tmp = this._h.getCollisionCount();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getFront: function(key) {
		$s.push("de.polygonal.ds.HashTable::getFront");
		var $spos = $s.length;
		var i = this._h.getFront((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)));
		if(i == -2147483648) {
			$s.pop();
			return null;
		} else {
			var $tmp = this._vals[i];
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,setIfAbsent: function(key,val) {
		$s.push("de.polygonal.ds.HashTable::setIfAbsent");
		var $spos = $s.length;
		if(this._h._size == this._h._capacity) {
			if(this._h.setIfAbsent((function($this) {
				var $r;
				if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
				$r = key.key;
				return $r;
			}(this)),this._h._size)) {
				this._expand(this._h._capacity >> 1);
				this._vals[this._free] = val;
				this._keys[this._free] = key;
				this._free = this._next[this._free];
				$s.pop();
				return true;
			} else {
				$s.pop();
				return false;
			}
		} else if(this._h.setIfAbsent((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)),this._free)) {
			this._vals[this._free] = val;
			this._keys[this._free] = key;
			this._free = this._next[this._free];
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,rehash: function(slotCount) {
		$s.push("de.polygonal.ds.HashTable::rehash");
		var $spos = $s.length;
		this._h.rehash(slotCount);
		$s.pop();
	}
	,remap: function(key,val) {
		$s.push("de.polygonal.ds.HashTable::remap");
		var $spos = $s.length;
		var i = this._h.get((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)));
		if(i != -2147483648) {
			this._vals[i] = val;
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,toKeyArray: function() {
		$s.push("de.polygonal.ds.HashTable::toKeyArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._h._size);
		var j = 0;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) a[j++] = this._keys[i];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toKeyDA: function() {
		$s.push("de.polygonal.ds.HashTable::toKeyDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._h._size);
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) a.set(a._size,this._keys[i]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,pack: function() {
		$s.push("de.polygonal.ds.HashTable::pack");
		var $spos = $s.length;
		var NULL = null;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) this._vals[i] = NULL;
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.HashTable::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{HashTable, size/capacity: %d/%d, load factor: %.2f}",[this._h._size,this._h._capacity,this._h._loadFactorGetter()]);
		if(this._h._size == 0) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var max = 0;
		var $it0 = this.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			max = de.polygonal.core.math.Mathematics.max(max,Std.string(key).length);
		}
		var $it1 = this.keys();
		while( $it1.hasNext() ) {
			var key = $it1.next();
			s += de.polygonal.core.fmt.Sprintf.format("  %- " + max + "s -> %s\n",[key,Std.string(this.get(key))]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,has: function(val) {
		$s.push("de.polygonal.ds.HashTable::has");
		var $spos = $s.length;
		var exists = false;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) {
				if(this._vals[i] == val) {
					exists = true;
					break;
				}
			}
		}
		$s.pop();
		return exists;
		$s.pop();
	}
	,hasKey: function(key) {
		$s.push("de.polygonal.ds.HashTable::hasKey");
		var $spos = $s.length;
		var $tmp = this._h.hasKey((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,get: function(key) {
		$s.push("de.polygonal.ds.HashTable::get");
		var $spos = $s.length;
		if(true != (key != null)) throw new de.polygonal.ASE("key != null",{ fileName : "HashTable.hx", lineNumber : 404, className : "de.polygonal.ds.HashTable", methodName : "get"}); else null;
		var i = this._h.get((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)));
		if(i == -2147483648) {
			$s.pop();
			return null;
		} else {
			var $tmp = this._vals[i];
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,set: function(key,val) {
		$s.push("de.polygonal.ds.HashTable::set");
		var $spos = $s.length;
		if(this._h._size == this._h._capacity) this._expand(this._h._capacity);
		var first = this._h.set((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)),this._free);
		this._vals[this._free] = val;
		this._keys[this._free] = key;
		this._free = this._next[this._free];
		$s.pop();
		return first;
		$s.pop();
	}
	,clr: function(key) {
		$s.push("de.polygonal.ds.HashTable::clr");
		var $spos = $s.length;
		var i = this._h.get((function($this) {
			var $r;
			if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
			$r = key.key;
			return $r;
		}(this)));
		if(i == -2147483648) {
			$s.pop();
			return false;
		} else {
			this._keys[i] = null;
			this._next[i] = this._free;
			this._free = i;
			var shrink = false;
			if(this._sizeLevel > 0) {
				if(this._h._size - 1 == this._h._capacity >> 2) {
					if(this._isResizable) shrink = true;
				}
			}
			this._h.clr((function($this) {
				var $r;
				if(true != (key != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
				$r = key.key;
				return $r;
			}(this)));
			if(shrink) this._shrink();
			$s.pop();
			return true;
		}
		$s.pop();
	}
	,toValSet: function() {
		$s.push("de.polygonal.ds.HashTable::toValSet");
		var $spos = $s.length;
		var s = new de.polygonal.ds.ListSet();
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) s.set(this._vals[i]);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,toKeySet: function() {
		$s.push("de.polygonal.ds.HashTable::toKeySet");
		var $spos = $s.length;
		var s = new de.polygonal.ds.ListSet();
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) s.set(this._keys[i]);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,keys: function() {
		$s.push("de.polygonal.ds.HashTable::keys");
		var $spos = $s.length;
		var $tmp = new de.polygonal.ds.HashTableKeyIterator(this);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.HashTable::free");
		var $spos = $s.length;
		var NULL = null;
		var _g1 = 0, _g = this._h._size;
		while(_g1 < _g) {
			var i = _g1++;
			this._vals[i] = NULL;
			this._keys[i] = null;
		}
		this._vals = null;
		this._keys = null;
		this._next = null;
		this._h.free();
		this._h = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(val) {
		$s.push("de.polygonal.ds.HashTable::contains");
		var $spos = $s.length;
		var $tmp = this.has(val);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(val) {
		$s.push("de.polygonal.ds.HashTable::remove");
		var $spos = $s.length;
		var found = false;
		var tmp = new Array();
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) {
				if(this._vals[i] == val) {
					tmp.push(this._keys[i]);
					found = true;
				}
			}
		}
		if(found) {
			var _g = 0;
			while(_g < tmp.length) {
				var key = tmp[_g];
				++_g;
				this.clr(key);
			}
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.HashTable::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		this._h.clear(purge);
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			this._keys[i] = null;
		}
		var NULL = null;
		if(purge) {
			var _g1 = 0, _g = this._h._capacity;
			while(_g1 < _g) {
				var i = _g1++;
				this._vals[i] = NULL;
				this._keys[i] = null;
			}
			while(this._sizeLevel > 0) this._shrink();
		}
		var _g1 = 0, _g = this._h._capacity - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[this._h._capacity - 1] = -1;
		this._free = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.HashTable::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.HashTableValIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.HashTableValIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.HashTable::isEmpty");
		var $spos = $s.length;
		var $tmp = this._h._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.HashTable::size");
		var $spos = $s.length;
		var $tmp = this._h._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.HashTable::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._h._size);
		var j = 0;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) a[j++] = this._vals[i];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.HashTable::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._h._size);
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != null) a.set(a._size,this._vals[i]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.HashTable::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var c = Type.createEmptyInstance(de.polygonal.ds.HashTable);
		c.key = de.polygonal.ds.HashKey._counter++;
		c._h = this._h.clone(false);
		if(assign) {
			c._vals = new Array();
			de.polygonal.ds.ArrayUtil.copy(this._vals,c._vals,null,null);
		} else {
			var tmp = de.polygonal.ds.ArrayUtil.alloc(this._h._capacity);
			if(copier != null) {
				var _g1 = 0, _g = this._h._capacity;
				while(_g1 < _g) {
					var i = _g1++;
					if(this._keys[i] != null) tmp[i] = copier(this._vals[i]);
				}
			} else {
				var c1 = null;
				var _g1 = 0, _g = this._h._capacity;
				while(_g1 < _g) {
					var i = _g1++;
					if(this._keys[i] != null) {
						if(true != Std["is"](this._vals[i],de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[this._vals[i]]),{ fileName : "HashTable.hx", lineNumber : 732, className : "de.polygonal.ds.HashTable", methodName : "clone"}); else null;
						c1 = this._vals[i];
						tmp[i] = c1.clone();
					}
				}
			}
			c._vals = tmp;
		}
		c._sizeLevel = this._sizeLevel;
		c._free = this._free;
		c._next = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._next,c._next,null,null);
		c._keys = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._keys,c._keys,null,null);
		$s.pop();
		return c;
		$s.pop();
	}
	,_expand: function(oldSize) {
		$s.push("de.polygonal.ds.HashTable::_expand");
		var $spos = $s.length;
		var newSize = oldSize << 1;
		var tmp = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._next,tmp,0,oldSize);
		this._next = tmp;
		var tmp1 = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._keys,tmp1,0,oldSize);
		this._keys = tmp1;
		var _g1 = oldSize - 1, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = oldSize;
		var tmp2 = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._vals,tmp2,0,oldSize);
		this._vals = tmp2;
		this._sizeLevel++;
		$s.pop();
	}
	,_shrink: function() {
		$s.push("de.polygonal.ds.HashTable::_shrink");
		var $spos = $s.length;
		this._sizeLevel--;
		var oldSize = this._h._capacity << 1;
		var newSize = this._h._capacity;
		this._next = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var _g1 = 0, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = 0;
		var tmpKeys = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var tmpVals = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var $it0 = this._h.iterator();
		while( $it0.hasNext() ) {
			var i = $it0.next();
			tmpKeys[this._free] = this._keys[i];
			tmpVals[this._free] = this._vals[i];
			this._free = this._next[this._free];
		}
		this._keys = tmpKeys;
		this._vals = tmpVals;
		var _g1 = 0, _g = this._free;
		while(_g1 < _g) {
			var i = _g1++;
			this._h.remap(this.__key(this._keys[i]),i);
		}
		$s.pop();
	}
	,__getNext: function(i) {
		$s.push("de.polygonal.ds.HashTable::__getNext");
		var $spos = $s.length;
		var $tmp = this._next[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setNext: function(i,x) {
		$s.push("de.polygonal.ds.HashTable::__setNext");
		var $spos = $s.length;
		this._next[i] = x;
		$s.pop();
	}
	,__key: function(x) {
		$s.push("de.polygonal.ds.HashTable::__key");
		var $spos = $s.length;
		if(true != (x != null)) throw new de.polygonal.ASE("key is null",{ fileName : "HashTable.hx", lineNumber : 855, className : "de.polygonal.ds.HashTable", methodName : "__key"}); else null;
		var $tmp = x.key;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.HashTable
	,__properties__: {get_capacity:"_capacityGetter",get_slotCount:"_slotCountGetter",get_loadFactor:"_loadFactorGetter"}
}
de.polygonal.ds.Itr = $hxClasses["de.polygonal.ds.Itr"] = function() { }
de.polygonal.ds.Itr.__name__ = ["de","polygonal","ds","Itr"];
de.polygonal.ds.Itr.prototype = {
	hasNext: null
	,next: null
	,remove: null
	,reset: null
	,__class__: de.polygonal.ds.Itr
}
de.polygonal.ds.HashTableKeyIterator = $hxClasses["de.polygonal.ds.HashTableKeyIterator"] = function(f) {
	$s.push("de.polygonal.ds.HashTableKeyIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		this;
	}
	$s.pop();
}
de.polygonal.ds.HashTableKeyIterator.__name__ = ["de","polygonal","ds","HashTableKeyIterator"];
de.polygonal.ds.HashTableKeyIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.HashTableKeyIterator.prototype = {
	_f: null
	,_keys: null
	,_i: null
	,_s: null
	,reset: function() {
		$s.push("de.polygonal.ds.HashTableKeyIterator::reset");
		var $spos = $s.length;
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.HashTableKeyIterator::hasNext");
		var $spos = $s.length;
		while(++this._i < this._s) if(this._keys[this._i] != null) {
			$s.pop();
			return true;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.HashTableKeyIterator::next");
		var $spos = $s.length;
		var $tmp = this._keys[this._i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.HashTableKeyIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,__vals: function(f) {
		$s.push("de.polygonal.ds.HashTableKeyIterator::__vals");
		var $spos = $s.length;
		var $tmp = f._vals;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__keys: function(f) {
		$s.push("de.polygonal.ds.HashTableKeyIterator::__keys");
		var $spos = $s.length;
		var $tmp = f._keys;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.HashTableKeyIterator
}
de.polygonal.ds.HashTableValIterator = $hxClasses["de.polygonal.ds.HashTableValIterator"] = function(f) {
	$s.push("de.polygonal.ds.HashTableValIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._vals = this._f._vals;
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		this;
	}
	$s.pop();
}
de.polygonal.ds.HashTableValIterator.__name__ = ["de","polygonal","ds","HashTableValIterator"];
de.polygonal.ds.HashTableValIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.HashTableValIterator.prototype = {
	_f: null
	,_keys: null
	,_vals: null
	,_i: null
	,_s: null
	,reset: function() {
		$s.push("de.polygonal.ds.HashTableValIterator::reset");
		var $spos = $s.length;
		this._vals = this._f._vals;
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.HashTableValIterator::hasNext");
		var $spos = $s.length;
		while(++this._i < this._s) if(this._keys[this._i] != null) {
			$s.pop();
			return true;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.HashTableValIterator::next");
		var $spos = $s.length;
		var $tmp = this._vals[this._i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.HashTableValIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,__vals: function(f) {
		$s.push("de.polygonal.ds.HashTableValIterator::__vals");
		var $spos = $s.length;
		var $tmp = f._vals;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__keys: function(f) {
		$s.push("de.polygonal.ds.HashTableValIterator::__keys");
		var $spos = $s.length;
		var $tmp = f._keys;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.HashTableValIterator
}
de.polygonal.ds.Stack = $hxClasses["de.polygonal.ds.Stack"] = function() { }
de.polygonal.ds.Stack.__name__ = ["de","polygonal","ds","Stack"];
de.polygonal.ds.Stack.__interfaces__ = [de.polygonal.ds.Collection];
de.polygonal.ds.Stack.prototype = {
	push: null
	,pop: null
	,top: null
	,__class__: de.polygonal.ds.Stack
}
var jeash = jeash || {}
if(!jeash.errors) jeash.errors = {}
jeash.errors.Error = $hxClasses["jeash.errors.Error"] = function(message,id) {
	$s.push("jeash.errors.Error::new");
	var $spos = $s.length;
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
	$s.pop();
}
jeash.errors.Error.__name__ = ["jeash","errors","Error"];
jeash.errors.Error.prototype = {
	errorID: null
	,message: null
	,name: null
	,getStackTrace: function() {
		$s.push("jeash.errors.Error::getStackTrace");
		var $spos = $s.length;
		var $tmp = haxe.Stack.toString(haxe.Stack.exceptionStack());
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("jeash.errors.Error::toString");
		var $spos = $s.length;
		if(this.message != null) {
			var $tmp = this.message;
			$s.pop();
			return $tmp;
		} else {
			$s.pop();
			return "Error";
		}
		$s.pop();
	}
	,__class__: jeash.errors.Error
}
if(!com.wighawag.remote) com.wighawag.remote = {}
if(!com.wighawag.remote.service) com.wighawag.remote.service = {}
com.wighawag.remote.service.HighScoreService = $hxClasses["remote.service.HighScoreService"] = function() { }
com.wighawag.remote.service.HighScoreService.__name__ = ["com","wighawag","remote","service","HighScoreService"];
com.wighawag.remote.service.HighScoreService.prototype = {
	echo: null
	,getOwnHighScore: null
	,start: null
	,setScore: null
	,getRandomScore: null
	,reviewScore: null
	,forceReviewTimeUnit: null
	,__class__: com.wighawag.remote.service.HighScoreService
}
com.wighawag.remote.RemoteHighScoreService = $hxClasses["remote.RemoteHighScoreService"] = function(remote) {
	$s.push("remote.RemoteHighScoreService::new");
	var $spos = $s.length;
	this.remote = remote;
	$s.pop();
}
com.wighawag.remote.RemoteHighScoreService.__name__ = ["com","wighawag","remote","RemoteHighScoreService"];
com.wighawag.remote.RemoteHighScoreService.__interfaces__ = [com.wighawag.remote.service.HighScoreService];
com.wighawag.remote.RemoteHighScoreService.prototype = {
	remote: null
	,echo: function(message) {
		$s.push("remote.RemoteHighScoreService::echo");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.echo",[message]]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::echo@27");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) response.processSuccess(value.result); else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,start: function() {
		$s.push("remote.RemoteHighScoreService::start");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.start"]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::start@43");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) response.processSuccess(new com.wighawag.remote.service.Seed(value.result.seed,"1")); else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,setScore: function(score) {
		$s.push("remote.RemoteHighScoreService::setScore");
		var $spos = $s.length;
		var scoreValues = new Hash();
		scoreValues.set("score",score.value);
		scoreValues.set("time",score.time);
		scoreValues.set("proof",score.proof);
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.setScore",[scoreValues]]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::setScore@68");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) response.processSuccess(value.result.message); else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,getOwnHighScore: function() {
		$s.push("remote.RemoteHighScoreService::getOwnHighScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.getOwnHighScore"]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::getOwnHighScore@84");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) response.processSuccess(new com.wighawag.remote.service.Score(value.result.score,value.result.time,null,null,"1")); else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,getRandomScore: function() {
		$s.push("remote.RemoteHighScoreService::getRandomScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.getRandomScore"]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::getRandomScore@100");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) {
				var alternative;
				if(Reflect.hasField(value.result,"retry")) alternative = new com.wighawag.remote.service.Alternative(null,new com.wighawag.remote.service.RetryMessage(value.result.message,value.result.retry)); else alternative = new com.wighawag.remote.service.Alternative(new com.wighawag.remote.service.Score(-1,-1,value.result.proof,value.result.seed,value.result.version));
				response.processSuccess(alternative);
			} else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,reviewScore: function(scoreReview) {
		$s.push("remote.RemoteHighScoreService::reviewScore");
		var $spos = $s.length;
		var scoreValues = new Hash();
		scoreValues.set("score",scoreReview.value);
		scoreValues.set("time",scoreReview.time);
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.reviewScore",[scoreValues]]).bind(function(value) {
			$s.push("remote.RemoteHighScoreService::reviewScore@128");
			var $spos = $s.length;
			if(Reflect.hasField(value,"result")) response.processSuccess(value.result.message); else response.processError(new com.wighawag.remote.service.ErrorMessage(value.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,forceReviewTimeUnit: function(value) {
		$s.push("remote.RemoteHighScoreService::forceReviewTimeUnit");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		this.remote.signedRequestCall(["score.service.forceReviewTimeUnit",[value]]).bind(function(value1) {
			$s.push("remote.RemoteHighScoreService::forceReviewTimeUnit@147");
			var $spos = $s.length;
			if(Reflect.hasField(value1,"result")) response.processSuccess(value1.result.oldReviewTimeUnit); else response.processError(new com.wighawag.remote.service.ErrorMessage(value1.error.message));
			$s.pop();
		});
		$s.pop();
		return response;
		$s.pop();
	}
	,__class__: com.wighawag.remote.RemoteHighScoreService
}
if(!jeash.display) jeash.display = {}
jeash.display.InterpolationMethod = $hxClasses["jeash.display.InterpolationMethod"] = { __ename__ : ["jeash","display","InterpolationMethod"], __constructs__ : ["RGB","LINEAR_RGB"] }
jeash.display.InterpolationMethod.RGB = ["RGB",0];
jeash.display.InterpolationMethod.RGB.toString = $estr;
jeash.display.InterpolationMethod.RGB.__enum__ = jeash.display.InterpolationMethod;
jeash.display.InterpolationMethod.LINEAR_RGB = ["LINEAR_RGB",1];
jeash.display.InterpolationMethod.LINEAR_RGB.toString = $estr;
jeash.display.InterpolationMethod.LINEAR_RGB.__enum__ = jeash.display.InterpolationMethod;
if(!haxe.xml) haxe.xml = {}
haxe.xml.Filter = $hxClasses["haxe.xml.Filter"] = { __ename__ : ["haxe","xml","Filter"], __constructs__ : ["FInt","FBool","FEnum","FReg"] }
haxe.xml.Filter.FInt = ["FInt",0];
haxe.xml.Filter.FInt.toString = $estr;
haxe.xml.Filter.FInt.__enum__ = haxe.xml.Filter;
haxe.xml.Filter.FBool = ["FBool",1];
haxe.xml.Filter.FBool.toString = $estr;
haxe.xml.Filter.FBool.__enum__ = haxe.xml.Filter;
haxe.xml.Filter.FEnum = function(values) { var $x = ["FEnum",2,values]; $x.__enum__ = haxe.xml.Filter; $x.toString = $estr; return $x; }
haxe.xml.Filter.FReg = function(matcher) { var $x = ["FReg",3,matcher]; $x.__enum__ = haxe.xml.Filter; $x.toString = $estr; return $x; }
haxe.xml.Attrib = $hxClasses["haxe.xml.Attrib"] = { __ename__ : ["haxe","xml","Attrib"], __constructs__ : ["Att"] }
haxe.xml.Attrib.Att = function(name,filter,defvalue) { var $x = ["Att",0,name,filter,defvalue]; $x.__enum__ = haxe.xml.Attrib; $x.toString = $estr; return $x; }
haxe.xml.Rule = $hxClasses["haxe.xml.Rule"] = { __ename__ : ["haxe","xml","Rule"], __constructs__ : ["RNode","RData","RMulti","RList","RChoice","ROptional"] }
haxe.xml.Rule.RNode = function(name,attribs,childs) { var $x = ["RNode",0,name,attribs,childs]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
haxe.xml.Rule.RData = function(filter) { var $x = ["RData",1,filter]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
haxe.xml.Rule.RMulti = function(rule,atLeastOne) { var $x = ["RMulti",2,rule,atLeastOne]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
haxe.xml.Rule.RList = function(rules,ordered) { var $x = ["RList",3,rules,ordered]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
haxe.xml.Rule.RChoice = function(choices) { var $x = ["RChoice",4,choices]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
haxe.xml.Rule.ROptional = function(rule) { var $x = ["ROptional",5,rule]; $x.__enum__ = haxe.xml.Rule; $x.toString = $estr; return $x; }
if(!haxe.xml._Check) haxe.xml._Check = {}
haxe.xml._Check.CheckResult = $hxClasses["haxe.xml._Check.CheckResult"] = { __ename__ : ["haxe","xml","_Check","CheckResult"], __constructs__ : ["CMatch","CMissing","CExtra","CElementExpected","CDataExpected","CExtraAttrib","CMissingAttrib","CInvalidAttrib","CInvalidData","CInElement"] }
haxe.xml._Check.CheckResult.CMatch = ["CMatch",0];
haxe.xml._Check.CheckResult.CMatch.toString = $estr;
haxe.xml._Check.CheckResult.CMatch.__enum__ = haxe.xml._Check.CheckResult;
haxe.xml._Check.CheckResult.CMissing = function(r) { var $x = ["CMissing",1,r]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CExtra = function(x) { var $x = ["CExtra",2,x]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CElementExpected = function(name,x) { var $x = ["CElementExpected",3,name,x]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CDataExpected = function(x) { var $x = ["CDataExpected",4,x]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CExtraAttrib = function(att,x) { var $x = ["CExtraAttrib",5,att,x]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CMissingAttrib = function(att,x) { var $x = ["CMissingAttrib",6,att,x]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CInvalidAttrib = function(att,x,f) { var $x = ["CInvalidAttrib",7,att,x,f]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CInvalidData = function(x,f) { var $x = ["CInvalidData",8,x,f]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
haxe.xml._Check.CheckResult.CInElement = function(x,r) { var $x = ["CInElement",9,x,r]; $x.__enum__ = haxe.xml._Check.CheckResult; $x.toString = $estr; return $x; }
var EReg = $hxClasses["EReg"] = function(r,opt) {
	$s.push("EReg::new");
	var $spos = $s.length;
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
	$s.pop();
}
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		$s.push("EReg::match");
		var $spos = $s.length;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		var $tmp = this.r.m != null;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,matched: function(n) {
		$s.push("EReg::matched");
		var $spos = $s.length;
		var $tmp = this.r.m != null && n >= 0 && n < this.r.m.length?this.r.m[n]:(function($this) {
			var $r;
			throw "EReg::matched";
			return $r;
		}(this));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,matchedLeft: function() {
		$s.push("EReg::matchedLeft");
		var $spos = $s.length;
		if(this.r.m == null) throw "No string matched";
		var $tmp = this.r.s.substr(0,this.r.m.index);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,matchedRight: function() {
		$s.push("EReg::matchedRight");
		var $spos = $s.length;
		if(this.r.m == null) throw "No string matched";
		var sz = this.r.m.index + this.r.m[0].length;
		var $tmp = this.r.s.substr(sz,this.r.s.length - sz);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,matchedPos: function() {
		$s.push("EReg::matchedPos");
		var $spos = $s.length;
		if(this.r.m == null) throw "No string matched";
		var $tmp = { pos : this.r.m.index, len : this.r.m[0].length};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,split: function(s) {
		$s.push("EReg::split");
		var $spos = $s.length;
		var d = "#__delim__#";
		var $tmp = s.replace(this.r,d).split(d);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,replace: function(s,by) {
		$s.push("EReg::replace");
		var $spos = $s.length;
		var $tmp = s.replace(this.r,by);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,customReplace: function(s,f) {
		$s.push("EReg::customReplace");
		var $spos = $s.length;
		var buf = new StringBuf();
		while(true) {
			if(!this.match(s)) break;
			buf.add(this.matchedLeft());
			buf.add(f(this));
			s = this.matchedRight();
		}
		buf.b[buf.b.length] = s == null?"null":s;
		var $tmp = buf.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: EReg
}
haxe.xml.Check = $hxClasses["haxe.xml.Check"] = function() { }
haxe.xml.Check.__name__ = ["haxe","xml","Check"];
haxe.xml.Check.isBlank = function(x) {
	$s.push("haxe.xml.Check::isBlank");
	var $spos = $s.length;
	var $tmp = x.nodeType == Xml.PCData && haxe.xml.Check.blanks.match(x.getNodeValue()) || x.nodeType == Xml.Comment;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.xml.Check.filterMatch = function(s,f) {
	$s.push("haxe.xml.Check::filterMatch");
	var $spos = $s.length;
	var $e = (f);
	switch( $e[1] ) {
	case 0:
		var $tmp = haxe.xml.Check.filterMatch(s,haxe.xml.Filter.FReg(new EReg("[0-9]+","")));
		$s.pop();
		return $tmp;
	case 1:
		var $tmp = haxe.xml.Check.filterMatch(s,haxe.xml.Filter.FEnum(["true","false","0","1"]));
		$s.pop();
		return $tmp;
	case 2:
		var values = $e[2];
		var _g = 0;
		while(_g < values.length) {
			var v = values[_g];
			++_g;
			if(s == v) {
				$s.pop();
				return true;
			}
		}
		$s.pop();
		return false;
	case 3:
		var r = $e[2];
		var $tmp = r.match(s);
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
haxe.xml.Check.isNullable = function(r) {
	$s.push("haxe.xml.Check::isNullable");
	var $spos = $s.length;
	var $e = (r);
	switch( $e[1] ) {
	case 2:
		var one = $e[3], r1 = $e[2];
		var $tmp = one != true || haxe.xml.Check.isNullable(r1);
		$s.pop();
		return $tmp;
	case 3:
		var rl = $e[2];
		var _g = 0;
		while(_g < rl.length) {
			var r1 = rl[_g];
			++_g;
			if(!haxe.xml.Check.isNullable(r1)) {
				$s.pop();
				return false;
			}
		}
		$s.pop();
		return true;
	case 4:
		var rl = $e[2];
		var _g = 0;
		while(_g < rl.length) {
			var r1 = rl[_g];
			++_g;
			if(haxe.xml.Check.isNullable(r1)) {
				$s.pop();
				return true;
			}
		}
		$s.pop();
		return false;
	case 1:
		$s.pop();
		return false;
	case 0:
		$s.pop();
		return false;
	case 5:
		$s.pop();
		return true;
	}
	$s.pop();
}
haxe.xml.Check.check = function(x,r) {
	$s.push("haxe.xml.Check::check");
	var $spos = $s.length;
	var $e = (r);
	switch( $e[1] ) {
	case 0:
		var childs = $e[4], attribs = $e[3], name = $e[2];
		if(x.nodeType != Xml.Element || x.getNodeName() != name) {
			var $tmp = haxe.xml._Check.CheckResult.CElementExpected(name,x);
			$s.pop();
			return $tmp;
		}
		var attribs1 = attribs == null?new Array():attribs.copy();
		var $it0 = x.attributes();
		while( $it0.hasNext() ) {
			var xatt = $it0.next();
			var found = false;
			var _g = 0;
			while(_g < attribs1.length) {
				var att = attribs1[_g];
				++_g;
				var $e = (att);
				switch( $e[1] ) {
				case 0:
					var defvalue = $e[4], filter = $e[3], name1 = $e[2];
					if(xatt != name1) continue;
					if(filter != null && !haxe.xml.Check.filterMatch(x.get(xatt),filter)) {
						var $tmp = haxe.xml._Check.CheckResult.CInvalidAttrib(name1,x,filter);
						$s.pop();
						return $tmp;
					}
					attribs1.remove(att);
					found = true;
					break;
				}
			}
			if(!found) {
				var $tmp = haxe.xml._Check.CheckResult.CExtraAttrib(xatt,x);
				$s.pop();
				return $tmp;
			}
		}
		var _g = 0;
		while(_g < attribs1.length) {
			var att = attribs1[_g];
			++_g;
			var $e = (att);
			switch( $e[1] ) {
			case 0:
				var defvalue = $e[4], name1 = $e[2];
				if(defvalue == null) {
					var $tmp = haxe.xml._Check.CheckResult.CMissingAttrib(name1,x);
					$s.pop();
					return $tmp;
				}
				break;
			}
		}
		if(childs == null) childs = haxe.xml.Rule.RList([]);
		var m = haxe.xml.Check.checkList(x.iterator(),childs);
		if(m != haxe.xml._Check.CheckResult.CMatch) {
			var $tmp = haxe.xml._Check.CheckResult.CInElement(x,m);
			$s.pop();
			return $tmp;
		}
		var _g = 0;
		while(_g < attribs1.length) {
			var att = attribs1[_g];
			++_g;
			var $e = (att);
			switch( $e[1] ) {
			case 0:
				var defvalue = $e[4], name1 = $e[2];
				x.set(name1,defvalue);
				break;
			}
		}
		var $tmp = haxe.xml._Check.CheckResult.CMatch;
		$s.pop();
		return $tmp;
	case 1:
		var filter = $e[2];
		if(x.nodeType != Xml.PCData && x.nodeType != Xml.CData) {
			var $tmp = haxe.xml._Check.CheckResult.CDataExpected(x);
			$s.pop();
			return $tmp;
		}
		if(filter != null && !haxe.xml.Check.filterMatch(x.getNodeValue(),filter)) {
			var $tmp = haxe.xml._Check.CheckResult.CInvalidData(x,filter);
			$s.pop();
			return $tmp;
		}
		var $tmp = haxe.xml._Check.CheckResult.CMatch;
		$s.pop();
		return $tmp;
	case 4:
		var choices = $e[2];
		if(choices.length == 0) throw "No choice possible";
		var _g = 0;
		while(_g < choices.length) {
			var c = choices[_g];
			++_g;
			if(haxe.xml.Check.check(x,c) == haxe.xml._Check.CheckResult.CMatch) {
				var $tmp = haxe.xml._Check.CheckResult.CMatch;
				$s.pop();
				return $tmp;
			}
		}
		var $tmp = haxe.xml.Check.check(x,choices[0]);
		$s.pop();
		return $tmp;
	case 5:
		var r1 = $e[2];
		var $tmp = haxe.xml.Check.check(x,r1);
		$s.pop();
		return $tmp;
	default:
		throw "Unexpected " + Std.string(r);
	}
	$s.pop();
}
haxe.xml.Check.checkList = function(it,r) {
	$s.push("haxe.xml.Check::checkList");
	var $spos = $s.length;
	var $e = (r);
	switch( $e[1] ) {
	case 3:
		var ordered = $e[3], rules = $e[2];
		var rules1 = rules.copy();
		while( it.hasNext() ) {
			var x = it.next();
			if(haxe.xml.Check.isBlank(x)) continue;
			var found = false;
			var _g = 0;
			while(_g < rules1.length) {
				var r1 = rules1[_g];
				++_g;
				var m = haxe.xml.Check.checkList([x].iterator(),r1);
				if(m == haxe.xml._Check.CheckResult.CMatch) {
					found = true;
					var $e = (r1);
					switch( $e[1] ) {
					case 2:
						var one = $e[3], rsub = $e[2];
						if(one) {
							var i;
							var _g2 = 0, _g1 = rules1.length;
							while(_g2 < _g1) {
								var i1 = _g2++;
								if(rules1[i1] == r1) rules1[i1] = haxe.xml.Rule.RMulti(rsub);
							}
						}
						break;
					default:
						rules1.remove(r1);
					}
					break;
				} else if(ordered && !haxe.xml.Check.isNullable(r1)) {
					$s.pop();
					return m;
				}
			}
			if(!found) {
				var $tmp = haxe.xml._Check.CheckResult.CExtra(x);
				$s.pop();
				return $tmp;
			}
		}
		var _g = 0;
		while(_g < rules1.length) {
			var r1 = rules1[_g];
			++_g;
			if(!haxe.xml.Check.isNullable(r1)) {
				var $tmp = haxe.xml._Check.CheckResult.CMissing(r1);
				$s.pop();
				return $tmp;
			}
		}
		var $tmp = haxe.xml._Check.CheckResult.CMatch;
		$s.pop();
		return $tmp;
	case 2:
		var one = $e[3], r1 = $e[2];
		var found = false;
		while( it.hasNext() ) {
			var x = it.next();
			if(haxe.xml.Check.isBlank(x)) continue;
			var m = haxe.xml.Check.checkList([x].iterator(),r1);
			if(m != haxe.xml._Check.CheckResult.CMatch) {
				$s.pop();
				return m;
			}
			found = true;
		}
		if(one && !found) {
			var $tmp = haxe.xml._Check.CheckResult.CMissing(r1);
			$s.pop();
			return $tmp;
		}
		var $tmp = haxe.xml._Check.CheckResult.CMatch;
		$s.pop();
		return $tmp;
	default:
		var found = false;
		while( it.hasNext() ) {
			var x = it.next();
			if(haxe.xml.Check.isBlank(x)) continue;
			var m = haxe.xml.Check.check(x,r);
			if(m != haxe.xml._Check.CheckResult.CMatch) {
				$s.pop();
				return m;
			}
			found = true;
			break;
		}
		if(!found) {
			switch( (r)[1] ) {
			case 5:
				break;
			default:
				var $tmp = haxe.xml._Check.CheckResult.CMissing(r);
				$s.pop();
				return $tmp;
			}
		}
		while( it.hasNext() ) {
			var x = it.next();
			if(haxe.xml.Check.isBlank(x)) continue;
			var $tmp = haxe.xml._Check.CheckResult.CExtra(x);
			$s.pop();
			return $tmp;
		}
		var $tmp = haxe.xml._Check.CheckResult.CMatch;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
haxe.xml.Check.makeWhere = function(path) {
	$s.push("haxe.xml.Check::makeWhere");
	var $spos = $s.length;
	if(path.length == 0) {
		$s.pop();
		return "";
	}
	var s = "In ";
	var first = true;
	var _g = 0;
	while(_g < path.length) {
		var x = path[_g];
		++_g;
		if(first) first = false; else s += ".";
		s += x.getNodeName();
	}
	var $tmp = s + ": ";
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.xml.Check.makeString = function(x) {
	$s.push("haxe.xml.Check::makeString");
	var $spos = $s.length;
	if(x.nodeType == Xml.Element) {
		var $tmp = "element " + x.getNodeName();
		$s.pop();
		return $tmp;
	}
	var s = x.getNodeValue().split("\r").join("\\r").split("\n").join("\\n").split("\t").join("\\t");
	if(s.length > 20) {
		var $tmp = s.substr(0,17) + "...";
		$s.pop();
		return $tmp;
	}
	$s.pop();
	return s;
	$s.pop();
}
haxe.xml.Check.makeRule = function(r) {
	$s.push("haxe.xml.Check::makeRule");
	var $spos = $s.length;
	var $e = (r);
	switch( $e[1] ) {
	case 0:
		var name = $e[2];
		var $tmp = "element " + name;
		$s.pop();
		return $tmp;
	case 1:
		$s.pop();
		return "data";
	case 2:
		var r1 = $e[2];
		var $tmp = haxe.xml.Check.makeRule(r1);
		$s.pop();
		return $tmp;
	case 3:
		var rules = $e[2];
		var $tmp = haxe.xml.Check.makeRule(rules[0]);
		$s.pop();
		return $tmp;
	case 4:
		var choices = $e[2];
		var $tmp = haxe.xml.Check.makeRule(choices[0]);
		$s.pop();
		return $tmp;
	case 5:
		var r1 = $e[2];
		var $tmp = haxe.xml.Check.makeRule(r1);
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
haxe.xml.Check.makeError = function(m,path) {
	$s.push("haxe.xml.Check::makeError");
	var $spos = $s.length;
	if(path == null) path = new Array();
	var $e = (m);
	switch( $e[1] ) {
	case 0:
		throw "assert";
		break;
	case 1:
		var r = $e[2];
		var $tmp = haxe.xml.Check.makeWhere(path) + "Missing " + haxe.xml.Check.makeRule(r);
		$s.pop();
		return $tmp;
	case 2:
		var x = $e[2];
		var $tmp = haxe.xml.Check.makeWhere(path) + "Unexpected " + haxe.xml.Check.makeString(x);
		$s.pop();
		return $tmp;
	case 3:
		var x = $e[3], name = $e[2];
		var $tmp = haxe.xml.Check.makeWhere(path) + haxe.xml.Check.makeString(x) + " while expected element " + name;
		$s.pop();
		return $tmp;
	case 4:
		var x = $e[2];
		var $tmp = haxe.xml.Check.makeWhere(path) + haxe.xml.Check.makeString(x) + " while data expected";
		$s.pop();
		return $tmp;
	case 5:
		var x = $e[3], att = $e[2];
		path.push(x);
		var $tmp = haxe.xml.Check.makeWhere(path) + "unexpected attribute " + att;
		$s.pop();
		return $tmp;
	case 6:
		var x = $e[3], att = $e[2];
		path.push(x);
		var $tmp = haxe.xml.Check.makeWhere(path) + "missing required attribute " + att;
		$s.pop();
		return $tmp;
	case 7:
		var f = $e[4], x = $e[3], att = $e[2];
		path.push(x);
		var $tmp = haxe.xml.Check.makeWhere(path) + "invalid attribute value for " + att;
		$s.pop();
		return $tmp;
	case 8:
		var f = $e[3], x = $e[2];
		var $tmp = haxe.xml.Check.makeWhere(path) + "invalid data format for " + haxe.xml.Check.makeString(x);
		$s.pop();
		return $tmp;
	case 9:
		var m1 = $e[3], x = $e[2];
		path.push(x);
		var $tmp = haxe.xml.Check.makeError(m1,path);
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
haxe.xml.Check.checkNode = function(x,r) {
	$s.push("haxe.xml.Check::checkNode");
	var $spos = $s.length;
	var m = haxe.xml.Check.checkList([x].iterator(),r);
	if(m == haxe.xml._Check.CheckResult.CMatch) {
		$s.pop();
		return;
	}
	throw haxe.xml.Check.makeError(m);
	$s.pop();
}
haxe.xml.Check.checkDocument = function(x,r) {
	$s.push("haxe.xml.Check::checkDocument");
	var $spos = $s.length;
	if(x.nodeType != Xml.Document) throw "Document expected";
	var m = haxe.xml.Check.checkList(x.iterator(),r);
	if(m == haxe.xml._Check.CheckResult.CMatch) {
		$s.pop();
		return;
	}
	throw haxe.xml.Check.makeError(m);
	$s.pop();
}
haxe.xml.Check.prototype = {
	__class__: haxe.xml.Check
}
if(!com.wighawag.game) com.wighawag.game = {}
if(!com.wighawag.game.engine) com.wighawag.game.engine = {}
if(!com.wighawag.game.engine.core) com.wighawag.game.engine.core = {}
com.wighawag.game.engine.core.Updatable = $hxClasses["com.wighawag.game.engine.core.Updatable"] = function() { }
com.wighawag.game.engine.core.Updatable.__name__ = ["com","wighawag","game","engine","core","Updatable"];
com.wighawag.game.engine.core.Updatable.prototype = {
	update: null
	,__class__: com.wighawag.game.engine.core.Updatable
}
if(!com.wighawag.game.xjump) com.wighawag.game.xjump = {}
if(!com.wighawag.game.xjump.controller) com.wighawag.game.xjump.controller = {}
com.wighawag.game.xjump.controller.KeyBoardGameController = $hxClasses["com.wighawag.game.xjump.controller.KeyBoardGameController"] = function() { }
com.wighawag.game.xjump.controller.KeyBoardGameController.__name__ = ["com","wighawag","game","xjump","controller","KeyBoardGameController"];
com.wighawag.game.xjump.controller.KeyBoardGameController.__interfaces__ = [com.wighawag.game.engine.core.Updatable];
com.wighawag.game.xjump.controller.KeyBoardGameController.prototype = {
	reset: null
	,getRecord: null
	,isKeyDown: null
	,__class__: com.wighawag.game.xjump.controller.KeyBoardGameController
}
if(!com.wighawag.game.utils) com.wighawag.game.utils = {}
com.wighawag.game.utils.MultipleSeedIntRandomGenerator = $hxClasses["com.wighawag.game.utils.MultipleSeedIntRandomGenerator"] = function(seedList,rngClass,swap) {
	$s.push("com.wighawag.game.utils.MultipleSeedIntRandomGenerator::new");
	var $spos = $s.length;
	if(swap == null) swap = false;
	this.rngClass = rngClass;
	this.swap = swap;
	this.reset(seedList);
	$s.pop();
}
com.wighawag.game.utils.MultipleSeedIntRandomGenerator.__name__ = ["com","wighawag","game","utils","MultipleSeedIntRandomGenerator"];
com.wighawag.game.utils.MultipleSeedIntRandomGenerator.prototype = {
	rngList: null
	,swap: null
	,counter: null
	,rngClass: null
	,reset: function(seedList) {
		$s.push("com.wighawag.game.utils.MultipleSeedIntRandomGenerator::reset");
		var $spos = $s.length;
		this.rngList = new Array();
		var _g = 0;
		while(_g < seedList.length) {
			var seed = seedList[_g];
			++_g;
			var rng = Type.createInstance(this.rngClass,[seed]);
			this.rngList.push(rng);
		}
		this.counter = 0;
		$s.pop();
	}
	,integer: function(start,end) {
		$s.push("com.wighawag.game.utils.MultipleSeedIntRandomGenerator::integer");
		var $spos = $s.length;
		var randomInt = 0;
		if(this.swap) {
			var i = this.counter;
			var length = this.rngList.length;
			while(i < length) {
				var rng = this.rngList[i];
				var tmp = rng.random();
				randomInt = (randomInt + tmp) % 2147483647;
				i += 2;
			}
			this.counter = 1 ^ this.counter;
		} else {
			var _g = 0, _g1 = this.rngList;
			while(_g < _g1.length) {
				var rng = _g1[_g];
				++_g;
				var tmp = rng.random();
				randomInt = (randomInt + tmp) % 2147483647;
			}
		}
		var $tmp = Std["int"](randomInt > 0?randomInt + .5:randomInt < 0?randomInt - .5:0) % (end - start) + start;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: com.wighawag.game.utils.MultipleSeedIntRandomGenerator
}
if(!jeash.events) jeash.events = {}
jeash.events.Listener = $hxClasses["jeash.events.Listener"] = function(inListener,inUseCapture,inPriority) {
	$s.push("jeash.events.Listener::new");
	var $spos = $s.length;
	this.mListner = inListener;
	this.mUseCapture = inUseCapture;
	this.mPriority = inPriority;
	this.mID = jeash.events.Listener.sIDs++;
	$s.pop();
}
jeash.events.Listener.__name__ = ["jeash","events","Listener"];
jeash.events.Listener.prototype = {
	mListner: null
	,mUseCapture: null
	,mPriority: null
	,mID: null
	,Is: function(inListener,inCapture) {
		$s.push("jeash.events.Listener::Is");
		var $spos = $s.length;
		var $tmp = Reflect.compareMethods(this.mListner,inListener) && this.mUseCapture == inCapture;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,dispatchEvent: function(event) {
		$s.push("jeash.events.Listener::dispatchEvent");
		var $spos = $s.length;
		this.mListner(event);
		$s.pop();
	}
	,__class__: jeash.events.Listener
}
jeash.events.IEventDispatcher = $hxClasses["jeash.events.IEventDispatcher"] = function() { }
jeash.events.IEventDispatcher.__name__ = ["jeash","events","IEventDispatcher"];
jeash.events.IEventDispatcher.prototype = {
	addEventListener: null
	,dispatchEvent: null
	,hasEventListener: null
	,removeEventListener: null
	,willTrigger: null
	,__class__: jeash.events.IEventDispatcher
}
jeash.events.EventDispatcher = $hxClasses["jeash.events.EventDispatcher"] = function(target) {
	$s.push("jeash.events.EventDispatcher::new");
	var $spos = $s.length;
	if(target != null) this.jeashTarget = target; else this.jeashTarget = this;
	this.jeashEventMap = [];
	$s.pop();
}
jeash.events.EventDispatcher.__name__ = ["jeash","events","EventDispatcher"];
jeash.events.EventDispatcher.__interfaces__ = [jeash.events.IEventDispatcher];
jeash.events.EventDispatcher.compareListeners = function(l1,l2) {
	$s.push("jeash.events.EventDispatcher::compareListeners");
	var $spos = $s.length;
	var $tmp = l1.mPriority == l2.mPriority?0:l1.mPriority > l2.mPriority?-1:1;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.events.EventDispatcher.prototype = {
	jeashTarget: null
	,jeashEventMap: null
	,getList: function(type) {
		$s.push("jeash.events.EventDispatcher::getList");
		var $spos = $s.length;
		var $tmp = this.jeashEventMap[type];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setList: function(type,list) {
		$s.push("jeash.events.EventDispatcher::setList");
		var $spos = $s.length;
		this.jeashEventMap[type] = list;
		$s.pop();
	}
	,existList: function(type) {
		$s.push("jeash.events.EventDispatcher::existList");
		var $spos = $s.length;
		var $tmp = this.jeashEventMap[type] != undefined;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,addEventListener: function(type,inListener,useCapture,inPriority,useWeakReference) {
		$s.push("jeash.events.EventDispatcher::addEventListener");
		var $spos = $s.length;
		var capture = useCapture == null?false:useCapture;
		var priority = inPriority == null?0:inPriority;
		var list = this.getList(type);
		if(!this.existList(type)) {
			list = new Array();
			this.setList(type,list);
		}
		var l = new jeash.events.Listener(inListener,capture,priority);
		list.push(l);
		$s.pop();
	}
	,dispatchEvent: function(event) {
		$s.push("jeash.events.EventDispatcher::dispatchEvent");
		var $spos = $s.length;
		if(event.target == null) event.target = this.jeashTarget;
		var list = this.getList(event.type);
		var capture = event.eventPhase == jeash.events.EventPhase.CAPTURING_PHASE;
		if(this.existList(event.type)) {
			list.sort(jeash.events.EventDispatcher.compareListeners);
			var idx = 0;
			while(idx < list.length) {
				var listener = list[idx];
				if(listener.mUseCapture == capture) {
					listener.dispatchEvent(event);
					if(event.jeashGetIsCancelledNow()) {
						$s.pop();
						return true;
					}
				}
				if(idx < list.length && listener != list[idx]) {
				} else idx++;
			}
			$s.pop();
			return true;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,hasEventListener: function(type) {
		$s.push("jeash.events.EventDispatcher::hasEventListener");
		var $spos = $s.length;
		var $tmp = this.existList(type);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,removeEventListener: function(type,listener,inCapture) {
		$s.push("jeash.events.EventDispatcher::removeEventListener");
		var $spos = $s.length;
		if(!this.existList(type)) {
			$s.pop();
			return;
		}
		var list = this.getList(type);
		var capture = inCapture == null?false:inCapture;
		var _g1 = 0, _g = list.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(list[i].Is(listener,capture)) {
				list.splice(i,1);
				$s.pop();
				return;
			}
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("jeash.events.EventDispatcher::toString");
		var $spos = $s.length;
		var $tmp = "[ " + this.__name__ + " ]";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,willTrigger: function(type) {
		$s.push("jeash.events.EventDispatcher::willTrigger");
		var $spos = $s.length;
		var $tmp = this.hasEventListener(type);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.events.EventDispatcher
}
if(!de.polygonal.core.util) de.polygonal.core.util = {}
de.polygonal.core.util.Instance = $hxClasses["de.polygonal.core.util.Instance"] = function() { }
de.polygonal.core.util.Instance.__name__ = ["de","polygonal","core","util","Instance"];
de.polygonal.core.util.Instance.create = function(C,args) {
	$s.push("de.polygonal.core.util.Instance::create");
	var $spos = $s.length;
	if(args == null) args = [];
	var $tmp = Type.createInstance(C,args);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.util.Instance.createEmpty = function(C) {
	$s.push("de.polygonal.core.util.Instance::createEmpty");
	var $spos = $s.length;
	var $tmp = Type.createEmptyInstance(C);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.util.Instance.prototype = {
	__class__: de.polygonal.core.util.Instance
}
jeash.display.IBitmapDrawable = $hxClasses["jeash.display.IBitmapDrawable"] = function() { }
jeash.display.IBitmapDrawable.__name__ = ["jeash","display","IBitmapDrawable"];
jeash.display.IBitmapDrawable.prototype = {
	drawToSurface: null
	,__class__: jeash.display.IBitmapDrawable
}
de.polygonal.core.event.ObserverNode = $hxClasses["de.polygonal.core.event.ObserverNode"] = function() {
	$s.push("de.polygonal.core.event.ObserverNode::new");
	var $spos = $s.length;
	this.observer = null;
	this.prev = null;
	this.next = null;
	this.mask = 0;
	$s.pop();
}
de.polygonal.core.event.ObserverNode.__name__ = ["de","polygonal","core","event","ObserverNode"];
de.polygonal.core.event.ObserverNode.prototype = {
	observer: null
	,prev: null
	,next: null
	,mask: null
	,__class__: de.polygonal.core.event.ObserverNode
}
if(!de.polygonal.core.event._Observable) de.polygonal.core.event._Observable = {}
de.polygonal.core.event._Observable.ObservableIterator = $hxClasses["de.polygonal.core.event._Observable.ObservableIterator"] = function(head) {
	$s.push("de.polygonal.core.event._Observable.ObservableIterator::new");
	var $spos = $s.length;
	this._walker = head;
	$s.pop();
}
de.polygonal.core.event._Observable.ObservableIterator.__name__ = ["de","polygonal","core","event","_Observable","ObservableIterator"];
de.polygonal.core.event._Observable.ObservableIterator.prototype = {
	_walker: null
	,hasNext: function() {
		$s.push("de.polygonal.core.event._Observable.ObservableIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._walker != null;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.core.event._Observable.ObservableIterator::next");
		var $spos = $s.length;
		var val = this._walker.observer;
		this._walker = this._walker.next;
		$s.pop();
		return val;
		$s.pop();
	}
	,__class__: de.polygonal.core.event._Observable.ObservableIterator
}
de.polygonal.core.event.IObserver = $hxClasses["de.polygonal.core.event.IObserver"] = function() { }
de.polygonal.core.event.IObserver.__name__ = ["de","polygonal","core","event","IObserver"];
de.polygonal.core.event.IObserver.prototype = {
	update: null
	,__guid: null
	,__class__: de.polygonal.core.event.IObserver
}
de.polygonal.core.event._Observable.Bind = $hxClasses["de.polygonal.core.event._Observable.Bind"] = function() { }
de.polygonal.core.event._Observable.Bind.__name__ = ["de","polygonal","core","event","_Observable","Bind"];
de.polygonal.core.event._Observable.Bind.__interfaces__ = [de.polygonal.core.event.IObserver];
de.polygonal.core.event._Observable.Bind._pool = null;
de.polygonal.core.event._Observable.Bind.get = function(f,type) {
	$s.push("de.polygonal.core.event._Observable.Bind::get");
	var $spos = $s.length;
	if(de.polygonal.core.event._Observable.Bind._pool == null) de.polygonal.core.event._Observable.Bind._pool = new de.polygonal.ds.pooling.DynamicObjectPool(de.polygonal.core.event._Observable.Bind,null,null,1024);
	var o = de.polygonal.core.event._Observable.Bind._pool.get();
	o._f = f;
	o._t = type;
	$s.pop();
	return o;
	$s.pop();
}
de.polygonal.core.event._Observable.Bind.prototype = {
	_f: null
	,_t: null
	,update: function(type,source,userData) {
		$s.push("de.polygonal.core.event._Observable.Bind::update");
		var $spos = $s.length;
		if(this._t == type) {
			if(!this._f()) {
				source.detach(this,type);
				this._f = null;
				de.polygonal.core.event._Observable.Bind._pool.put(this);
				if(de.polygonal.core.event._Observable.Bind._pool._used == 0) de.polygonal.core.event._Observable.Bind._pool.reclaim();
			}
		}
		$s.pop();
	}
	,__guid: null
	,__class__: de.polygonal.core.event._Observable.Bind
}
de.polygonal.core.event._Observable.MultiBind = $hxClasses["de.polygonal.core.event._Observable.MultiBind"] = function() { }
de.polygonal.core.event._Observable.MultiBind.__name__ = ["de","polygonal","core","event","_Observable","MultiBind"];
de.polygonal.core.event._Observable.MultiBind.__interfaces__ = [de.polygonal.core.event.IObserver];
de.polygonal.core.event._Observable.MultiBind._pool = null;
de.polygonal.core.event._Observable.MultiBind.get = function(f,type) {
	$s.push("de.polygonal.core.event._Observable.MultiBind::get");
	var $spos = $s.length;
	if(de.polygonal.core.event._Observable.MultiBind._pool == null) de.polygonal.core.event._Observable.MultiBind._pool = new de.polygonal.ds.pooling.DynamicObjectPool(de.polygonal.core.event._Observable.MultiBind,null,null,1024);
	var o = de.polygonal.core.event._Observable.MultiBind._pool.get();
	o._f = f;
	o._t = type;
	$s.pop();
	return o;
	$s.pop();
}
de.polygonal.core.event._Observable.MultiBind.prototype = {
	_f: null
	,_t: null
	,update: function(type,source,userData) {
		$s.push("de.polygonal.core.event._Observable.MultiBind::update");
		var $spos = $s.length;
		if((this._t & type) != 0) {
			if(!this._f(type)) {
				this._t = this._t & ~type;
				source.detach(this,type);
				if(this._t == 0) {
					this._f = null;
					de.polygonal.core.event._Observable.MultiBind._pool.put(this);
					if(de.polygonal.core.event._Observable.MultiBind._pool._used == 0) de.polygonal.core.event._Observable.MultiBind._pool.reclaim();
				}
			}
		}
		$s.pop();
	}
	,__guid: null
	,__class__: de.polygonal.core.event._Observable.MultiBind
}
de.polygonal.core.event._Observable.Delegate = $hxClasses["de.polygonal.core.event._Observable.Delegate"] = function() { }
de.polygonal.core.event._Observable.Delegate.__name__ = ["de","polygonal","core","event","_Observable","Delegate"];
de.polygonal.core.event._Observable.Delegate.__interfaces__ = [de.polygonal.core.event.IObserver];
de.polygonal.core.event._Observable.Delegate._pool = null;
de.polygonal.core.event._Observable.Delegate.get = function(f) {
	$s.push("de.polygonal.core.event._Observable.Delegate::get");
	var $spos = $s.length;
	if(de.polygonal.core.event._Observable.Delegate._pool == null) de.polygonal.core.event._Observable.Delegate._pool = new de.polygonal.ds.pooling.DynamicObjectPool(de.polygonal.core.event._Observable.Delegate,null,null,256);
	var o = de.polygonal.core.event._Observable.Delegate._pool.get();
	o._f = f;
	$s.pop();
	return o;
	$s.pop();
}
de.polygonal.core.event._Observable.Delegate.prototype = {
	_f: null
	,update: function(type,source,userData) {
		$s.push("de.polygonal.core.event._Observable.Delegate::update");
		var $spos = $s.length;
		if(!this._f(type,source,userData)) {
			source.detach(this);
			this._f = null;
			de.polygonal.core.event._Observable.Delegate._pool.put(this);
			if(de.polygonal.core.event._Observable.Delegate._pool._used == 0) de.polygonal.core.event._Observable.Delegate._pool.reclaim();
		}
		$s.pop();
	}
	,__guid: null
	,__class__: de.polygonal.core.event._Observable.Delegate
}
if(!com.wighawag.game.xjump.session) com.wighawag.game.xjump.session = {}
com.wighawag.game.xjump.session.ReviewSession = $hxClasses["com.wighawag.game.xjump.session.ReviewSession"] = function(highscoreService,processFactory) {
	$s.push("com.wighawag.game.xjump.session.ReviewSession::new");
	var $spos = $s.length;
	this.highscoreService = highscoreService;
	this.processFactory = processFactory;
	$s.pop();
}
com.wighawag.game.xjump.session.ReviewSession.__name__ = ["com","wighawag","game","xjump","session","ReviewSession"];
com.wighawag.game.xjump.session.ReviewSession.prototype = {
	highscoreService: null
	,onComplete: null
	,processFactory: null
	,engine: null
	,startReview: function() {
		$s.push("com.wighawag.game.xjump.session.ReviewSession::startReview");
		var $spos = $s.length;
		var me = this;
		this.onComplete = new hsl.haxe.DirectSignaler(this);
		this.highscoreService.getRandomScore().onSuccess(function(scoreToReview) {
			$s.push("com.wighawag.game.xjump.session.ReviewSession::startReview@33");
			var $spos = $s.length;
			if(scoreToReview.primaryAvailable) {
				com.wighawag.log.EventSignaler.dispatchEvent("score to review : " + scoreToReview.primary.seed + " proof : " + scoreToReview.primary.proof);
				me.reviewScore(scoreToReview.primary.seed,scoreToReview.primary.proof);
			} else {
				com.wighawag.log.EventSignaler.dispatchEvent("nothing to review : " + scoreToReview.secondary.text + " retry: " + scoreToReview.secondary.retry);
				me.onComplete.dispatch(scoreToReview.secondary.retry,null,{ fileName : "ReviewSession.hx", lineNumber : 44, className : "com.wighawag.game.xjump.session.ReviewSession", methodName : "startReview"});
			}
			$s.pop();
		});
		this.engine = new com.wighawag.game.engine.core.Engine();
		var $tmp = this.onComplete;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,reviewScore: function(seedList,recording) {
		$s.push("com.wighawag.game.xjump.session.ReviewSession::reviewScore");
		var $spos = $s.length;
		var process = this.processFactory.create(seedList,recording);
		this.engine.start(process,new Array(),5).bind(this.onScoreReviewed.$bind(this));
		$s.pop();
	}
	,onScoreReviewed: function(score) {
		$s.push("com.wighawag.game.xjump.session.ReviewSession::onScoreReviewed");
		var $spos = $s.length;
		com.wighawag.log.EventSignaler.dispatchEvent("score reviewed : " + score.value + " " + score.time);
		var score1 = new com.wighawag.remote.service.Score(score.value,score.time,null,null,"1");
		this.highscoreService.reviewScore(score1).onSuccess(function(message) {
			$s.push("com.wighawag.game.xjump.session.ReviewSession::onScoreReviewed@62");
			var $spos = $s.length;
			com.wighawag.log.EventSignaler.dispatchEvent(message);
			$s.pop();
		});
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.session.ReviewSession
}
de.polygonal.ds.Bits = $hxClasses["de.polygonal.ds.Bits"] = function() { }
de.polygonal.ds.Bits.__name__ = ["de","polygonal","ds","Bits"];
de.polygonal.ds.Bits.getBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::getBits");
	var $spos = $s.length;
	var $tmp = x & mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.hasBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::hasBits");
	var $spos = $s.length;
	var $tmp = (x & mask) != 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.incBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::incBits");
	var $spos = $s.length;
	var $tmp = (x & mask) == mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.setBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::setBits");
	var $spos = $s.length;
	var $tmp = x | mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.clrBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::clrBits");
	var $spos = $s.length;
	var $tmp = x & ~mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.invBits = function(x,mask) {
	$s.push("de.polygonal.ds.Bits::invBits");
	var $spos = $s.length;
	var $tmp = x ^ mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.setBitsIf = function(x,mask,expr) {
	$s.push("de.polygonal.ds.Bits::setBitsIf");
	var $spos = $s.length;
	var $tmp = expr?x | mask:x & ~mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.hasBitAt = function(x,i) {
	$s.push("de.polygonal.ds.Bits::hasBitAt");
	var $spos = $s.length;
	if(true != (i >= 0 && i < 32)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Bits.hx", lineNumber : 247, className : "de.polygonal.ds.Bits", methodName : "hasBitAt"}); else null;
	var $tmp = (x & 1 << i) != 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.setBitAt = function(x,i) {
	$s.push("de.polygonal.ds.Bits::setBitAt");
	var $spos = $s.length;
	if(true != (i >= 0 && i < 32)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Bits.hx", lineNumber : 260, className : "de.polygonal.ds.Bits", methodName : "setBitAt"}); else null;
	var $tmp = x | 1 << i;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.clrBitAt = function(x,i) {
	$s.push("de.polygonal.ds.Bits::clrBitAt");
	var $spos = $s.length;
	if(true != (i >= 0 && i < 32)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Bits.hx", lineNumber : 273, className : "de.polygonal.ds.Bits", methodName : "clrBitAt"}); else null;
	var $tmp = x & ~(1 << i);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.invBitAt = function(x,i) {
	$s.push("de.polygonal.ds.Bits::invBitAt");
	var $spos = $s.length;
	if(true != (i >= 0 && i < 32)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Bits.hx", lineNumber : 292, className : "de.polygonal.ds.Bits", methodName : "invBitAt"}); else null;
	var $tmp = x ^ 1 << i;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.setBitsRange = function(x,min,max) {
	$s.push("de.polygonal.ds.Bits::setBitsRange");
	var $spos = $s.length;
	if(true != (min < max && min != max && min >= 0 && min < 32)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("invalid range (min: %d, max: %d)",[min,max]),{ fileName : "Bits.hx", lineNumber : 305, className : "de.polygonal.ds.Bits", methodName : "setBitsRange"}); else null;
	var _g = min;
	while(_g < max) {
		var i = _g++;
		x = x | 1 << i;
	}
	$s.pop();
	return x;
	$s.pop();
}
de.polygonal.ds.Bits.mask = function(n) {
	$s.push("de.polygonal.ds.Bits::mask");
	var $spos = $s.length;
	if(true != (n >= 1 && n <= 32)) throw new de.polygonal.ASE("n >= 1 && n <= Limits.INT_BITS",{ fileName : "Bits.hx", lineNumber : 325, className : "de.polygonal.ds.Bits", methodName : "mask"}); else null;
	var $tmp = (1 << n) - 1;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.ones = function(x) {
	$s.push("de.polygonal.ds.Bits::ones");
	var $spos = $s.length;
	x -= x >> 1 & 1431655765;
	x = (x >> 2 & 858993459) + (x & 858993459);
	x = (x >> 4) + x & 252645135;
	x += x >> 8;
	x += x >> 16;
	var $tmp = x & 63;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.ntz = function(x) {
	$s.push("de.polygonal.ds.Bits::ntz");
	var $spos = $s.length;
	var n = 0;
	if(x != 0) {
		x = (x ^ x - 1) >>> 1;
		while(x != 0) {
			x >>= 1;
			n++;
		}
	}
	$s.pop();
	return n;
	$s.pop();
}
de.polygonal.ds.Bits.nlz = function(x) {
	$s.push("de.polygonal.ds.Bits::nlz");
	var $spos = $s.length;
	if(x < 0) {
		$s.pop();
		return 0;
	} else {
		x |= x >> 1;
		x |= x >> 2;
		x |= x >> 4;
		x |= x >> 8;
		x |= x >> 16;
		var $tmp = 32 - de.polygonal.ds.Bits.ones(x);
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.ds.Bits.msb = function(x) {
	$s.push("de.polygonal.ds.Bits::msb");
	var $spos = $s.length;
	x |= x >> 1;
	x |= x >> 2;
	x |= x >> 4;
	x |= x >> 8;
	x |= x >> 16;
	var $tmp = x & ~(x >>> 1);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.rol = function(x,n) {
	$s.push("de.polygonal.ds.Bits::rol");
	var $spos = $s.length;
	var $tmp = x << n | x >>> 32 - n;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.ror = function(x,n) {
	$s.push("de.polygonal.ds.Bits::ror");
	var $spos = $s.length;
	var $tmp = x >>> n | x << 32 - n;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.reverse = function(x) {
	$s.push("de.polygonal.ds.Bits::reverse");
	var $spos = $s.length;
	var y = 1431655765;
	x = x >> 1 & y | (x & y) << 1;
	y = 858993459;
	x = x >> 2 & y | (x & y) << 2;
	y = 252645135;
	x = x >> 4 & y | (x & y) << 4;
	y = 16711935;
	x = x >> 8 & y | (x & y) << 8;
	var $tmp = x >> 16 | x << 16;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.flipWORD = function(x) {
	$s.push("de.polygonal.ds.Bits::flipWORD");
	var $spos = $s.length;
	var $tmp = x << 8 | x >> 8;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.flipDWORD = function(x) {
	$s.push("de.polygonal.ds.Bits::flipDWORD");
	var $spos = $s.length;
	var $tmp = x << 24 | x << 8 & 16711680 | x >> 8 & 65280 | x >> 24;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.packI16 = function(lo,hi) {
	$s.push("de.polygonal.ds.Bits::packI16");
	var $spos = $s.length;
	if(true != (lo >= -32768 && lo <= 32767)) throw new de.polygonal.ASE("lo overflow",{ fileName : "Bits.hx", lineNumber : 500, className : "de.polygonal.ds.Bits", methodName : "packI16"}); else null;
	if(true != (hi >= -32768 && hi <= 32767)) throw new de.polygonal.ASE("hi overflow",{ fileName : "Bits.hx", lineNumber : 501, className : "de.polygonal.ds.Bits", methodName : "packI16"}); else null;
	var $tmp = hi + 32768 << 16 | lo + 32768;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.packUI16 = function(lo,hi) {
	$s.push("de.polygonal.ds.Bits::packUI16");
	var $spos = $s.length;
	if(true != (lo >= 0 && lo <= 65535)) throw new de.polygonal.ASE("lo overflow",{ fileName : "Bits.hx", lineNumber : 515, className : "de.polygonal.ds.Bits", methodName : "packUI16"}); else null;
	if(true != (hi >= 0 && hi <= 65535)) throw new de.polygonal.ASE("hi overflow",{ fileName : "Bits.hx", lineNumber : 516, className : "de.polygonal.ds.Bits", methodName : "packUI16"}); else null;
	var $tmp = hi << 16 | lo;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.unpackI16Lo = function(x) {
	$s.push("de.polygonal.ds.Bits::unpackI16Lo");
	var $spos = $s.length;
	var $tmp = (x & 65535) - 32768;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.unpackI16Hi = function(x) {
	$s.push("de.polygonal.ds.Bits::unpackI16Hi");
	var $spos = $s.length;
	var $tmp = (x >>> 16) - 32768;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.unpackUI16Lo = function(x) {
	$s.push("de.polygonal.ds.Bits::unpackUI16Lo");
	var $spos = $s.length;
	var $tmp = x & 65535;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.unpackUI16Hi = function(x) {
	$s.push("de.polygonal.ds.Bits::unpackUI16Hi");
	var $spos = $s.length;
	var $tmp = x >>> 16;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.Bits.prototype = {
	__class__: de.polygonal.ds.Bits
}
var hxjson2 = hxjson2 || {}
hxjson2.JSONTokenizer = $hxClasses["hxjson2.JSONTokenizer"] = function(s,strict) {
	$s.push("hxjson2.JSONTokenizer::new");
	var $spos = $s.length;
	this.jsonString = s;
	this.strict = strict;
	this.loc = 0;
	this.nextChar();
	$s.pop();
}
hxjson2.JSONTokenizer.__name__ = ["hxjson2","JSONTokenizer"];
hxjson2.JSONTokenizer.prototype = {
	obj: null
	,jsonString: null
	,loc: null
	,ch: null
	,strict: null
	,getNextToken: function() {
		$s.push("hxjson2.JSONTokenizer::getNextToken");
		var $spos = $s.length;
		var token = new hxjson2.JSONToken();
		this.skipIgnored();
		switch(this.ch) {
		case "{":
			token.type = hxjson2.JSONTokenType.tLEFT_BRACE;
			token.value = "{";
			this.nextChar();
			break;
		case "}":
			token.type = hxjson2.JSONTokenType.tRIGHT_BRACE;
			token.value = "}";
			this.nextChar();
			break;
		case "[":
			token.type = hxjson2.JSONTokenType.tLEFT_BRACKET;
			token.value = "[";
			this.nextChar();
			break;
		case "]":
			token.type = hxjson2.JSONTokenType.tRIGHT_BRACKET;
			token.value = "]";
			this.nextChar();
			break;
		case ",":
			token.type = hxjson2.JSONTokenType.tCOMMA;
			token.value = ",";
			this.nextChar();
			break;
		case ":":
			token.type = hxjson2.JSONTokenType.tCOLON;
			token.value = ":";
			this.nextChar();
			break;
		case "t":
			var possibleTrue = "t" + (this.nextChar() + this.nextChar() + this.nextChar());
			if(possibleTrue == "true") {
				token.type = hxjson2.JSONTokenType.tTRUE;
				token.value = true;
				this.nextChar();
			} else this.parseError("Expecting 'true' but found " + possibleTrue);
			break;
		case "f":
			var possibleFalse = "f" + this.nextChar() + this.nextChar() + this.nextChar() + this.nextChar();
			if(possibleFalse == "false") {
				token.type = hxjson2.JSONTokenType.tFALSE;
				token.value = false;
				this.nextChar();
			} else this.parseError("Expecting 'false' but found " + possibleFalse);
			break;
		case "n":
			var possibleNull = "n" + this.nextChar() + this.nextChar() + this.nextChar();
			if(possibleNull == "null") {
				token.type = hxjson2.JSONTokenType.tNULL;
				token.value = null;
				this.nextChar();
			} else this.parseError("Expecting 'null' but found " + possibleNull);
			break;
		case "N":
			var possibleNAN = "N" + this.nextChar() + this.nextChar();
			if(possibleNAN == "NAN" || possibleNAN == "NaN") {
				token.type = hxjson2.JSONTokenType.tNAN;
				token.value = Math.NaN;
				this.nextChar();
			} else this.parseError("Expecting 'nan' but found " + possibleNAN);
			break;
		case "\"":
			token = this.readString();
			break;
		default:
			if(this.isDigit(this.ch) || this.ch == "-") token = this.readNumber(); else if(this.ch == "") {
				$s.pop();
				return null;
			} else this.parseError("Unexpected " + this.ch + " encountered");
		}
		$s.pop();
		return token;
		$s.pop();
	}
	,readString: function() {
		$s.push("hxjson2.JSONTokenizer::readString");
		var $spos = $s.length;
		var string = "";
		this.nextChar();
		while(this.ch != "\"" && this.ch != "") {
			if(this.ch == "\\") {
				this.nextChar();
				switch(this.ch) {
				case "\"":
					string += "\"";
					break;
				case "/":
					string += "/";
					break;
				case "\\/":
					string += "/";
					break;
				case "\\":
					string += "\\";
					break;
				case "n":
					string += "\n";
					break;
				case "r":
					string += "\r";
					break;
				case "t":
					string += "\t";
					break;
				case "u":
					var hexValue = "";
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						if(!this.isHexDigit(this.nextChar())) this.parseError(" Excepted a hex digit, but found: " + this.ch);
						hexValue += this.ch;
					}
					string += String.fromCharCode(this.hexValToInt(hexValue));
					break;
				default:
					string += "\\" + this.ch;
				}
			} else string += this.ch;
			this.nextChar();
		}
		if(this.ch == "") this.parseError("Unterminated string literal");
		this.nextChar();
		var token = new hxjson2.JSONToken();
		token.type = hxjson2.JSONTokenType.tSTRING;
		token.value = string;
		$s.pop();
		return token;
		$s.pop();
	}
	,hexValToInt: function(hexVal) {
		$s.push("hxjson2.JSONTokenizer::hexValToInt");
		var $spos = $s.length;
		var ret = 0;
		var _g1 = 0, _g = hexVal.length;
		while(_g1 < _g) {
			var i = _g1++;
			ret = ret << 4;
			switch(hexVal.charAt(i).toUpperCase()) {
			case "1":
				ret += 1;
				break;
			case "2":
				ret += 2;
				break;
			case "3":
				ret += 3;
				break;
			case "4":
				ret += 4;
				break;
			case "5":
				ret += 5;
				break;
			case "6":
				ret += 6;
				break;
			case "7":
				ret += 7;
				break;
			case "8":
				ret += 8;
				break;
			case "9":
				ret += 9;
				break;
			case "A":
				ret += 10;
				break;
			case "B":
				ret += 11;
				break;
			case "C":
				ret += 12;
				break;
			case "D":
				ret += 13;
				break;
			case "E":
				ret += 14;
				break;
			case "F":
				ret += 15;
				break;
			}
		}
		$s.pop();
		return ret;
		$s.pop();
	}
	,readNumber: function() {
		$s.push("hxjson2.JSONTokenizer::readNumber");
		var $spos = $s.length;
		var input = "";
		if(this.ch == "-") {
			input += "-";
			this.nextChar();
		}
		if(!this.isDigit(this.ch)) this.parseError("Expecting a digit");
		if(this.ch == "0") {
			input += this.ch;
			this.nextChar();
			if(this.isDigit(this.ch)) this.parseError("A digit cannot immediately follow 0"); else if(!this.strict && this.ch == "x") {
				input += this.ch;
				this.nextChar();
				if(this.isHexDigit(this.ch)) {
					input += this.ch;
					this.nextChar();
				} else this.parseError("Number in hex format require at least one hex digit after \"0x\"");
				while(this.isHexDigit(this.ch)) {
					input += this.ch;
					this.nextChar();
				}
				input = Std.string(this.hexValToInt(input));
			}
		} else while(this.isDigit(this.ch)) {
			input += this.ch;
			this.nextChar();
		}
		if(this.ch == ".") {
			input += ".";
			this.nextChar();
			if(!this.isDigit(this.ch)) this.parseError("Expecting a digit");
			while(this.isDigit(this.ch)) {
				input += this.ch;
				this.nextChar();
			}
		}
		if(this.ch == "e" || this.ch == "E") {
			input += "e";
			this.nextChar();
			if(this.ch == "+" || this.ch == "-") {
				input += this.ch;
				this.nextChar();
			}
			if(!this.isDigit(this.ch)) this.parseError("Scientific notation number needs exponent value");
			while(this.isDigit(this.ch)) {
				input += this.ch;
				this.nextChar();
			}
		}
		var num = Std.parseFloat(input);
		if(Math.isFinite(num) && !Math.isNaN(num)) {
			var token = new hxjson2.JSONToken();
			token.type = hxjson2.JSONTokenType.tNUMBER;
			token.value = num;
			$s.pop();
			return token;
		} else this.parseError("Number " + num + " is not valid!");
		$s.pop();
		return null;
		$s.pop();
	}
	,nextChar: function() {
		$s.push("hxjson2.JSONTokenizer::nextChar");
		var $spos = $s.length;
		var $tmp = this.ch = this.jsonString.charAt(this.loc++);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,skipIgnored: function() {
		$s.push("hxjson2.JSONTokenizer::skipIgnored");
		var $spos = $s.length;
		var originalLoc;
		do {
			originalLoc = this.loc;
			this.skipWhite();
			this.skipComments();
		} while(originalLoc != this.loc);
		$s.pop();
	}
	,skipComments: function() {
		$s.push("hxjson2.JSONTokenizer::skipComments");
		var $spos = $s.length;
		if(this.ch == "/") {
			this.nextChar();
			switch(this.ch) {
			case "/":
				do this.nextChar(); while(this.ch != "\n" && this.ch != "");
				this.nextChar();
				break;
			case "*":
				this.nextChar();
				while(true) {
					if(this.ch == "*") {
						this.nextChar();
						if(this.ch == "/") {
							this.nextChar();
							break;
						}
					} else this.nextChar();
					if(this.ch == "") this.parseError("Multi-line comment not closed");
				}
				break;
			default:
				this.parseError("Unexpected " + this.ch + " encountered (expecting '/' or '*' )");
			}
		}
		$s.pop();
	}
	,skipWhite: function() {
		$s.push("hxjson2.JSONTokenizer::skipWhite");
		var $spos = $s.length;
		while(this.isWhiteSpace(this.ch)) this.nextChar();
		$s.pop();
	}
	,isWhiteSpace: function(ch) {
		$s.push("hxjson2.JSONTokenizer::isWhiteSpace");
		var $spos = $s.length;
		var $tmp = ch == " " || ch == "\t" || ch == "\n" || ch == "\r";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isDigit: function(ch) {
		$s.push("hxjson2.JSONTokenizer::isDigit");
		var $spos = $s.length;
		var $tmp = ch >= "0" && ch <= "9";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isHexDigit: function(ch) {
		$s.push("hxjson2.JSONTokenizer::isHexDigit");
		var $spos = $s.length;
		var uc = ch.toUpperCase();
		var $tmp = this.isDigit(ch) || uc >= "A" && uc <= "F";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,parseError: function(message) {
		$s.push("hxjson2.JSONTokenizer::parseError");
		var $spos = $s.length;
		throw new hxjson2.JSONParseError(message,this.loc,this.jsonString);
		$s.pop();
	}
	,__class__: hxjson2.JSONTokenizer
}
if(!jeash.text) jeash.text = {}
jeash.text.Font = $hxClasses["jeash.text.Font"] = function() {
	$s.push("jeash.text.Font::new");
	var $spos = $s.length;
	this.jeashMetrics = [];
	this.jeashFontScale = 9.0;
	var className = Type.getClassName(Type.getClass(this));
	if(jeash.text.Font.jeashFontData == null) {
		jeash.text.Font.jeashFontData = [];
		jeash.text.Font.jeashFontData["Bitstream_Vera_Sans"] = jeash.text.Font.DEFAULT_FONT_DATA;
	}
	this.jeashSetFontName(className == "jeash.text.Font"?"Bitstream_Vera_Sans":className.split(".").pop());
	$s.pop();
}
jeash.text.Font.__name__ = ["jeash","text","Font"];
jeash.text.Font.jeashFontData = null;
jeash.text.Font.enumerateFonts = function(enumerateDeviceFonts) {
	$s.push("jeash.text.Font::enumerateFonts");
	var $spos = $s.length;
	var sans = new jeash.text.Font();
	sans.jeashSetFontName("Bitstream_Vera_Sans");
	sans.fontStyle = jeash.text.FontStyle.REGULAR;
	sans.fontType = jeash.text.FontType.DEVICE;
	var $tmp = [sans];
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.text.Font.registerFont = function(font) {
	$s.push("jeash.text.Font::registerFont");
	var $spos = $s.length;
	$s.pop();
}
jeash.text.Font.jeashOfResource = function(name) {
	$s.push("jeash.text.Font::jeashOfResource");
	var $spos = $s.length;
	var data = haxe.Resource.getString(name);
	if(data == null) throw "Resource data for string '" + name + "' not found.";
	jeash.text.Font.jeashFontData[name] = haxe.Resource.getString(name);
	$s.pop();
}
jeash.text.Font.prototype = {
	fontName: null
	,fontStyle: null
	,fontType: null
	,jeashMetrics: null
	,jeashGlyphData: null
	,jeashFontScale: null
	,hasGlyph: function() {
		$s.push("jeash.text.Font::hasGlyph");
		var $spos = $s.length;
		$s.pop();
		return false;
		$s.pop();
	}
	,jeashSetScale: function(scale) {
		$s.push("jeash.text.Font::jeashSetScale");
		var $spos = $s.length;
		this.jeashFontScale = scale / 1024;
		$s.pop();
	}
	,jeashGetAdvance: function(inGlyph,height) {
		$s.push("jeash.text.Font::jeashGetAdvance");
		var $spos = $s.length;
		var m = this.jeashMetrics[inGlyph];
		if(m == null) {
			var glyph = this.jeashGlyphData.get(inGlyph);
			if(glyph == null) {
				$s.pop();
				return 0;
			}
			this.jeashMetrics[inGlyph] = m = Std["int"](glyph._width * this.jeashFontScale);
		}
		if(m == null) {
			$s.pop();
			return 0;
		}
		$s.pop();
		return m;
		$s.pop();
	}
	,jeashRender: function(graphics,inChar,inX,inY,inOutline) {
		$s.push("jeash.text.Font::jeashRender");
		var $spos = $s.length;
		var index = 0;
		var glyph = this.jeashGlyphData.get(inChar);
		if(glyph == null) {
			$s.pop();
			return;
		}
		var commands = glyph.commands;
		var data = glyph.data;
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c) {
			case 1:
				graphics.moveTo(inX + data[index++] * this.jeashFontScale,inY + data[index++] * this.jeashFontScale);
				break;
			case 2:
				graphics.lineTo(inX + data[index++] * this.jeashFontScale,inY + data[index++] * this.jeashFontScale);
				break;
			case 3:
				graphics.curveTo(inX + data[index++] * this.jeashFontScale,inY + data[index++] * this.jeashFontScale,inX + data[index++] * this.jeashFontScale,inY + data[index++] * this.jeashFontScale);
				break;
			}
		}
		$s.pop();
	}
	,jeashSetFontName: function(name) {
		$s.push("jeash.text.Font::jeashSetFontName");
		var $spos = $s.length;
		this.fontName = name;
		if(jeash.text.Font.jeashFontData[this.fontName] == null) try {
			jeash.text.Font.jeashOfResource(name);
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			jeash.Lib.trace("Glyph data for font '" + name + "' does not exist, defaulting to '" + "Bitstream_Vera_Sans" + "'.");
			this.fontName = "Bitstream_Vera_Sans";
		}
		this.jeashGlyphData = haxe.Unserializer.run(jeash.text.Font.jeashFontData[this.fontName]);
		$s.pop();
		return name;
		$s.pop();
	}
	,__class__: jeash.text.Font
	,__properties__: {set_fontName:"jeashSetFontName"}
}
jeash.text.TextFormatAlign = $hxClasses["jeash.text.TextFormatAlign"] = { __ename__ : ["jeash","text","TextFormatAlign"], __constructs__ : ["LEFT","RIGHT","JUSTIFY","CENTER"] }
jeash.text.TextFormatAlign.LEFT = ["LEFT",0];
jeash.text.TextFormatAlign.LEFT.toString = $estr;
jeash.text.TextFormatAlign.LEFT.__enum__ = jeash.text.TextFormatAlign;
jeash.text.TextFormatAlign.RIGHT = ["RIGHT",1];
jeash.text.TextFormatAlign.RIGHT.toString = $estr;
jeash.text.TextFormatAlign.RIGHT.__enum__ = jeash.text.TextFormatAlign;
jeash.text.TextFormatAlign.JUSTIFY = ["JUSTIFY",2];
jeash.text.TextFormatAlign.JUSTIFY.toString = $estr;
jeash.text.TextFormatAlign.JUSTIFY.__enum__ = jeash.text.TextFormatAlign;
jeash.text.TextFormatAlign.CENTER = ["CENTER",3];
jeash.text.TextFormatAlign.CENTER.toString = $estr;
jeash.text.TextFormatAlign.CENTER.__enum__ = jeash.text.TextFormatAlign;
if(!jeash.geom) jeash.geom = {}
jeash.geom.Matrix = $hxClasses["jeash.geom.Matrix"] = function(in_a,in_b,in_c,in_d,in_tx,in_ty) {
	$s.push("jeash.geom.Matrix::new");
	var $spos = $s.length;
	this.a = in_a == null?1.0:in_a;
	this.b = in_b == null?0.0:in_b;
	this.c = in_c == null?0.0:in_c;
	this.d = in_d == null?1.0:in_d;
	this.tx = in_tx == null?0.0:in_tx;
	this.ty = in_ty == null?0.0:in_ty;
	$s.pop();
}
jeash.geom.Matrix.__name__ = ["jeash","geom","Matrix"];
jeash.geom.Matrix.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,tx: null
	,ty: null
	,clone: function() {
		$s.push("jeash.geom.Matrix::clone");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,createGradientBox: function(in_width,in_height,rotation,in_tx,in_ty) {
		$s.push("jeash.geom.Matrix::createGradientBox");
		var $spos = $s.length;
		this.a = in_width / 1638.4;
		this.d = in_height / 1638.4;
		if(rotation != null && rotation != 0.0) {
			var cos = Math.cos(rotation);
			var sin = Math.sin(rotation);
			this.b = sin * this.d;
			this.c = -sin * this.a;
			this.a *= cos;
			this.d *= cos;
		} else this.b = this.c = 0;
		this.tx = in_tx != null?in_tx + in_width / 2:in_width / 2;
		this.ty = in_ty != null?in_ty + in_height / 2:in_height / 2;
		$s.pop();
	}
	,setRotation: function(inTheta,inScale) {
		$s.push("jeash.geom.Matrix::setRotation");
		var $spos = $s.length;
		var scale = inScale == null?1.0:inScale;
		this.a = Math.cos(inTheta) * scale;
		this.c = Math.sin(inTheta) * scale;
		this.b = -this.c;
		this.d = this.a;
		$s.pop();
	}
	,invert: function() {
		$s.push("jeash.geom.Matrix::invert");
		var $spos = $s.length;
		var norm = this.a * this.d - this.b * this.c;
		if(norm == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			norm = 1.0 / norm;
			var a1 = this.d * norm;
			this.d = this.a * norm;
			this.a = a1;
			this.b *= -norm;
			this.c *= -norm;
			var tx1 = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = tx1;
		}
		$s.pop();
		return this;
		$s.pop();
	}
	,transformPoint: function(inPos) {
		$s.push("jeash.geom.Matrix::transformPoint");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(inPos.x * this.a + inPos.y * this.c + this.tx,inPos.x * this.b + inPos.y * this.d + this.ty);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,translate: function(inDX,inDY) {
		$s.push("jeash.geom.Matrix::translate");
		var $spos = $s.length;
		this.tx += inDX;
		this.ty += inDY;
		$s.pop();
	}
	,rotate: function(inTheta) {
		$s.push("jeash.geom.Matrix::rotate");
		var $spos = $s.length;
		var cos = Math.cos(inTheta);
		var sin = Math.sin(inTheta);
		var a1 = this.a * cos - this.b * sin;
		this.b = this.a * sin + this.b * cos;
		this.a = a1;
		var c1 = this.c * cos - this.d * sin;
		this.d = this.c * sin + this.d * cos;
		this.c = c1;
		var tx1 = this.tx * cos - this.ty * sin;
		this.ty = this.tx * sin + this.ty * cos;
		this.tx = tx1;
		$s.pop();
	}
	,scale: function(inSX,inSY) {
		$s.push("jeash.geom.Matrix::scale");
		var $spos = $s.length;
		this.a *= inSX;
		this.b *= inSY;
		this.c *= inSX;
		this.d *= inSY;
		this.tx *= inSX;
		this.ty *= inSY;
		$s.pop();
	}
	,concat: function(m) {
		$s.push("jeash.geom.Matrix::concat");
		var $spos = $s.length;
		var a1 = this.a * m.a + this.b * m.c;
		this.b = this.a * m.b + this.b * m.d;
		this.a = a1;
		var c1 = this.c * m.a + this.d * m.c;
		this.d = this.c * m.b + this.d * m.d;
		this.c = c1;
		var tx1 = this.tx * m.a + this.ty * m.c + m.tx;
		this.ty = this.tx * m.b + this.ty * m.d + m.ty;
		this.tx = tx1;
		$s.pop();
	}
	,mult: function(m) {
		$s.push("jeash.geom.Matrix::mult");
		var $spos = $s.length;
		var result = new jeash.geom.Matrix();
		result.a = this.a * m.a + this.b * m.c;
		result.b = this.a * m.b + this.b * m.d;
		result.c = this.c * m.a + this.d * m.c;
		result.d = this.c * m.b + this.d * m.d;
		result.tx = this.tx * m.a + this.ty * m.c + m.tx;
		result.ty = this.tx * m.b + this.ty * m.d + m.ty;
		$s.pop();
		return result;
		$s.pop();
	}
	,identity: function() {
		$s.push("jeash.geom.Matrix::identity");
		var $spos = $s.length;
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 1;
		this.tx = 0;
		this.ty = 0;
		$s.pop();
	}
	,toMozString: function() {
		$s.push("jeash.geom.Matrix::toMozString");
		var $spos = $s.length;
		var $tmp = "matrix(" + this.a.toFixed(4) + ", " + this.b.toFixed(4) + ", " + this.c.toFixed(4) + ", " + this.d.toFixed(4) + ", " + this.tx.toFixed(4) + "px, " + this.ty.toFixed(4) + "px)";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("jeash.geom.Matrix::toString");
		var $spos = $s.length;
		var $tmp = "matrix(" + this.a.toFixed(4) + ", " + this.b.toFixed(4) + ", " + this.c.toFixed(4) + ", " + this.d.toFixed(4) + ", " + this.tx.toFixed(4) + ", " + this.ty.toFixed(4) + ")";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.geom.Matrix
}
var Std = $hxClasses["Std"] = function() { }
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	$s.push("Std::is");
	var $spos = $s.length;
	var $tmp = js.Boot.__instanceof(v,t);
	$s.pop();
	return $tmp;
	$s.pop();
}
Std.string = function(s) {
	$s.push("Std::string");
	var $spos = $s.length;
	var $tmp = js.Boot.__string_rec(s,"");
	$s.pop();
	return $tmp;
	$s.pop();
}
Std["int"] = function(x) {
	$s.push("Std::int");
	var $spos = $s.length;
	if(x < 0) {
		var $tmp = Math.ceil(x);
		$s.pop();
		return $tmp;
	}
	var $tmp = Math.floor(x);
	$s.pop();
	return $tmp;
	$s.pop();
}
Std.parseInt = function(x) {
	$s.push("Std::parseInt");
	var $spos = $s.length;
	var v = parseInt(x,10);
	if(v == 0 && x.charCodeAt(1) == 120) v = parseInt(x);
	if(isNaN(v)) {
		$s.pop();
		return null;
	}
	var $tmp = v;
	$s.pop();
	return $tmp;
	$s.pop();
}
Std.parseFloat = function(x) {
	$s.push("Std::parseFloat");
	var $spos = $s.length;
	var $tmp = parseFloat(x);
	$s.pop();
	return $tmp;
	$s.pop();
}
Std.random = function(x) {
	$s.push("Std::random");
	var $spos = $s.length;
	var $tmp = Math.floor(Math.random() * x);
	$s.pop();
	return $tmp;
	$s.pop();
}
Std.prototype = {
	__class__: Std
}
var Hash = $hxClasses["Hash"] = function() {
	$s.push("Hash::new");
	var $spos = $s.length;
	this.h = {}
	if(this.h.__proto__ != null) {
		this.h.__proto__ = null;
		delete(this.h.__proto__);
	}
	$s.pop();
}
Hash.__name__ = ["Hash"];
Hash.prototype = {
	h: null
	,set: function(key,value) {
		$s.push("Hash::set");
		var $spos = $s.length;
		this.h["$" + key] = value;
		$s.pop();
	}
	,get: function(key) {
		$s.push("Hash::get");
		var $spos = $s.length;
		var $tmp = this.h["$" + key];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,exists: function(key) {
		$s.push("Hash::exists");
		var $spos = $s.length;
		try {
			key = "$" + key;
			var $tmp = this.hasOwnProperty.call(this.h,key);
			$s.pop();
			return $tmp;
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			for(var i in this.h) if( i == key ) return true;
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,remove: function(key) {
		$s.push("Hash::remove");
		var $spos = $s.length;
		if(!this.exists(key)) {
			$s.pop();
			return false;
		}
		delete(this.h["$" + key]);
		$s.pop();
		return true;
		$s.pop();
	}
	,keys: function() {
		$s.push("Hash::keys");
		var $spos = $s.length;
		var a = new Array();
		for(var i in this.h) a.push(i.substr(1));
		var $tmp = a.iterator();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,iterator: function() {
		$s.push("Hash::iterator");
		var $spos = $s.length;
		var $tmp = { ref : this.h, it : this.keys(), hasNext : function() {
			$s.push("Hash::iterator@75");
			var $spos = $s.length;
			var $tmp = this.it.hasNext();
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("Hash::iterator@76");
			var $spos = $s.length;
			var i = this.it.next();
			var $tmp = this.ref["$" + i];
			$s.pop();
			return $tmp;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("Hash::toString");
		var $spos = $s.length;
		var s = new StringBuf();
		s.b[s.b.length] = "{";
		var it = this.keys();
		while( it.hasNext() ) {
			var i = it.next();
			s.b[s.b.length] = i == null?"null":i;
			s.b[s.b.length] = " => ";
			s.add(Std.string(this.get(i)));
			if(it.hasNext()) s.b[s.b.length] = ", ";
		}
		s.b[s.b.length] = "}";
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: Hash
}
var nme = nme || {}
if(!nme.installer) nme.installer = {}
nme.installer.Assets = $hxClasses["nme.installer.Assets"] = function() { }
nme.installer.Assets.__name__ = ["nme","installer","Assets"];
nme.installer.Assets.getBitmapData = function(id,useCache) {
	$s.push("nme.installer.Assets::getBitmapData");
	var $spos = $s.length;
	if(useCache == null) useCache = true;
	switch(id) {
	}
	$s.pop();
	return null;
	$s.pop();
}
nme.installer.Assets.getBytes = function(id) {
	$s.push("nme.installer.Assets::getBytes");
	var $spos = $s.length;
	switch(id) {
	}
	$s.pop();
	return null;
	$s.pop();
}
nme.installer.Assets.getFont = function(id) {
	$s.push("nme.installer.Assets::getFont");
	var $spos = $s.length;
	switch(id) {
	}
	$s.pop();
	return null;
	$s.pop();
}
nme.installer.Assets.getSound = function(id) {
	$s.push("nme.installer.Assets::getSound");
	var $spos = $s.length;
	switch(id) {
	}
	$s.pop();
	return null;
	$s.pop();
}
nme.installer.Assets.getText = function(id) {
	$s.push("nme.installer.Assets::getText");
	var $spos = $s.length;
	switch(id) {
	}
	$s.pop();
	return null;
	$s.pop();
}
nme.installer.Assets.prototype = {
	__class__: nme.installer.Assets
}
de.polygonal.ds.BitFlags = $hxClasses["de.polygonal.ds.BitFlags"] = function() { }
de.polygonal.ds.BitFlags.__name__ = ["de","polygonal","ds","BitFlags"];
de.polygonal.ds.BitFlags.getf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::getf");
	var $spos = $s.length;
	var $tmp = x._bits & mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.BitFlags.hasf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::hasf");
	var $spos = $s.length;
	var $tmp = (x._bits & mask) != 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.BitFlags.incf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::incf");
	var $spos = $s.length;
	var $tmp = (x._bits & mask) == mask;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.BitFlags.setf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::setf");
	var $spos = $s.length;
	x._bits = x._bits | mask;
	$s.pop();
}
de.polygonal.ds.BitFlags.clrf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::clrf");
	var $spos = $s.length;
	x._bits = x._bits & ~mask;
	$s.pop();
}
de.polygonal.ds.BitFlags.invf = function(x,mask) {
	$s.push("de.polygonal.ds.BitFlags::invf");
	var $spos = $s.length;
	x._bits = x._bits ^ mask;
	$s.pop();
}
de.polygonal.ds.BitFlags.nulf = function(x) {
	$s.push("de.polygonal.ds.BitFlags::nulf");
	var $spos = $s.length;
	x._bits = 0;
	$s.pop();
}
de.polygonal.ds.BitFlags.cpyf = function(x,other) {
	$s.push("de.polygonal.ds.BitFlags::cpyf");
	var $spos = $s.length;
	x._bits = other._bits;
	$s.pop();
}
de.polygonal.ds.BitFlags.swpf = function(x,i,j) {
	$s.push("de.polygonal.ds.BitFlags::swpf");
	var $spos = $s.length;
	var b = x._bits;
	var t = (b >> i ^ b >> j) & 1;
	x._bits = b ^ (t << i | t << j);
	$s.pop();
}
de.polygonal.ds.BitFlags.setiff = function(x,bits,expr) {
	$s.push("de.polygonal.ds.BitFlags::setiff");
	var $spos = $s.length;
	if(expr) x._bits = x._bits | bits; else x._bits = x._bits & ~bits;
	$s.pop();
}
de.polygonal.ds.BitFlags.prototype = {
	__class__: de.polygonal.ds.BitFlags
}
com.wighawag.game.engine.core.Renderable = $hxClasses["com.wighawag.game.engine.core.Renderable"] = function() { }
com.wighawag.game.engine.core.Renderable.__name__ = ["com","wighawag","game","engine","core","Renderable"];
com.wighawag.game.engine.core.Renderable.prototype = {
	onEntityAdded: null
	,onEntityRemoved: null
	,__class__: com.wighawag.game.engine.core.Renderable
}
jeash.display.IGraphicsFill = $hxClasses["jeash.display.IGraphicsFill"] = function() { }
jeash.display.IGraphicsFill.__name__ = ["jeash","display","IGraphicsFill"];
jeash.display.IGraphicsFill.prototype = {
	jeashGraphicsFillType: null
	,__class__: jeash.display.IGraphicsFill
}
jeash.display.IGraphicsData = $hxClasses["jeash.display.IGraphicsData"] = function() { }
jeash.display.IGraphicsData.__name__ = ["jeash","display","IGraphicsData"];
jeash.display.IGraphicsData.prototype = {
	jeashGraphicsDataType: null
	,__class__: jeash.display.IGraphicsData
}
jeash.display.GraphicsGradientFill = $hxClasses["jeash.display.GraphicsGradientFill"] = function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
	$s.push("jeash.display.GraphicsGradientFill::new");
	var $spos = $s.length;
	if(focalPointRatio == null) focalPointRatio = 0;
	this.type = type;
	this.colors = colors;
	this.alphas = alphas;
	this.ratios = ratios;
	this.matrix = matrix;
	this.spreadMethod = spreadMethod;
	this.interpolationMethod = interpolationMethod;
	this.focalPointRatio = focalPointRatio;
	this.jeashGraphicsDataType = jeash.display.GraphicsDataType.GRADIENT;
	this.jeashGraphicsFillType = jeash.display.GraphicsFillType.GRADIENT_FILL;
	$s.pop();
}
jeash.display.GraphicsGradientFill.__name__ = ["jeash","display","GraphicsGradientFill"];
jeash.display.GraphicsGradientFill.__interfaces__ = [jeash.display.IGraphicsFill,jeash.display.IGraphicsData];
jeash.display.GraphicsGradientFill.prototype = {
	alphas: null
	,colors: null
	,focalPointRatio: null
	,interpolationMethod: null
	,matrix: null
	,ratios: null
	,spreadMethod: null
	,type: null
	,jeashGraphicsDataType: null
	,jeashGraphicsFillType: null
	,__class__: jeash.display.GraphicsGradientFill
}
jeash.display.StageAlign = $hxClasses["jeash.display.StageAlign"] = { __ename__ : ["jeash","display","StageAlign"], __constructs__ : ["TOP_RIGHT","TOP_LEFT","TOP","RIGHT","LEFT","BOTTOM_RIGHT","BOTTOM_LEFT","BOTTOM"] }
jeash.display.StageAlign.TOP_RIGHT = ["TOP_RIGHT",0];
jeash.display.StageAlign.TOP_RIGHT.toString = $estr;
jeash.display.StageAlign.TOP_RIGHT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.TOP_LEFT = ["TOP_LEFT",1];
jeash.display.StageAlign.TOP_LEFT.toString = $estr;
jeash.display.StageAlign.TOP_LEFT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.TOP = ["TOP",2];
jeash.display.StageAlign.TOP.toString = $estr;
jeash.display.StageAlign.TOP.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.RIGHT = ["RIGHT",3];
jeash.display.StageAlign.RIGHT.toString = $estr;
jeash.display.StageAlign.RIGHT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.LEFT = ["LEFT",4];
jeash.display.StageAlign.LEFT.toString = $estr;
jeash.display.StageAlign.LEFT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.BOTTOM_RIGHT = ["BOTTOM_RIGHT",5];
jeash.display.StageAlign.BOTTOM_RIGHT.toString = $estr;
jeash.display.StageAlign.BOTTOM_RIGHT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.BOTTOM_LEFT = ["BOTTOM_LEFT",6];
jeash.display.StageAlign.BOTTOM_LEFT.toString = $estr;
jeash.display.StageAlign.BOTTOM_LEFT.__enum__ = jeash.display.StageAlign;
jeash.display.StageAlign.BOTTOM = ["BOTTOM",7];
jeash.display.StageAlign.BOTTOM.toString = $estr;
jeash.display.StageAlign.BOTTOM.__enum__ = jeash.display.StageAlign;
jeash.events.Event = $hxClasses["jeash.events.Event"] = function(inType,inBubbles,inCancelable) {
	$s.push("jeash.events.Event::new");
	var $spos = $s.length;
	if(inCancelable == null) inCancelable = false;
	if(inBubbles == null) inBubbles = false;
	this.type = inType;
	this.bubbles = inBubbles;
	this.cancelable = inCancelable;
	this.jeashIsCancelled = false;
	this.jeashIsCancelledNow = false;
	this.target = null;
	this.currentTarget = null;
	this.eventPhase = jeash.events.EventPhase.AT_TARGET;
	$s.pop();
}
jeash.events.Event.__name__ = ["jeash","events","Event"];
jeash.events.Event.prototype = {
	bubbles: null
	,cancelable: null
	,eventPhase: null
	,target: null
	,currentTarget: null
	,type: null
	,jeashIsCancelled: null
	,jeashIsCancelledNow: null
	,jeashSetPhase: function(phase) {
		$s.push("jeash.events.Event::jeashSetPhase");
		var $spos = $s.length;
		this.eventPhase = phase;
		$s.pop();
	}
	,jeashGetIsCancelled: function() {
		$s.push("jeash.events.Event::jeashGetIsCancelled");
		var $spos = $s.length;
		var $tmp = this.jeashIsCancelled;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetIsCancelledNow: function() {
		$s.push("jeash.events.Event::jeashGetIsCancelledNow");
		var $spos = $s.length;
		var $tmp = this.jeashIsCancelledNow;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clone: function() {
		$s.push("jeash.events.Event::clone");
		var $spos = $s.length;
		var $tmp = new jeash.events.Event(this.type,this.bubbles,this.cancelable);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,stopImmediatePropagation: function() {
		$s.push("jeash.events.Event::stopImmediatePropagation");
		var $spos = $s.length;
		this.jeashIsCancelledNow = this.jeashIsCancelled = true;
		$s.pop();
	}
	,stopPropagation: function() {
		$s.push("jeash.events.Event::stopPropagation");
		var $spos = $s.length;
		this.jeashIsCancelled = true;
		$s.pop();
	}
	,toString: function() {
		$s.push("jeash.events.Event::toString");
		var $spos = $s.length;
		$s.pop();
		return "Event";
		$s.pop();
	}
	,jeashCreateSimilar: function(type,related,targ) {
		$s.push("jeash.events.Event::jeashCreateSimilar");
		var $spos = $s.length;
		var result = new jeash.events.Event(type,this.bubbles,this.cancelable);
		if(targ != null) result.target = targ;
		$s.pop();
		return result;
		$s.pop();
	}
	,__class__: jeash.events.Event
}
jeash.events.KeyboardEvent = $hxClasses["jeash.events.KeyboardEvent"] = function(type,bubbles,cancelable,inCharCode,inKeyCode,inKeyLocation,inCtrlKey,inAltKey,inShiftKey) {
	$s.push("jeash.events.KeyboardEvent::new");
	var $spos = $s.length;
	jeash.events.Event.call(this,type,bubbles,cancelable);
	this.keyCode = inKeyCode;
	this.keyLocation = inKeyLocation == null?0:inKeyLocation;
	this.charCode = inCharCode == null?0:inCharCode;
	this.shiftKey = inShiftKey == null?false:inShiftKey;
	this.altKey = inAltKey == null?false:inAltKey;
	this.ctrlKey = inCtrlKey == null?false:inCtrlKey;
	$s.pop();
}
jeash.events.KeyboardEvent.__name__ = ["jeash","events","KeyboardEvent"];
jeash.events.KeyboardEvent.__super__ = jeash.events.Event;
jeash.events.KeyboardEvent.prototype = $extend(jeash.events.Event.prototype,{
	keyCode: null
	,charCode: null
	,keyLocation: null
	,ctrlKey: null
	,altKey: null
	,shiftKey: null
	,__class__: jeash.events.KeyboardEvent
});
com.wighawag.log.Logger = $hxClasses["com.wighawag.log.Logger"] = function() { }
com.wighawag.log.Logger.__name__ = ["com","wighawag","log","Logger"];
com.wighawag.log.Logger.trace = function(value,posInfos) {
	$s.push("com.wighawag.log.Logger::trace");
	var $spos = $s.length;
	haxe.Log.trace(value,{ fileName : "Logger.hx", lineNumber : 13, className : "com.wighawag.log.Logger", methodName : "trace", customParams : [posInfos]});
	$s.pop();
}
com.wighawag.log.Logger.warning = function(value,posInfos) {
	$s.push("com.wighawag.log.Logger::warning");
	var $spos = $s.length;
	haxe.Log.trace(value,{ fileName : "Logger.hx", lineNumber : 22, className : "com.wighawag.log.Logger", methodName : "warning", customParams : [posInfos]});
	$s.pop();
}
com.wighawag.log.Logger.error = function(value,posInfos) {
	$s.push("com.wighawag.log.Logger::error");
	var $spos = $s.length;
	haxe.Log.trace(value,{ fileName : "Logger.hx", lineNumber : 31, className : "com.wighawag.log.Logger", methodName : "error", customParams : [posInfos]});
	$s.pop();
}
com.wighawag.log.Logger.criticalError = function(value,posInfos) {
	$s.push("com.wighawag.log.Logger::criticalError");
	var $spos = $s.length;
	haxe.Log.trace(value,{ fileName : "Logger.hx", lineNumber : 40, className : "com.wighawag.log.Logger", methodName : "criticalError", customParams : [posInfos]});
	$s.pop();
}
com.wighawag.log.Logger.prototype = {
	__class__: com.wighawag.log.Logger
}
com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController = $hxClasses["com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController"] = function() {
	$s.push("com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController::new");
	var $spos = $s.length;
	this.reset();
	$s.pop();
}
com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController.__name__ = ["com","wighawag","game","xjump","controller","PolygonalKeyBoardGameController"];
com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController.__interfaces__ = [com.wighawag.game.xjump.controller.KeyBoardGameController];
com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController.prototype = {
	numUpdates: null
	,record: null
	,reset: function() {
		$s.push("com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController::reset");
		var $spos = $s.length;
		this.numUpdates = 0;
		this.record = new de.polygonal.ds.IntHashTable(256);
		$s.pop();
	}
	,update: function(millisecondsStep) {
		$s.push("com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController::update");
		var $spos = $s.length;
		this.numUpdates++;
		$s.pop();
	}
	,getRecord: function() {
		$s.push("com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController::getRecord");
		var $spos = $s.length;
		var data = new Hash();
		var $it0 = this.record.keys();
		while( $it0.hasNext() ) {
			var update = $it0.next();
			var keyCodeSet = this.record.get(update);
			var array = new Array();
			var $it1 = keyCodeSet.iterator();
			while( $it1.hasNext() ) {
				var keyCode = $it1.next();
				array.push(keyCode);
			}
			data.set(Std.string(update),array);
		}
		var json = new hxjson2.JSONEncoder(data).getString();
		var encoded_data = ((function($this) {
			var $r;
			if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
			$r = de.polygonal.core.io.Base64._instance;
			return $r;
		}(this)))._encodeStr(json,false,76);
		$s.pop();
		return encoded_data;
		$s.pop();
	}
	,isKeyDown: function(keyCode) {
		$s.push("com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController::isKeyDown");
		var $spos = $s.length;
		var keyDown = de.polygonal.ui.UI.instance().isKeyDown(keyCode);
		if(keyDown) {
			var keyCodeSet;
			if(this.record._h.hasKey(this.numUpdates)) {
				keyCodeSet = this.record.get(this.numUpdates);
				if(!keyCodeSet.has(keyCode)) keyCodeSet.set(keyCode);
			} else {
				keyCodeSet = new de.polygonal.ds.IntHashSet(4);
				keyCodeSet.set(keyCode);
				this.record.set(this.numUpdates,keyCodeSet);
			}
		}
		$s.pop();
		return keyDown;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController
}
com.wighawag.remote.service.Seed = $hxClasses["remote.service.Seed"] = function(seedList,version) {
	$s.push("remote.service.Seed::new");
	var $spos = $s.length;
	this.seedList = seedList;
	this.version = version;
	$s.pop();
}
com.wighawag.remote.service.Seed.__name__ = ["com","wighawag","remote","service","Seed"];
com.wighawag.remote.service.Seed.prototype = {
	seedList: null
	,version: null
	,__class__: com.wighawag.remote.service.Seed
}
com.wighawag.game.engine.core.Process = $hxClasses["com.wighawag.game.engine.core.Process"] = function() { }
com.wighawag.game.engine.core.Process.__name__ = ["com","wighawag","game","engine","core","Process"];
com.wighawag.game.engine.core.Process.__interfaces__ = [com.wighawag.game.engine.core.Updatable];
com.wighawag.game.engine.core.Process.prototype = {
	updateInterval: null
	,done: null
	,getResult: null
	,__class__: com.wighawag.game.engine.core.Process
}
de.polygonal.ui.Key = $hxClasses["de.polygonal.ui.Key"] = function() { }
de.polygonal.ui.Key.__name__ = ["de","polygonal","ui","Key"];
de.polygonal.ui.Key.prototype = {
	__class__: de.polygonal.ui.Key
}
jeash.text.TextFormat = $hxClasses["jeash.text.TextFormat"] = function(in_font,in_size,in_color,in_bold,in_italic,in_underline,in_url,in_target,in_align,in_leftMargin,in_rightMargin,in_indent,in_leading) {
	$s.push("jeash.text.TextFormat::new");
	var $spos = $s.length;
	this.font = in_font;
	this.size = in_size;
	this.color = in_color;
	this.bold = in_bold;
	this.italic = in_italic;
	this.underline = in_underline;
	this.url = in_url;
	this.target = in_target;
	this.align = in_align;
	this.leftMargin = in_leftMargin;
	this.rightMargin = in_rightMargin;
	this.indent = in_indent;
	this.leading = in_leading;
	$s.pop();
}
jeash.text.TextFormat.__name__ = ["jeash","text","TextFormat"];
jeash.text.TextFormat.prototype = {
	align: null
	,blockIndent: null
	,bold: null
	,bullet: null
	,color: null
	,display: null
	,font: null
	,indent: null
	,italic: null
	,kerning: null
	,leading: null
	,leftMargin: null
	,letterSpacing: null
	,rightMargin: null
	,size: null
	,tabStops: null
	,target: null
	,underline: null
	,url: null
	,__class__: jeash.text.TextFormat
}
jeash.events.IOErrorEvent = $hxClasses["jeash.events.IOErrorEvent"] = function(type,bubbles,cancelable,inText) {
	$s.push("jeash.events.IOErrorEvent::new");
	var $spos = $s.length;
	if(inText == null) inText = "";
	jeash.events.Event.call(this,type,bubbles,cancelable);
	this.text = inText;
	$s.pop();
}
jeash.events.IOErrorEvent.__name__ = ["jeash","events","IOErrorEvent"];
jeash.events.IOErrorEvent.__super__ = jeash.events.Event;
jeash.events.IOErrorEvent.prototype = $extend(jeash.events.Event.prototype,{
	text: null
	,__class__: jeash.events.IOErrorEvent
});
jeash.display.CapsStyle = $hxClasses["jeash.display.CapsStyle"] = { __ename__ : ["jeash","display","CapsStyle"], __constructs__ : ["NONE","ROUND","SQUARE"] }
jeash.display.CapsStyle.NONE = ["NONE",0];
jeash.display.CapsStyle.NONE.toString = $estr;
jeash.display.CapsStyle.NONE.__enum__ = jeash.display.CapsStyle;
jeash.display.CapsStyle.ROUND = ["ROUND",1];
jeash.display.CapsStyle.ROUND.toString = $estr;
jeash.display.CapsStyle.ROUND.__enum__ = jeash.display.CapsStyle;
jeash.display.CapsStyle.SQUARE = ["SQUARE",2];
jeash.display.CapsStyle.SQUARE.toString = $estr;
jeash.display.CapsStyle.SQUARE.__enum__ = jeash.display.CapsStyle;
jeash.display.JointStyle = $hxClasses["jeash.display.JointStyle"] = { __ename__ : ["jeash","display","JointStyle"], __constructs__ : ["MITER","ROUND","BEVEL"] }
jeash.display.JointStyle.MITER = ["MITER",0];
jeash.display.JointStyle.MITER.toString = $estr;
jeash.display.JointStyle.MITER.__enum__ = jeash.display.JointStyle;
jeash.display.JointStyle.ROUND = ["ROUND",1];
jeash.display.JointStyle.ROUND.toString = $estr;
jeash.display.JointStyle.ROUND.__enum__ = jeash.display.JointStyle;
jeash.display.JointStyle.BEVEL = ["BEVEL",2];
jeash.display.JointStyle.BEVEL.toString = $estr;
jeash.display.JointStyle.BEVEL.__enum__ = jeash.display.JointStyle;
jeash.display.DisplayObject = $hxClasses["jeash.display.DisplayObject"] = function() {
	$s.push("jeash.display.DisplayObject::new");
	var $spos = $s.length;
	this.parent = null;
	jeash.events.EventDispatcher.call(this,null);
	this.jeashSetX(this.jeashSetY(0));
	this.jeashScaleX = this.jeashScaleY = 1.0;
	this.alpha = 1.0;
	this.jeashSetRotation(0.0);
	this.__swf_depth = 0;
	this.mMatrix = new jeash.geom.Matrix();
	this.mFullMatrix = new jeash.geom.Matrix();
	this.mMask = null;
	this.mMaskingObj = null;
	this.mBoundsRect = new jeash.geom.Rectangle();
	this.mGraphicsBounds = null;
	this.mMaskHandle = null;
	this.name = "DisplayObject " + jeash.display.DisplayObject.mNameID++;
	this.jeashSetVisible(true);
	$s.pop();
}
jeash.display.DisplayObject.__name__ = ["jeash","display","DisplayObject"];
jeash.display.DisplayObject.__interfaces__ = [jeash.display.IBitmapDrawable];
jeash.display.DisplayObject.__super__ = jeash.events.EventDispatcher;
jeash.display.DisplayObject.prototype = $extend(jeash.events.EventDispatcher.prototype,{
	x: null
	,y: null
	,scaleX: null
	,scaleY: null
	,rotation: null
	,accessibilityProperties: null
	,alpha: null
	,name: null
	,cacheAsBitmap: null
	,width: null
	,height: null
	,visible: null
	,opaqueBackground: null
	,mouseX: null
	,mouseY: null
	,parent: null
	,stage: null
	,scrollRect: null
	,mask: null
	,filters: null
	,blendMode: null
	,loaderInfo: null
	,__swf_depth: null
	,transform: null
	,mBoundsDirty: null
	,mMtxChainDirty: null
	,mMtxDirty: null
	,mBoundsRect: null
	,mGraphicsBounds: null
	,mScale9Grid: null
	,mMatrix: null
	,mFullMatrix: null
	,jeashX: null
	,jeashY: null
	,jeashScaleX: null
	,jeashScaleY: null
	,jeashRotation: null
	,jeashVisible: null
	,mScrollRect: null
	,mOpaqueBackground: null
	,mMask: null
	,mMaskingObj: null
	,mMaskHandle: null
	,jeashFilters: null
	,toString: function() {
		$s.push("jeash.display.DisplayObject::toString");
		var $spos = $s.length;
		var $tmp = this.name;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashDoAdded: function(inObj) {
		$s.push("jeash.display.DisplayObject::jeashDoAdded");
		var $spos = $s.length;
		if(inObj == this) {
			var evt = new jeash.events.Event(jeash.events.Event.ADDED,true,false);
			evt.target = inObj;
			this.dispatchEvent(evt);
		}
		var evt = new jeash.events.Event(jeash.events.Event.ADDED_TO_STAGE,false,false);
		evt.target = inObj;
		this.dispatchEvent(evt);
		$s.pop();
	}
	,jeashDoRemoved: function(inObj) {
		$s.push("jeash.display.DisplayObject::jeashDoRemoved");
		var $spos = $s.length;
		if(inObj == this) {
			var evt = new jeash.events.Event(jeash.events.Event.REMOVED,true,false);
			evt.target = inObj;
			this.dispatchEvent(evt);
		}
		var evt = new jeash.events.Event(jeash.events.Event.REMOVED_FROM_STAGE,false,false);
		evt.target = inObj;
		this.dispatchEvent(evt);
		var gfx = this.jeashGetGraphics();
		if(gfx != null) jeash.Lib.jeashRemoveSurface(gfx.jeashSurface);
		$s.pop();
	}
	,DoMouseEnter: function() {
		$s.push("jeash.display.DisplayObject::DoMouseEnter");
		var $spos = $s.length;
		$s.pop();
	}
	,DoMouseLeave: function() {
		$s.push("jeash.display.DisplayObject::DoMouseLeave");
		var $spos = $s.length;
		$s.pop();
	}
	,jeashSetParent: function(parent) {
		$s.push("jeash.display.DisplayObject::jeashSetParent");
		var $spos = $s.length;
		if(parent == this.parent) {
			$s.pop();
			return;
		}
		this.mMtxChainDirty = true;
		if(this.parent != null) {
			this.parent.__removeChild(this);
			this.parent.jeashInvalidateBounds();
		}
		if(parent != null) parent.jeashInvalidateBounds();
		if(this.parent == null && parent != null) {
			this.parent = parent;
			this.jeashDoAdded(this);
		} else if(this.parent != null && parent == null) {
			this.parent = parent;
			this.jeashDoRemoved(this);
		} else this.parent = parent;
		$s.pop();
	}
	,GetStage: function() {
		$s.push("jeash.display.DisplayObject::GetStage");
		var $spos = $s.length;
		var $tmp = jeash.Lib.jeashGetStage();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,AsContainer: function() {
		$s.push("jeash.display.DisplayObject::AsContainer");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,GetScrollRect: function() {
		$s.push("jeash.display.DisplayObject::GetScrollRect");
		var $spos = $s.length;
		if(this.mScrollRect == null) {
			$s.pop();
			return null;
		}
		var $tmp = this.mScrollRect.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashAsInteractiveObject: function() {
		$s.push("jeash.display.DisplayObject::jeashAsInteractiveObject");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,SetScrollRect: function(inRect) {
		$s.push("jeash.display.DisplayObject::SetScrollRect");
		var $spos = $s.length;
		this.mScrollRect = inRect;
		var $tmp = this.GetScrollRect();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,hitTestObject: function(obj) {
		$s.push("jeash.display.DisplayObject::hitTestObject");
		var $spos = $s.length;
		$s.pop();
		return false;
		$s.pop();
	}
	,hitTestPoint: function(x,y,shapeFlag) {
		$s.push("jeash.display.DisplayObject::hitTestPoint");
		var $spos = $s.length;
		var bounding_box = shapeFlag == null?true:!shapeFlag;
		$s.pop();
		return true;
		$s.pop();
	}
	,localToGlobal: function(point) {
		$s.push("jeash.display.DisplayObject::localToGlobal");
		var $spos = $s.length;
		if(this.parent == null) {
			var $tmp = new jeash.geom.Point(this.jeashGetX() + point.x,this.jeashGetY() + point.y);
			$s.pop();
			return $tmp;
		} else {
			point.x = point.x + this.jeashGetX();
			point.y = point.y + this.jeashGetY();
			var $tmp = this.parent.localToGlobal(point);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,jeashGetMouseX: function() {
		$s.push("jeash.display.DisplayObject::jeashGetMouseX");
		var $spos = $s.length;
		var $tmp = this.globalToLocal(new jeash.geom.Point(this.GetStage().jeashGetMouseX(),0)).x;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMouseX: function(x) {
		$s.push("jeash.display.DisplayObject::jeashSetMouseX");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,jeashGetMouseY: function() {
		$s.push("jeash.display.DisplayObject::jeashGetMouseY");
		var $spos = $s.length;
		var $tmp = this.globalToLocal(new jeash.geom.Point(0,this.GetStage().jeashGetMouseY())).y;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMouseY: function(y) {
		$s.push("jeash.display.DisplayObject::jeashSetMouseY");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,GetTransform: function() {
		$s.push("jeash.display.DisplayObject::GetTransform");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Transform(this);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetTransform: function(trans) {
		$s.push("jeash.display.DisplayObject::SetTransform");
		var $spos = $s.length;
		this.mMatrix = trans.jeashGetMatrix().clone();
		$s.pop();
		return trans;
		$s.pop();
	}
	,getFullMatrix: function(childMatrix) {
		$s.push("jeash.display.DisplayObject::getFullMatrix");
		var $spos = $s.length;
		if(childMatrix == null) {
			var $tmp = this.mFullMatrix.clone();
			$s.pop();
			return $tmp;
		} else {
			var $tmp = childMatrix.mult(this.mFullMatrix);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,getBounds: function(targetCoordinateSpace) {
		$s.push("jeash.display.DisplayObject::getBounds");
		var $spos = $s.length;
		if(this.mMtxDirty || this.mMtxChainDirty) this.jeashValidateMatrix();
		if(this.mBoundsDirty) this.BuildBounds();
		var mtx = this.mFullMatrix.clone();
		mtx.concat(targetCoordinateSpace.mFullMatrix.clone().invert());
		var rect = this.mBoundsRect.transform(mtx);
		$s.pop();
		return rect;
		$s.pop();
	}
	,getRect: function(targetCoordinateSpace) {
		$s.push("jeash.display.DisplayObject::getRect");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,globalToLocal: function(inPos) {
		$s.push("jeash.display.DisplayObject::globalToLocal");
		var $spos = $s.length;
		var $tmp = this.mFullMatrix.clone().invert().transformPoint(inPos);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetNumChildren: function() {
		$s.push("jeash.display.DisplayObject::jeashGetNumChildren");
		var $spos = $s.length;
		$s.pop();
		return 0;
		$s.pop();
	}
	,jeashGetMatrix: function() {
		$s.push("jeash.display.DisplayObject::jeashGetMatrix");
		var $spos = $s.length;
		var $tmp = this.mMatrix.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMatrix: function(inMatrix) {
		$s.push("jeash.display.DisplayObject::jeashSetMatrix");
		var $spos = $s.length;
		this.mMatrix = inMatrix.clone();
		$s.pop();
		return inMatrix;
		$s.pop();
	}
	,jeashGetGraphics: function() {
		$s.push("jeash.display.DisplayObject::jeashGetGraphics");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,GetOpaqueBackground: function() {
		$s.push("jeash.display.DisplayObject::GetOpaqueBackground");
		var $spos = $s.length;
		var $tmp = this.mOpaqueBackground;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetOpaqueBackground: function(inBG) {
		$s.push("jeash.display.DisplayObject::SetOpaqueBackground");
		var $spos = $s.length;
		this.mOpaqueBackground = inBG;
		var $tmp = this.mOpaqueBackground;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetBackgroundRect: function() {
		$s.push("jeash.display.DisplayObject::GetBackgroundRect");
		var $spos = $s.length;
		if(this.mGraphicsBounds == null) {
			var gfx = this.jeashGetGraphics();
			if(gfx != null) this.mGraphicsBounds = gfx.jeashExtent.clone();
		}
		var $tmp = this.mGraphicsBounds;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashInvalidateBounds: function() {
		$s.push("jeash.display.DisplayObject::jeashInvalidateBounds");
		var $spos = $s.length;
		this.mBoundsDirty = true;
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		$s.pop();
	}
	,jeashInvalidateMatrix: function(local) {
		$s.push("jeash.display.DisplayObject::jeashInvalidateMatrix");
		var $spos = $s.length;
		if(local == null) local = false;
		this.mMtxChainDirty = this.mMtxChainDirty || !local;
		this.mMtxDirty = this.mMtxDirty || local;
		$s.pop();
	}
	,jeashValidateMatrix: function() {
		$s.push("jeash.display.DisplayObject::jeashValidateMatrix");
		var $spos = $s.length;
		if(this.mMtxDirty || this.mMtxChainDirty && this.parent != null) {
			if(this.mMtxChainDirty && this.parent != null) this.parent.jeashValidateMatrix();
			if(this.mMtxDirty) {
				this.mMatrix.b = this.mMatrix.c = this.mMatrix.tx = this.mMatrix.ty = 0;
				this.mMatrix.a = this.jeashScaleX;
				this.mMatrix.d = this.jeashScaleY;
				var rad = this.jeashRotation * Math.PI / 180.0;
				if(rad != 0.0) this.mMatrix.rotate(rad);
				this.mMatrix.tx = this.jeashX;
				this.mMatrix.ty = this.jeashY;
			}
			if(this.parent != null) this.mFullMatrix = this.parent.getFullMatrix(this.mMatrix); else this.mFullMatrix = this.mMatrix;
			this.mMtxDirty = this.mMtxChainDirty = false;
		}
		$s.pop();
	}
	,jeashRender: function(parentMatrix,inMask) {
		$s.push("jeash.display.DisplayObject::jeashRender");
		var $spos = $s.length;
		var gfx = this.jeashGetGraphics();
		if(gfx != null) {
			if(gfx.jeashIsTile || !this.jeashVisible) {
				$s.pop();
				return;
			}
			if(this.mMtxDirty || this.mMtxChainDirty) this.jeashValidateMatrix();
			var m = this.mFullMatrix.clone();
			if(this.jeashFilters != null && (gfx.jeashChanged || inMask != null)) {
				gfx.jeashRender(inMask,m);
				var _g = 0, _g1 = this.jeashFilters;
				while(_g < _g1.length) {
					var filter = _g1[_g];
					++_g;
					filter.jeashApplyFilter(gfx.jeashSurface);
				}
			} else gfx.jeashRender(inMask,m);
			m.tx = m.tx + gfx.jeashExtent.x * m.a + gfx.jeashExtent.y * m.c;
			m.ty = m.ty + gfx.jeashExtent.x * m.b + gfx.jeashExtent.y * m.d;
			if(inMask != null) jeash.Lib.jeashDrawToSurface(gfx.jeashSurface,inMask,m,(this.parent != null?this.parent.alpha:1) * this.alpha); else {
				jeash.Lib.jeashSetSurfaceTransform(gfx.jeashSurface,m);
				jeash.Lib.jeashSetSurfaceOpacity(gfx.jeashSurface,(this.parent != null?this.parent.alpha:1) * this.alpha);
			}
		} else if(this.mMtxDirty || this.mMtxChainDirty) this.jeashValidateMatrix();
		$s.pop();
	}
	,drawToSurface: function(inSurface,matrix,colorTransform,blendMode,clipRect,smoothing) {
		$s.push("jeash.display.DisplayObject::drawToSurface");
		var $spos = $s.length;
		if(matrix == null) matrix = new jeash.geom.Matrix();
		this.jeashRender(matrix,inSurface);
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.display.DisplayObject::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		if(!this.jeashGetVisible()) {
			$s.pop();
			return null;
		}
		var gfx = this.jeashGetGraphics();
		if(gfx != null) {
			var local = this.globalToLocal(point);
			switch( (this.GetStage().jeashPointInPathMode)[1] ) {
			case 0:
				if(local.x < 0 || local.y < 0 || local.x * this.jeashGetScaleX() > this.jeashGetWidth() || local.y * this.jeashGetScaleY() > this.jeashGetHeight()) {
					$s.pop();
					return null;
				}
				if(gfx.jeashHitTest(local.x,local.y)) {
					var $tmp = this;
					$s.pop();
					return $tmp;
				}
				break;
			case 1:
				if(local.x < 0 || local.y < 0 || local.x * this.jeashGetScaleX() > this.jeashGetWidth() || local.y * this.jeashGetScaleY() > this.jeashGetHeight()) {
					$s.pop();
					return null;
				}
				if(gfx.jeashHitTest(local.x * this.jeashGetScaleX(),local.y * this.jeashGetScaleY())) {
					var $tmp = this;
					$s.pop();
					return $tmp;
				}
				break;
			}
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,GetMask: function() {
		$s.push("jeash.display.DisplayObject::GetMask");
		var $spos = $s.length;
		var $tmp = this.mMask;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetMask: function(inMask) {
		$s.push("jeash.display.DisplayObject::SetMask");
		var $spos = $s.length;
		if(this.mMask != null) this.mMask.mMaskingObj = null;
		this.mMask = inMask;
		if(this.mMask != null) this.mMask.mMaskingObj = this;
		var $tmp = this.mMask;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetFilters: function(filters) {
		$s.push("jeash.display.DisplayObject::jeashSetFilters");
		var $spos = $s.length;
		if(filters == null) this.jeashFilters = null; else {
			this.jeashFilters = new Array();
			var _g = 0;
			while(_g < filters.length) {
				var filter = filters[_g];
				++_g;
				this.jeashFilters.push(filter.clone());
			}
		}
		$s.pop();
		return filters;
		$s.pop();
	}
	,jeashGetFilters: function() {
		$s.push("jeash.display.DisplayObject::jeashGetFilters");
		var $spos = $s.length;
		if(this.jeashFilters == null) {
			var $tmp = [];
			$s.pop();
			return $tmp;
		}
		var result = new Array();
		var _g = 0, _g1 = this.jeashFilters;
		while(_g < _g1.length) {
			var filter = _g1[_g];
			++_g;
			result.push(filter.clone());
		}
		$s.pop();
		return result;
		$s.pop();
	}
	,BuildBounds: function() {
		$s.push("jeash.display.DisplayObject::BuildBounds");
		var $spos = $s.length;
		var gfx = this.jeashGetGraphics();
		if(gfx == null) this.mBoundsRect = new jeash.geom.Rectangle(this.jeashGetX(),this.jeashGetY(),0,0); else {
			this.mBoundsRect = gfx.jeashExtent.clone();
			gfx.mBoundsDirty = false;
			if(this.mScale9Grid != null) {
				this.mBoundsRect.width *= this.jeashGetScaleX();
				this.mBoundsRect.height *= this.jeashGetScaleY();
			}
		}
		this.mBoundsDirty = false;
		$s.pop();
	}
	,GetScreenBounds: function() {
		$s.push("jeash.display.DisplayObject::GetScreenBounds");
		var $spos = $s.length;
		if(this.mBoundsDirty) this.BuildBounds();
		var $tmp = this.mBoundsRect.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__BlendIndex: function() {
		$s.push("jeash.display.DisplayObject::__BlendIndex");
		var $spos = $s.length;
		var $tmp = this.blendMode == null?jeash.display.Graphics.BLEND_NORMAL:this.blendMode[1];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetInteractiveObjectStack: function(outStack) {
		$s.push("jeash.display.DisplayObject::jeashGetInteractiveObjectStack");
		var $spos = $s.length;
		var io = this.jeashAsInteractiveObject();
		if(io != null) outStack.push(io);
		if(this.parent != null) this.parent.jeashGetInteractiveObjectStack(outStack);
		$s.pop();
	}
	,jeashFireEvent: function(event) {
		$s.push("jeash.display.DisplayObject::jeashFireEvent");
		var $spos = $s.length;
		var stack = [];
		if(this.parent != null) this.parent.jeashGetInteractiveObjectStack(stack);
		var l = stack.length;
		if(l > 0) {
			event.jeashSetPhase(jeash.events.EventPhase.CAPTURING_PHASE);
			stack.reverse();
			var _g = 0;
			while(_g < stack.length) {
				var obj = stack[_g];
				++_g;
				event.currentTarget = obj;
				obj.dispatchEvent(event);
				if(event.jeashGetIsCancelled()) {
					$s.pop();
					return;
				}
			}
		}
		event.jeashSetPhase(jeash.events.EventPhase.AT_TARGET);
		event.currentTarget = this;
		this.dispatchEvent(event);
		if(event.jeashGetIsCancelled()) {
			$s.pop();
			return;
		}
		if(event.bubbles) {
			event.jeashSetPhase(jeash.events.EventPhase.BUBBLING_PHASE);
			stack.reverse();
			var _g = 0;
			while(_g < stack.length) {
				var obj = stack[_g];
				++_g;
				event.currentTarget = obj;
				obj.dispatchEvent(event);
				if(event.jeashGetIsCancelled()) {
					$s.pop();
					return;
				}
			}
		}
		$s.pop();
	}
	,jeashBroadcast: function(event) {
		$s.push("jeash.display.DisplayObject::jeashBroadcast");
		var $spos = $s.length;
		this.dispatchEvent(event);
		$s.pop();
	}
	,jeashAddToStage: function() {
		$s.push("jeash.display.DisplayObject::jeashAddToStage");
		var $spos = $s.length;
		var gfx = this.jeashGetGraphics();
		if(gfx != null) jeash.Lib.jeashAppendSurface(gfx.jeashSurface);
		$s.pop();
	}
	,jeashInsertBefore: function(obj) {
		$s.push("jeash.display.DisplayObject::jeashInsertBefore");
		var $spos = $s.length;
		var gfx1 = this.jeashGetGraphics();
		var gfx2 = obj.jeashIsOnStage()?obj.jeashGetGraphics():null;
		if(gfx1 != null) {
			if(gfx2 != null) jeash.Lib.jeashAppendSurface(gfx1.jeashSurface,gfx2.jeashSurface); else jeash.Lib.jeashAppendSurface(gfx1.jeashSurface);
		}
		$s.pop();
	}
	,jeashIsOnStage: function() {
		$s.push("jeash.display.DisplayObject::jeashIsOnStage");
		var $spos = $s.length;
		var gfx = this.jeashGetGraphics();
		if(gfx != null) {
			var $tmp = jeash.Lib.jeashIsOnStage(gfx.jeashSurface);
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,jeashGetVisible: function() {
		$s.push("jeash.display.DisplayObject::jeashGetVisible");
		var $spos = $s.length;
		var $tmp = this.jeashVisible;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetVisible: function(visible) {
		$s.push("jeash.display.DisplayObject::jeashSetVisible");
		var $spos = $s.length;
		var gfx = this.jeashGetGraphics();
		if(gfx != null) {
			if(gfx.jeashSurface != null) jeash.Lib.jeashSetSurfaceVisible(gfx.jeashSurface,visible);
		}
		this.jeashVisible = visible;
		$s.pop();
		return visible;
		$s.pop();
	}
	,jeashGetHeight: function() {
		$s.push("jeash.display.DisplayObject::jeashGetHeight");
		var $spos = $s.length;
		this.BuildBounds();
		var $tmp = this.jeashScaleY * this.mBoundsRect.height;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetHeight: function(inHeight) {
		$s.push("jeash.display.DisplayObject::jeashSetHeight");
		var $spos = $s.length;
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		if(this.mBoundsDirty) this.BuildBounds();
		var h = this.mBoundsRect.height;
		if(this.jeashScaleY * h != inHeight) {
			if(h <= 0) {
				$s.pop();
				return 0;
			}
			this.jeashScaleY = inHeight / h;
			this.jeashInvalidateMatrix(true);
		}
		$s.pop();
		return inHeight;
		$s.pop();
	}
	,jeashGetWidth: function() {
		$s.push("jeash.display.DisplayObject::jeashGetWidth");
		var $spos = $s.length;
		if(this.mBoundsDirty) this.BuildBounds();
		var $tmp = this.jeashScaleX * this.mBoundsRect.width;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetWidth: function(inWidth) {
		$s.push("jeash.display.DisplayObject::jeashSetWidth");
		var $spos = $s.length;
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		if(this.mBoundsDirty) this.BuildBounds();
		var w = this.mBoundsRect.width;
		if(this.jeashScaleX * w != inWidth) {
			if(w <= 0) {
				$s.pop();
				return 0;
			}
			this.jeashScaleX = inWidth / w;
			this.jeashInvalidateMatrix(true);
		}
		$s.pop();
		return inWidth;
		$s.pop();
	}
	,jeashGetX: function() {
		$s.push("jeash.display.DisplayObject::jeashGetX");
		var $spos = $s.length;
		var $tmp = this.jeashX;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetY: function() {
		$s.push("jeash.display.DisplayObject::jeashGetY");
		var $spos = $s.length;
		var $tmp = this.jeashY;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetX: function(n) {
		$s.push("jeash.display.DisplayObject::jeashSetX");
		var $spos = $s.length;
		this.jeashInvalidateMatrix(true);
		this.jeashX = n;
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		$s.pop();
		return n;
		$s.pop();
	}
	,jeashSetY: function(n) {
		$s.push("jeash.display.DisplayObject::jeashSetY");
		var $spos = $s.length;
		this.jeashInvalidateMatrix(true);
		this.jeashY = n;
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		$s.pop();
		return n;
		$s.pop();
	}
	,jeashGetScaleX: function() {
		$s.push("jeash.display.DisplayObject::jeashGetScaleX");
		var $spos = $s.length;
		var $tmp = this.jeashScaleX;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetScaleY: function() {
		$s.push("jeash.display.DisplayObject::jeashGetScaleY");
		var $spos = $s.length;
		var $tmp = this.jeashScaleY;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetScaleX: function(inS) {
		$s.push("jeash.display.DisplayObject::jeashSetScaleX");
		var $spos = $s.length;
		if(this.jeashScaleX == inS) {
			$s.pop();
			return inS;
		}
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		if(this.mBoundsDirty) this.BuildBounds();
		if(!this.mMtxDirty) this.jeashInvalidateMatrix(true);
		this.jeashScaleX = inS;
		$s.pop();
		return inS;
		$s.pop();
	}
	,jeashSetScaleY: function(inS) {
		$s.push("jeash.display.DisplayObject::jeashSetScaleY");
		var $spos = $s.length;
		if(this.jeashScaleY == inS) {
			$s.pop();
			return inS;
		}
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		if(this.mBoundsDirty) this.BuildBounds();
		if(!this.mMtxDirty) this.jeashInvalidateMatrix(true);
		this.jeashScaleY = inS;
		$s.pop();
		return inS;
		$s.pop();
	}
	,jeashSetRotation: function(n) {
		$s.push("jeash.display.DisplayObject::jeashSetRotation");
		var $spos = $s.length;
		if(!this.mMtxDirty) this.jeashInvalidateMatrix(true);
		if(this.parent != null) this.parent.jeashInvalidateBounds();
		this.jeashRotation = n;
		$s.pop();
		return n;
		$s.pop();
	}
	,jeashGetRotation: function() {
		$s.push("jeash.display.DisplayObject::jeashGetRotation");
		var $spos = $s.length;
		var $tmp = this.jeashRotation;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.display.DisplayObject
	,__properties__: {set_transform:"SetTransform",get_transform:"GetTransform",set_filters:"jeashSetFilters",get_filters:"jeashGetFilters",set_mask:"SetMask",get_mask:"GetMask",set_scrollRect:"SetScrollRect",get_scrollRect:"GetScrollRect",get_stage:"GetStage",set_mouseY:"jeashSetMouseY",get_mouseY:"jeashGetMouseY",set_mouseX:"jeashSetMouseX",get_mouseX:"jeashGetMouseX",set_opaqueBackground:"SetOpaqueBackground",get_opaqueBackground:"GetOpaqueBackground",set_visible:"jeashSetVisible",get_visible:"jeashGetVisible",set_height:"jeashSetHeight",get_height:"jeashGetHeight",set_width:"jeashSetWidth",get_width:"jeashGetWidth",set_rotation:"jeashSetRotation",get_rotation:"jeashGetRotation",set_scaleY:"jeashSetScaleY",get_scaleY:"jeashGetScaleY",set_scaleX:"jeashSetScaleX",get_scaleX:"jeashGetScaleX",set_y:"jeashSetY",get_y:"jeashGetY",set_x:"jeashSetX",get_x:"jeashGetX"}
});
jeash.display.InteractiveObject = $hxClasses["jeash.display.InteractiveObject"] = function() {
	$s.push("jeash.display.InteractiveObject::new");
	var $spos = $s.length;
	jeash.display.DisplayObject.call(this);
	this.tabEnabled = false;
	this.mouseEnabled = true;
	this.doubleClickEnabled = true;
	this.jeashSetTabIndex(0);
	this.name = "InteractiveObject";
	$s.pop();
}
jeash.display.InteractiveObject.__name__ = ["jeash","display","InteractiveObject"];
jeash.display.InteractiveObject.__super__ = jeash.display.DisplayObject;
jeash.display.InteractiveObject.prototype = $extend(jeash.display.DisplayObject.prototype,{
	doubleClickEnabled: null
	,focusRect: null
	,mouseEnabled: null
	,tabEnabled: null
	,tabIndex: null
	,jeashDoubleClickEnabled: null
	,jeashTabIndex: null
	,toString: function() {
		$s.push("jeash.display.InteractiveObject::toString");
		var $spos = $s.length;
		var $tmp = this.name;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashAsInteractiveObject: function() {
		$s.push("jeash.display.InteractiveObject::jeashAsInteractiveObject");
		var $spos = $s.length;
		$s.pop();
		return this;
		$s.pop();
	}
	,jeashGetTabIndex: function() {
		$s.push("jeash.display.InteractiveObject::jeashGetTabIndex");
		var $spos = $s.length;
		var $tmp = this.jeashTabIndex;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetTabIndex: function(inIndex) {
		$s.push("jeash.display.InteractiveObject::jeashSetTabIndex");
		var $spos = $s.length;
		this.jeashTabIndex = inIndex;
		$s.pop();
		return inIndex;
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.display.InteractiveObject::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		if(!this.mouseEnabled) {
			$s.pop();
			return null;
		} else {
			var $tmp = jeash.display.DisplayObject.prototype.jeashGetObjectUnderPoint.call(this,point);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,__class__: jeash.display.InteractiveObject
	,__properties__: $extend(jeash.display.DisplayObject.prototype.__properties__,{set_tabIndex:"jeashSetTabIndex",get_tabIndex:"jeashGetTabIndex"})
});
jeash.display.DisplayObjectContainer = $hxClasses["jeash.display.DisplayObjectContainer"] = function() {
	$s.push("jeash.display.DisplayObjectContainer::new");
	var $spos = $s.length;
	this.jeashChildren = new Array();
	this.mLastSetupObjs = new Array();
	this.mouseChildren = true;
	this.numChildren = 0;
	this.tabChildren = true;
	jeash.display.InteractiveObject.call(this);
	this.name = "DisplayObjectContainer " + jeash.display.DisplayObject.mNameID++;
	$s.pop();
}
jeash.display.DisplayObjectContainer.__name__ = ["jeash","display","DisplayObjectContainer"];
jeash.display.DisplayObjectContainer.__super__ = jeash.display.InteractiveObject;
jeash.display.DisplayObjectContainer.prototype = $extend(jeash.display.InteractiveObject.prototype,{
	jeashChildren: null
	,mLastSetupObjs: null
	,numChildren: null
	,mouseChildren: null
	,tabChildren: null
	,AsContainer: function() {
		$s.push("jeash.display.DisplayObjectContainer::AsContainer");
		var $spos = $s.length;
		$s.pop();
		return this;
		$s.pop();
	}
	,jeashBroadcast: function(event) {
		$s.push("jeash.display.DisplayObjectContainer::jeashBroadcast");
		var $spos = $s.length;
		var i = 0;
		if(this.jeashChildren.length > 0) while(true) {
			var child = this.jeashChildren[i];
			child.jeashBroadcast(event);
			if(i >= this.jeashChildren.length) break;
			if(this.jeashChildren[i] == child) {
				i++;
				if(i >= this.jeashChildren.length) break;
			}
		}
		this.dispatchEvent(event);
		$s.pop();
	}
	,BuildBounds: function() {
		$s.push("jeash.display.DisplayObjectContainer::BuildBounds");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.BuildBounds.call(this);
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(obj.jeashGetVisible()) {
				var r = obj.getBounds(this);
				if(r.width != 0 || r.height != 0) {
					if(this.mBoundsRect.width == 0 && this.mBoundsRect.height == 0) this.mBoundsRect = r.clone(); else this.mBoundsRect.extendBounds(r);
				}
			}
		}
		$s.pop();
	}
	,jeashInvalidateMatrix: function(local) {
		$s.push("jeash.display.DisplayObjectContainer::jeashInvalidateMatrix");
		var $spos = $s.length;
		if(local == null) local = false;
		if(this.mMtxChainDirty == false && this.mMtxDirty == false) {
			var _g = 0, _g1 = this.jeashChildren;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.jeashInvalidateMatrix();
			}
		}
		this.mMtxChainDirty = this.mMtxChainDirty || !local;
		this.mMtxDirty = this.mMtxDirty || local;
		$s.pop();
	}
	,jeashDoAdded: function(inObj) {
		$s.push("jeash.display.DisplayObjectContainer::jeashDoAdded");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashDoAdded.call(this,inObj);
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.jeashDoAdded(inObj);
		}
		$s.pop();
	}
	,jeashDoRemoved: function(inObj) {
		$s.push("jeash.display.DisplayObjectContainer::jeashDoRemoved");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashDoRemoved.call(this,inObj);
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.jeashDoRemoved(inObj);
		}
		$s.pop();
	}
	,GetBackgroundRect: function() {
		$s.push("jeash.display.DisplayObjectContainer::GetBackgroundRect");
		var $spos = $s.length;
		var r = jeash.display.InteractiveObject.prototype.GetBackgroundRect.call(this);
		if(r != null) r = r.clone();
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(obj.jeashGetVisible()) {
				var o = obj.GetBackgroundRect();
				if(o != null) {
					var trans = o.transform(obj.mMatrix);
					if(r == null || r.width == 0 || r.height == 0) r = trans; else if(trans.width != 0 && trans.height != 0) r.extendBounds(trans);
				}
			}
		}
		$s.pop();
		return r;
		$s.pop();
	}
	,jeashGetNumChildren: function() {
		$s.push("jeash.display.DisplayObjectContainer::jeashGetNumChildren");
		var $spos = $s.length;
		var $tmp = this.jeashChildren.length;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashRender: function(inParentMatrix,inMask) {
		$s.push("jeash.display.DisplayObjectContainer::jeashRender");
		var $spos = $s.length;
		if(!this.jeashGetVisible()) {
			$s.pop();
			return;
		}
		jeash.display.InteractiveObject.prototype.jeashRender.call(this,inParentMatrix,inMask);
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			if(obj.jeashGetVisible()) obj.jeashRender(this.mFullMatrix,inMask);
		}
		$s.pop();
	}
	,addChild: function(object) {
		$s.push("jeash.display.DisplayObjectContainer::addChild");
		var $spos = $s.length;
		if(object == this) throw "Adding to self";
		if(object.parent == this) {
			this.setChildIndex(object,this.jeashChildren.length - 1);
			$s.pop();
			return object;
		}
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i] == object) throw "Internal error: child already existed at index " + i;
		}
		if(this.jeashIsOnStage()) object.jeashAddToStage();
		this.jeashChildren.push(object);
		object.jeashSetParent(this);
		$s.pop();
		return object;
		$s.pop();
	}
	,jeashAddToStage: function() {
		$s.push("jeash.display.DisplayObjectContainer::jeashAddToStage");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashAddToStage.call(this);
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.jeashChildren[i].jeashAddToStage();
		}
		$s.pop();
	}
	,jeashInsertBefore: function(obj) {
		$s.push("jeash.display.DisplayObjectContainer::jeashInsertBefore");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashInsertBefore.call(this,obj);
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.jeashChildren[i].jeashAddToStage();
		}
		$s.pop();
	}
	,addChildAt: function(obj,index) {
		$s.push("jeash.display.DisplayObjectContainer::addChildAt");
		var $spos = $s.length;
		if(index > this.jeashChildren.length || index < 0) throw "Invalid index position " + index;
		if(obj.parent == this) {
			this.setChildIndex(obj,index);
			$s.pop();
			return;
		}
		if(index == this.jeashChildren.length) {
			this.jeashChildren.push(obj);
			if(this.jeashIsOnStage()) obj.jeashAddToStage();
		} else {
			if(this.jeashIsOnStage()) obj.jeashInsertBefore(this.jeashChildren[index]);
			this.jeashChildren.insert(index,obj);
		}
		obj.jeashSetParent(this);
		$s.pop();
	}
	,contains: function(child) {
		$s.push("jeash.display.DisplayObjectContainer::contains");
		var $spos = $s.length;
		if(child == null) {
			$s.pop();
			return false;
		}
		if(this == child) {
			$s.pop();
			return true;
		}
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c == child) {
				$s.pop();
				return true;
			}
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,getChildAt: function(index) {
		$s.push("jeash.display.DisplayObjectContainer::getChildAt");
		var $spos = $s.length;
		if(index >= 0 && index < this.jeashChildren.length) {
			var $tmp = this.jeashChildren[index];
			$s.pop();
			return $tmp;
		}
		throw "getChildAt : index out of bounds " + index + "/" + this.jeashChildren.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,getChildByName: function(inName) {
		$s.push("jeash.display.DisplayObjectContainer::getChildByName");
		var $spos = $s.length;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i].name == inName) {
				var $tmp = this.jeashChildren[i];
				$s.pop();
				return $tmp;
			}
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,getChildIndex: function(child) {
		$s.push("jeash.display.DisplayObjectContainer::getChildIndex");
		var $spos = $s.length;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i] == child) {
				$s.pop();
				return i;
			}
		}
		$s.pop();
		return -1;
		$s.pop();
	}
	,removeChild: function(child) {
		$s.push("jeash.display.DisplayObjectContainer::removeChild");
		var $spos = $s.length;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i] == child) {
				child.jeashSetParent(null);
				if(this.getChildIndex(child) >= 0) throw "Not removed properly";
				$s.pop();
				return;
			}
		}
		throw "removeChild : none found?";
		$s.pop();
	}
	,removeChildAt: function(inI) {
		$s.push("jeash.display.DisplayObjectContainer::removeChildAt");
		var $spos = $s.length;
		this.jeashChildren[inI].jeashSetParent(null);
		var $tmp = this.jeashChildren[inI];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__removeChild: function(child) {
		$s.push("jeash.display.DisplayObjectContainer::__removeChild");
		var $spos = $s.length;
		var i = this.getChildIndex(child);
		if(i >= 0) this.jeashChildren.splice(i,1);
		$s.pop();
	}
	,setChildIndex: function(child,index) {
		$s.push("jeash.display.DisplayObjectContainer::setChildIndex");
		var $spos = $s.length;
		if(index > this.jeashChildren.length) throw "Invalid index position " + index;
		var s = null;
		var orig = this.getChildIndex(child);
		if(orig < 0) {
			var msg = "setChildIndex : object " + child.name + " not found.";
			if(child.parent == this) {
				var realindex = -1;
				var _g1 = 0, _g = this.jeashChildren.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(this.jeashChildren[i] == child) {
						realindex = i;
						break;
					}
				}
				if(realindex != -1) msg += "Internal error: Real child index was " + Std.string(realindex); else msg += "Internal error: Child was not in jeashChildren array!";
			}
			throw msg;
		}
		if(index < orig) {
			var i = orig;
			while(i > index) {
				this.swapChildren(this.jeashChildren[i],this.jeashChildren[i - 1]);
				i--;
			}
		} else if(orig < index) {
			var i = orig;
			while(i < index) {
				this.swapChildren(this.jeashChildren[i],this.jeashChildren[i + 1]);
				i++;
			}
		}
		$s.pop();
	}
	,jeashSwapSurface: function(c1,c2) {
		$s.push("jeash.display.DisplayObjectContainer::jeashSwapSurface");
		var $spos = $s.length;
		if(this.jeashChildren[c1] == null) throw "Null element at index " + c1 + " length " + this.jeashChildren.length;
		if(this.jeashChildren[c2] == null) throw "Null element at index " + c2 + " length " + this.jeashChildren.length;
		var gfx1 = this.jeashChildren[c1].jeashGetGraphics();
		var gfx2 = this.jeashChildren[c2].jeashGetGraphics();
		if(gfx1 != null && gfx2 != null) jeash.Lib.jeashSwapSurface(gfx1.jeashSurface,gfx2.jeashSurface);
		$s.pop();
	}
	,swapChildren: function(child1,child2) {
		$s.push("jeash.display.DisplayObjectContainer::swapChildren");
		var $spos = $s.length;
		var c1 = -1;
		var c2 = -1;
		var swap;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i] == child1) c1 = i; else if(this.jeashChildren[i] == child2) c2 = i;
		}
		if(c1 != -1 && c2 != -1) {
			swap = this.jeashChildren[c1];
			this.jeashChildren[c1] = this.jeashChildren[c2];
			this.jeashChildren[c2] = swap;
			swap = null;
			this.jeashSwapSurface(c1,c2);
		}
		$s.pop();
	}
	,swapChildrenAt: function(child1,child2) {
		$s.push("jeash.display.DisplayObjectContainer::swapChildrenAt");
		var $spos = $s.length;
		var swap = this.jeashChildren[child1];
		this.jeashChildren[child1] = this.jeashChildren[child2];
		this.jeashChildren[child2] = swap;
		swap = null;
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.display.DisplayObjectContainer::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		if(!this.jeashGetVisible()) {
			$s.pop();
			return null;
		}
		var l = this.jeashChildren.length - 1;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = this.jeashChildren[l - i].jeashGetObjectUnderPoint(point);
			if(result != null) {
				$s.pop();
				return result;
			}
		}
		var $tmp = jeash.display.InteractiveObject.prototype.jeashGetObjectUnderPoint.call(this,point);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getObjectsUnderPoint: function(point) {
		$s.push("jeash.display.DisplayObjectContainer::getObjectsUnderPoint");
		var $spos = $s.length;
		var result = new Array();
		this.jeashGetObjectsUnderPoint(point,result);
		$s.pop();
		return result;
		$s.pop();
	}
	,jeashGetObjectsUnderPoint: function(point,stack) {
		$s.push("jeash.display.DisplayObjectContainer::jeashGetObjectsUnderPoint");
		var $spos = $s.length;
		var l = this.jeashChildren.length - 1;
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			var result = this.jeashChildren[l - i].jeashGetObjectUnderPoint(point);
			if(result != null) stack.push(result);
		}
		$s.pop();
	}
	,jeashSetFilters: function(filters) {
		$s.push("jeash.display.DisplayObjectContainer::jeashSetFilters");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashSetFilters.call(this,filters);
		var _g = 0, _g1 = this.jeashChildren;
		while(_g < _g1.length) {
			var obj = _g1[_g];
			++_g;
			obj.jeashSetFilters(filters);
		}
		$s.pop();
		return filters;
		$s.pop();
	}
	,jeashSetVisible: function(visible) {
		$s.push("jeash.display.DisplayObjectContainer::jeashSetVisible");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashSetVisible.call(this,visible);
		var _g1 = 0, _g = this.jeashChildren.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.jeashChildren[i].jeashIsOnStage()) this.jeashChildren[i].jeashSetVisible(visible);
		}
		$s.pop();
		return visible;
		$s.pop();
	}
	,__class__: jeash.display.DisplayObjectContainer
	,__properties__: $extend(jeash.display.InteractiveObject.prototype.__properties__,{get_numChildren:"jeashGetNumChildren"})
});
jeash.display.Sprite = $hxClasses["jeash.display.Sprite"] = function() {
	$s.push("jeash.display.Sprite::new");
	var $spos = $s.length;
	jeash.Lib.jeashGetCanvas();
	this.jeashGraphics = new jeash.display.Graphics();
	if(this.jeashGraphics != null) this.jeashGraphics.owner = this;
	jeash.display.DisplayObjectContainer.call(this);
	this.buttonMode = false;
	this.name = "Sprite " + jeash.display.DisplayObject.mNameID++;
	this.jeashGraphics.jeashSurface.id = this.name;
	$s.pop();
}
jeash.display.Sprite.__name__ = ["jeash","display","Sprite"];
jeash.display.Sprite.__super__ = jeash.display.DisplayObjectContainer;
jeash.display.Sprite.prototype = $extend(jeash.display.DisplayObjectContainer.prototype,{
	jeashGraphics: null
	,graphics: null
	,useHandCursor: null
	,buttonMode: null
	,dropTarget: null
	,jeashCursorCallbackOver: null
	,jeashCursorCallbackOut: null
	,jeashDropTarget: null
	,startDrag: function(lockCenter,bounds) {
		$s.push("jeash.display.Sprite::startDrag");
		var $spos = $s.length;
		if(this.GetStage() != null) this.GetStage().jeashStartDrag(this,lockCenter,bounds);
		$s.pop();
	}
	,stopDrag: function() {
		$s.push("jeash.display.Sprite::stopDrag");
		var $spos = $s.length;
		if(this.GetStage() != null) {
			this.GetStage().jeashStopDrag(this);
			var l = this.parent.jeashChildren.length - 1;
			var obj = this.GetStage();
			var _g1 = 0, _g = this.parent.jeashChildren.length;
			while(_g1 < _g) {
				var i = _g1++;
				var result = this.parent.jeashChildren[l - i].jeashGetObjectUnderPoint(new jeash.geom.Point(this.GetStage().jeashGetMouseX(),this.GetStage().jeashGetMouseY()));
				if(result != null) obj = result;
			}
			if(obj != this) this.jeashDropTarget = obj; else this.jeashDropTarget = this.GetStage();
		}
		$s.pop();
	}
	,jeashGetGraphics: function() {
		$s.push("jeash.display.Sprite::jeashGetGraphics");
		var $spos = $s.length;
		var $tmp = this.jeashGraphics;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetUseHandCursor: function(cursor) {
		$s.push("jeash.display.Sprite::jeashSetUseHandCursor");
		var $spos = $s.length;
		if(cursor == this.useHandCursor) {
			$s.pop();
			return cursor;
		}
		if(this.jeashCursorCallbackOver != null) this.removeEventListener(jeash.events.MouseEvent.ROLL_OVER,this.jeashCursorCallbackOver);
		if(this.jeashCursorCallbackOut != null) this.removeEventListener(jeash.events.MouseEvent.ROLL_OUT,this.jeashCursorCallbackOut);
		if(!cursor) jeash.Lib.jeashSetCursor(jeash._Lib.CursorType.Default); else {
			this.jeashCursorCallbackOver = function(_) {
				$s.push("jeash.display.Sprite::jeashSetUseHandCursor@96");
				var $spos = $s.length;
				jeash.Lib.jeashSetCursor(jeash._Lib.CursorType.Pointer);
				$s.pop();
			};
			this.jeashCursorCallbackOut = function(_) {
				$s.push("jeash.display.Sprite::jeashSetUseHandCursor@97");
				var $spos = $s.length;
				jeash.Lib.jeashSetCursor(jeash._Lib.CursorType.Default);
				$s.pop();
			};
			this.addEventListener(jeash.events.MouseEvent.ROLL_OVER,this.jeashCursorCallbackOver);
			this.addEventListener(jeash.events.MouseEvent.ROLL_OUT,this.jeashCursorCallbackOut);
		}
		this.useHandCursor = cursor;
		$s.pop();
		return cursor;
		$s.pop();
	}
	,jeashGetDropTarget: function() {
		$s.push("jeash.display.Sprite::jeashGetDropTarget");
		var $spos = $s.length;
		var $tmp = this.jeashDropTarget;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.display.Sprite
	,__properties__: $extend(jeash.display.DisplayObjectContainer.prototype.__properties__,{get_dropTarget:"jeashGetDropTarget",set_useHandCursor:"jeashSetUseHandCursor",get_graphics:"jeashGetGraphics"})
});
if(!com.wighawag.game.engine.renderer) com.wighawag.game.engine.renderer = {}
if(!com.wighawag.game.engine.renderer.twodimensions) com.wighawag.game.engine.renderer.twodimensions = {}
if(!com.wighawag.game.engine.renderer.twodimensions.displaylist) com.wighawag.game.engine.renderer.twodimensions.displaylist = {}
com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer = $hxClasses["com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer"] = function() {
	$s.push("com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer::new");
	var $spos = $s.length;
	jeash.display.Sprite.call(this);
	$s.pop();
}
com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer.__name__ = ["com","wighawag","game","engine","renderer","twodimensions","displaylist","EntitySpriteRenderer"];
com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer.__super__ = jeash.display.Sprite;
com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer.prototype = $extend(jeash.display.Sprite.prototype,{
	entity: null
	,__class__: com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer
});
de.polygonal.ds.Factory = $hxClasses["de.polygonal.ds.Factory"] = function() { }
de.polygonal.ds.Factory.__name__ = ["de","polygonal","ds","Factory"];
de.polygonal.ds.Factory.prototype = {
	create: null
	,__class__: de.polygonal.ds.Factory
}
haxe.Int32 = $hxClasses["haxe.Int32"] = function() { }
haxe.Int32.__name__ = ["haxe","Int32"];
haxe.Int32.make = function(a,b) {
	$s.push("haxe.Int32::make");
	var $spos = $s.length;
	var $tmp = a << 16 | b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.ofInt = function(x) {
	$s.push("haxe.Int32::ofInt");
	var $spos = $s.length;
	var $tmp = x | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.clamp = function(x) {
	$s.push("haxe.Int32::clamp");
	var $spos = $s.length;
	var $tmp = x | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.toInt = function(x) {
	$s.push("haxe.Int32::toInt");
	var $spos = $s.length;
	if((x >> 30 & 1) != x >>> 31) throw "Overflow " + x;
	var $tmp = x;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.toNativeInt = function(x) {
	$s.push("haxe.Int32::toNativeInt");
	var $spos = $s.length;
	var $tmp = x;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.add = function(a,b) {
	$s.push("haxe.Int32::add");
	var $spos = $s.length;
	var $tmp = a + b | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.sub = function(a,b) {
	$s.push("haxe.Int32::sub");
	var $spos = $s.length;
	var $tmp = a - b | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.mul = function(a,b) {
	$s.push("haxe.Int32::mul");
	var $spos = $s.length;
	var $tmp = a * b | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.div = function(a,b) {
	$s.push("haxe.Int32::div");
	var $spos = $s.length;
	var $tmp = Std["int"](a / b);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.mod = function(a,b) {
	$s.push("haxe.Int32::mod");
	var $spos = $s.length;
	var $tmp = a % b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.shl = function(a,b) {
	$s.push("haxe.Int32::shl");
	var $spos = $s.length;
	var $tmp = a << b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.shr = function(a,b) {
	$s.push("haxe.Int32::shr");
	var $spos = $s.length;
	var $tmp = a >> b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.ushr = function(a,b) {
	$s.push("haxe.Int32::ushr");
	var $spos = $s.length;
	var $tmp = a >>> b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.and = function(a,b) {
	$s.push("haxe.Int32::and");
	var $spos = $s.length;
	var $tmp = a & b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.or = function(a,b) {
	$s.push("haxe.Int32::or");
	var $spos = $s.length;
	var $tmp = a | b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.xor = function(a,b) {
	$s.push("haxe.Int32::xor");
	var $spos = $s.length;
	var $tmp = a ^ b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.neg = function(a) {
	$s.push("haxe.Int32::neg");
	var $spos = $s.length;
	var $tmp = -a;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.isNeg = function(a) {
	$s.push("haxe.Int32::isNeg");
	var $spos = $s.length;
	var $tmp = a < 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.isZero = function(a) {
	$s.push("haxe.Int32::isZero");
	var $spos = $s.length;
	var $tmp = a == 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.complement = function(a) {
	$s.push("haxe.Int32::complement");
	var $spos = $s.length;
	var $tmp = ~a;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.compare = function(a,b) {
	$s.push("haxe.Int32::compare");
	var $spos = $s.length;
	var $tmp = a - b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.ucompare = function(a,b) {
	$s.push("haxe.Int32::ucompare");
	var $spos = $s.length;
	if(a < 0) {
		var $tmp = b < 0?~b - ~a:1;
		$s.pop();
		return $tmp;
	}
	var $tmp = b < 0?-1:a - b;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Int32.prototype = {
	__class__: haxe.Int32
}
jeash.display.GraphicsPathWinding = $hxClasses["jeash.display.GraphicsPathWinding"] = { __ename__ : ["jeash","display","GraphicsPathWinding"], __constructs__ : ["EVEN_ODD","NON_ZERO"] }
jeash.display.GraphicsPathWinding.EVEN_ODD = ["EVEN_ODD",0];
jeash.display.GraphicsPathWinding.EVEN_ODD.toString = $estr;
jeash.display.GraphicsPathWinding.EVEN_ODD.__enum__ = jeash.display.GraphicsPathWinding;
jeash.display.GraphicsPathWinding.NON_ZERO = ["NON_ZERO",1];
jeash.display.GraphicsPathWinding.NON_ZERO.toString = $estr;
jeash.display.GraphicsPathWinding.NON_ZERO.__enum__ = jeash.display.GraphicsPathWinding;
de.polygonal.ds.ArrayUtil = $hxClasses["de.polygonal.ds.ArrayUtil"] = function() { }
de.polygonal.ds.ArrayUtil.__name__ = ["de","polygonal","ds","ArrayUtil"];
de.polygonal.ds.ArrayUtil.alloc = function(x) {
	$s.push("de.polygonal.ds.ArrayUtil::alloc");
	var $spos = $s.length;
	if(true != x >= 0) throw new de.polygonal.ASE("x >= 0",{ fileName : "ArrayUtil.hx", lineNumber : 47, className : "de.polygonal.ds.ArrayUtil", methodName : "alloc"}); else null;
	var a;
	a = new Array(x);
	$s.pop();
	return a;
	$s.pop();
}
de.polygonal.ds.ArrayUtil.shrink = function(a,x) {
	$s.push("de.polygonal.ds.ArrayUtil::shrink");
	var $spos = $s.length;
	if(a.length > x) a.length = x;
	$s.pop();
	return a;
	$s.pop();
}
de.polygonal.ds.ArrayUtil.copy = function(src,dst,min,max) {
	$s.push("de.polygonal.ds.ArrayUtil::copy");
	var $spos = $s.length;
	if(max == null) max = -1;
	if(min == null) min = 0;
	if(max == -1) max = src.length;
	if(true != (src != null)) throw new de.polygonal.ASE("src != null",{ fileName : "ArrayUtil.hx", lineNumber : 86, className : "de.polygonal.ds.ArrayUtil", methodName : "copy"}); else null;
	if(true != (dst != null)) throw new de.polygonal.ASE("dst != null",{ fileName : "ArrayUtil.hx", lineNumber : 87, className : "de.polygonal.ds.ArrayUtil", methodName : "copy"}); else null;
	if(true != min >= 0) throw new de.polygonal.ASE("min >= 0",{ fileName : "ArrayUtil.hx", lineNumber : 88, className : "de.polygonal.ds.ArrayUtil", methodName : "copy"}); else null;
	if(true != max <= src.length) throw new de.polygonal.ASE("max <= src.length",{ fileName : "ArrayUtil.hx", lineNumber : 89, className : "de.polygonal.ds.ArrayUtil", methodName : "copy"}); else null;
	if(true != min < max) throw new de.polygonal.ASE("min < max",{ fileName : "ArrayUtil.hx", lineNumber : 90, className : "de.polygonal.ds.ArrayUtil", methodName : "copy"}); else null;
	var j = 0;
	var _g = min;
	while(_g < max) {
		var i = _g++;
		dst[j++] = src[i];
	}
	$s.pop();
	return dst;
	$s.pop();
}
de.polygonal.ds.ArrayUtil.fill = function(dst,x,k) {
	$s.push("de.polygonal.ds.ArrayUtil::fill");
	var $spos = $s.length;
	if(k == null) k = -1;
	if(k == -1) k = dst.length;
	var _g = 0;
	while(_g < k) {
		var i = _g++;
		dst[i] = x;
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.assign = function(dst,C,args,k) {
	$s.push("de.polygonal.ds.ArrayUtil::assign");
	var $spos = $s.length;
	if(k == null) k = -1;
	if(k == -1) k = dst.length;
	var _g = 0;
	while(_g < k) {
		var i = _g++;
		dst[i] = de.polygonal.core.util.Instance.create(C,args);
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.memmove = function(a,destination,source,n) {
	$s.push("de.polygonal.ds.ArrayUtil::memmove");
	var $spos = $s.length;
	if(true != (destination >= 0 && source >= 0 && n >= 0)) throw new de.polygonal.ASE("destination >= 0 && source >= 0 && n >= 0",{ fileName : "ArrayUtil.hx", lineNumber : 129, className : "de.polygonal.ds.ArrayUtil", methodName : "memmove"}); else null;
	if(true != source < a.length) throw new de.polygonal.ASE("source < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 130, className : "de.polygonal.ds.ArrayUtil", methodName : "memmove"}); else null;
	if(true != destination + n <= a.length) throw new de.polygonal.ASE("destination + n <= a.length",{ fileName : "ArrayUtil.hx", lineNumber : 131, className : "de.polygonal.ds.ArrayUtil", methodName : "memmove"}); else null;
	if(true != n <= a.length) throw new de.polygonal.ASE("n <= a.length",{ fileName : "ArrayUtil.hx", lineNumber : 132, className : "de.polygonal.ds.ArrayUtil", methodName : "memmove"}); else null;
	if(source == destination) {
		$s.pop();
		return;
	} else if(source <= destination) {
		var i = source + n;
		var j = destination + n;
		var _g = 0;
		while(_g < n) {
			var k = _g++;
			i--;
			j--;
			a[j] = a[i];
		}
	} else {
		var i = source;
		var j = destination;
		var _g = 0;
		while(_g < n) {
			var k = _g++;
			a[j] = a[i];
			i++;
			j++;
		}
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.bsearchComparator = function(a,x,min,max,comparator) {
	$s.push("de.polygonal.ds.ArrayUtil::bsearchComparator");
	var $spos = $s.length;
	if(true != (a != null)) throw new de.polygonal.ASE("a != null",{ fileName : "ArrayUtil.hx", lineNumber : 172, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchComparator"}); else null;
	if(true != (comparator != null)) throw new de.polygonal.ASE("comparator != null",{ fileName : "ArrayUtil.hx", lineNumber : 173, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchComparator"}); else null;
	if(true != (min >= 0 && min < a.length)) throw new de.polygonal.ASE("min >= 0 && min < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 174, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchComparator"}); else null;
	if(true != max < a.length) throw new de.polygonal.ASE("max < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 175, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchComparator"}); else null;
	var l = min, m, h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(comparator(a[m],x) < 0) l = m + 1; else h = m;
	}
	if(l <= max && comparator(a[l],x) == 0) {
		$s.pop();
		return l;
	} else {
		var $tmp = ~l;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.bsearchInt = function(a,x,min,max) {
	$s.push("de.polygonal.ds.ArrayUtil::bsearchInt");
	var $spos = $s.length;
	if(true != (a != null)) throw new de.polygonal.ASE("a != null",{ fileName : "ArrayUtil.hx", lineNumber : 210, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchInt"}); else null;
	if(true != (min >= 0 && min < a.length)) throw new de.polygonal.ASE("min >= 0 && min < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 211, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchInt"}); else null;
	if(true != max < a.length) throw new de.polygonal.ASE("max < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 212, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchInt"}); else null;
	var l = min, m, h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) l = m + 1; else h = m;
	}
	if(l <= max && a[l] == x) {
		$s.pop();
		return l;
	} else {
		var $tmp = ~l;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.bsearchFloat = function(a,x,min,max) {
	$s.push("de.polygonal.ds.ArrayUtil::bsearchFloat");
	var $spos = $s.length;
	if(true != (a != null)) throw new de.polygonal.ASE("a != null",{ fileName : "ArrayUtil.hx", lineNumber : 247, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchFloat"}); else null;
	if(true != (min >= 0 && min < a.length)) throw new de.polygonal.ASE("min >= 0 && min < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 248, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchFloat"}); else null;
	if(true != max < a.length) throw new de.polygonal.ASE("max < a.length",{ fileName : "ArrayUtil.hx", lineNumber : 249, className : "de.polygonal.ds.ArrayUtil", methodName : "bsearchFloat"}); else null;
	var l = min, m, h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) l = m + 1; else h = m;
	}
	if(l <= max && a[l] == x) {
		$s.pop();
		return l;
	} else {
		var $tmp = ~l;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.shuffle = function(a,rval) {
	$s.push("de.polygonal.ds.ArrayUtil::shuffle");
	var $spos = $s.length;
	if(true != (a != null)) throw new de.polygonal.ASE("a != null",{ fileName : "ArrayUtil.hx", lineNumber : 283, className : "de.polygonal.ds.ArrayUtil", methodName : "shuffle"}); else null;
	var s = a.length;
	if(rval == null) {
		var m = Math;
		while(--s > 1) {
			var i = Std["int"](m.random() * s);
			var t = a[s];
			a[s] = a[i];
			a[i] = t;
		}
	} else {
		if(true != rval.length >= a.length) throw new de.polygonal.ASE("insufficient random values",{ fileName : "ArrayUtil.hx", lineNumber : 301, className : "de.polygonal.ds.ArrayUtil", methodName : "shuffle"}); else null;
		var j = 0;
		while(--s > 1) {
			var i = Std["int"](rval[j++] * s);
			var t = a[s];
			a[s] = a[i];
			a[i] = t;
		}
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.sortRange = function(a,compare,useInsertionSort,first,count) {
	$s.push("de.polygonal.ds.ArrayUtil::sortRange");
	var $spos = $s.length;
	var k = a.length;
	if(k > 1) {
		if(true != (first >= 0 && first <= k - 1 && first + count <= k)) throw new de.polygonal.ASE("first out of bound",{ fileName : "ArrayUtil.hx", lineNumber : 330, className : "de.polygonal.ds.ArrayUtil", methodName : "sortRange"}); else null;
		if(true != (count >= 0 && count <= k)) throw new de.polygonal.ASE("count out of bound",{ fileName : "ArrayUtil.hx", lineNumber : 331, className : "de.polygonal.ds.ArrayUtil", methodName : "sortRange"}); else null;
		if(useInsertionSort) de.polygonal.ds.ArrayUtil._insertionSort(a,first,count,compare); else de.polygonal.ds.ArrayUtil._quickSort(a,first,count,compare);
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil._insertionSort = function(a,first,k,cmp) {
	$s.push("de.polygonal.ds.ArrayUtil::_insertionSort");
	var $spos = $s.length;
	var _g1 = first + 1, _g = first + k;
	while(_g1 < _g) {
		var i = _g1++;
		var x = a[i];
		var j = i;
		while(j > first) {
			var y = a[j - 1];
			if(cmp(y,x) > 0) {
				a[j] = y;
				j--;
			} else break;
		}
		a[j] = x;
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil._quickSort = function(a,first,k,cmp) {
	$s.push("de.polygonal.ds.ArrayUtil::_quickSort");
	var $spos = $s.length;
	var last = first + k - 1;
	var lo = first;
	var hi = last;
	if(k > 1) {
		var i0 = first;
		var i1 = i0 + (k >> 1);
		var i2 = i0 + k - 1;
		var t0 = a[i0];
		var t1 = a[i1];
		var t2 = a[i2];
		var mid;
		var t = cmp(t0,t2);
		if(t < 0 && cmp(t0,t1) < 0) mid = cmp(t1,t2) < 0?i1:i2; else if(cmp(t1,t0) < 0 && cmp(t1,t2) < 0) mid = t < 0?i0:i2; else mid = cmp(t2,t0) < 0?i1:i0;
		var pivot = a[mid];
		a[mid] = a[first];
		while(lo < hi) {
			while(cmp(pivot,a[hi]) < 0 && lo < hi) hi--;
			if(hi != lo) {
				a[lo] = a[hi];
				lo++;
			}
			while(cmp(pivot,a[lo]) > 0 && lo < hi) lo++;
			if(hi != lo) {
				a[hi] = a[lo];
				hi--;
			}
		}
		a[lo] = pivot;
		de.polygonal.ds.ArrayUtil._quickSort(a,first,lo - first,cmp);
		de.polygonal.ds.ArrayUtil._quickSort(a,lo + 1,last - lo,cmp);
	}
	$s.pop();
}
de.polygonal.ds.ArrayUtil.prototype = {
	__class__: de.polygonal.ds.ArrayUtil
}
de.polygonal.ds.Set = $hxClasses["de.polygonal.ds.Set"] = function() { }
de.polygonal.ds.Set.__name__ = ["de","polygonal","ds","Set"];
de.polygonal.ds.Set.__interfaces__ = [de.polygonal.ds.Collection];
de.polygonal.ds.Set.prototype = {
	has: null
	,set: null
	,__class__: de.polygonal.ds.Set
}
de.polygonal.ds.IntHashSet = $hxClasses["de.polygonal.ds.IntHashSet"] = function(slotCount,capacity,isResizable,maxSize) {
	$s.push("de.polygonal.ds.IntHashSet::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(isResizable == null) isResizable = true;
	if(capacity == null) capacity = -1;
	if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("slotCount is not a power of 2",{ fileName : "IntHashSet.hx", lineNumber : 160, className : "de.polygonal.ds.IntHashSet", methodName : "new"}); else null;
	this._isResizable = isResizable;
	if(capacity == -1) capacity = slotCount; else {
		if(true != capacity >= 2) throw new de.polygonal.ASE("minimum capacity is 2",{ fileName : "IntHashSet.hx", lineNumber : 170, className : "de.polygonal.ds.IntHashSet", methodName : "new"}); else null;
		if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("capacity is not a power of 2",{ fileName : "IntHashSet.hx", lineNumber : 171, className : "de.polygonal.ds.IntHashSet", methodName : "new"}); else null;
	}
	this._free = 0;
	this._capacity = capacity;
	this._size = 0;
	this._mask = slotCount - 1;
	this._sizeLevel = 0;
	this._iterator = null;
	this.maxSize = maxSize == -1?2147483647:maxSize;
	this._hash = de.polygonal.ds.ArrayUtil.alloc(slotCount);
	de.polygonal.ds.ArrayUtil.fill(this._hash,-1,slotCount);
	this._data = de.polygonal.ds.ArrayUtil.alloc(this._capacity << 1);
	this._next = de.polygonal.ds.ArrayUtil.alloc(this._capacity);
	var j = 1;
	var _g = 0;
	while(_g < capacity) {
		var i = _g++;
		this._data[j - 1] = -2147483648;
		this._data[j] = -1;
		j += 2;
	}
	var _g1 = 0, _g = this._capacity - 1;
	while(_g1 < _g) {
		var i = _g1++;
		this._next[i] = i + 1;
	}
	this._next[this._capacity - 1] = -1;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.IntHashSet.__name__ = ["de","polygonal","ds","IntHashSet"];
de.polygonal.ds.IntHashSet.__interfaces__ = [de.polygonal.ds.Set];
de.polygonal.ds.IntHashSet.prototype = {
	key: null
	,maxSize: null
	,reuseIterator: null
	,_hash: null
	,_data: null
	,_next: null
	,_mask: null
	,_free: null
	,_capacity: null
	,_size: null
	,_sizeLevel: null
	,_isResizable: null
	,_iterator: null
	,loadFactor: null
	,_loadFactorGetter: function() {
		$s.push("de.polygonal.ds.IntHashSet::_loadFactorGetter");
		var $spos = $s.length;
		var $tmp = this._size / (this._mask + 1);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,slotCount: null
	,_slotCountGetter: function() {
		$s.push("de.polygonal.ds.IntHashSet::_slotCountGetter");
		var $spos = $s.length;
		var $tmp = this._mask + 1;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,capacity: null
	,_capacityGetter: function() {
		$s.push("de.polygonal.ds.IntHashSet::_capacityGetter");
		var $spos = $s.length;
		var $tmp = this._capacity;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getCollisionCount: function() {
		$s.push("de.polygonal.ds.IntHashSet::getCollisionCount");
		var $spos = $s.length;
		var c = 0, j;
		var _g1 = 0, _g = this._mask + 1;
		while(_g1 < _g) {
			var i = _g1++;
			j = this._hash[i];
			if(j == -1) continue;
			j = this._data[j + 1];
			while(j != -1) {
				j = this._data[j + 1];
				c++;
			}
		}
		$s.pop();
		return c;
		$s.pop();
	}
	,hasFront: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::hasFront");
		var $spos = $s.length;
		if(true != (x != -2147483648)) throw new de.polygonal.ASE("value 0x80000000 is reserved",{ fileName : "IntHashSet.hx", lineNumber : 276, className : "de.polygonal.ds.IntHashSet", methodName : "hasFront"}); else null;
		var b = x * 73856093 & this._mask;
		var i = this._hash[b];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(this._data[i] == x) {
			$s.pop();
			return true;
		} else {
			var exists = false;
			var first = i, i0 = first;
			i = this._data[i + 1];
			while(i != -1) {
				if(this._data[i] == x) {
					this._data[i0 + 1] = this._data[i + 1];
					this._data[i + 1] = first;
					this._hash[b] = i;
					exists = true;
					break;
				}
				i = this._data[(i0 = i) + 1];
			}
			$s.pop();
			return exists;
		}
		$s.pop();
	}
	,rehash: function(slotCount) {
		$s.push("de.polygonal.ds.IntHashSet::rehash");
		var $spos = $s.length;
		if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("slotCount is not a power of 2",{ fileName : "IntHashSet.hx", lineNumber : 344, className : "de.polygonal.ds.IntHashSet", methodName : "rehash"}); else null;
		if(slotCount == this._mask + 1) {
			$s.pop();
			return;
		}
		var tmp = new de.polygonal.ds.IntHashSet(slotCount,this._capacity);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i << 1];
			if(v != -2147483648) tmp.set(v);
		}
		this._hash = tmp._hash;
		this._data = tmp._data;
		this._next = tmp._next;
		this._mask = tmp._mask;
		this._free = tmp._free;
		this._sizeLevel = tmp._sizeLevel;
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.IntHashSet::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{IntHashSet, size/capacity: %d/%d, load factor: %.2f}",[this._size,this._capacity,this._size / (this._mask + 1)]);
		if(this._size == 0) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var $it0 = this.iterator();
		while( $it0.hasNext() ) {
			var x = $it0.next();
			s += de.polygonal.core.fmt.Sprintf.format("  %d\n",[x]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,has: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::has");
		var $spos = $s.length;
		if(true != (x != -2147483648)) throw new de.polygonal.ASE("value 0x80000000 is reserved",{ fileName : "IntHashSet.hx", lineNumber : 429, className : "de.polygonal.ds.IntHashSet", methodName : "has"}); else null;
		var i = this._hash[x * 73856093 & this._mask];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(this._data[i] == x) {
			$s.pop();
			return true;
		} else {
			var exists = false;
			i = this._data[i + 1];
			while(i != -1) {
				if(this._data[i] == x) {
					exists = true;
					break;
				}
				i = this._data[i + 1];
			}
			$s.pop();
			return exists;
		}
		$s.pop();
	}
	,set: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::set");
		var $spos = $s.length;
		if(true != (x != -2147483648)) throw new de.polygonal.ASE("value 0x80000000 is reserved",{ fileName : "IntHashSet.hx", lineNumber : 488, className : "de.polygonal.ds.IntHashSet", methodName : "set"}); else null;
		if(true != this._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "IntHashSet.hx", lineNumber : 489, className : "de.polygonal.ds.IntHashSet", methodName : "set"}); else null;
		var b = x * 73856093 & this._mask;
		var j = this._hash[b];
		if(j == -1) {
			if(this._size == this._capacity) {
				if(!this._isResizable) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("hash set is full (%d)",[this._capacity]),{ fileName : "IntHashSet.hx", lineNumber : 506, className : "de.polygonal.ds.IntHashSet", methodName : "set"});
				this._expand();
			}
			var i = this._free << 1;
			this._free = this._next[this._free];
			this._hash[b] = i;
			this._data[i] = x;
			this._size++;
			$s.pop();
			return true;
		} else if(this._data[j] == x) {
			$s.pop();
			return false;
		} else {
			var t = this._data[j + 1];
			while(t != -1) {
				if(this._data[t] == x) {
					j = -1;
					break;
				}
				j = t;
				t = this._data[t + 1];
			}
			if(j == -1) {
				$s.pop();
				return false;
			} else {
				if(this._size == this._capacity) {
					if(!this._isResizable) throw de.polygonal.core.fmt.Sprintf.format("hash set is full (%d)",[this._capacity]);
					this._expand();
				}
				var i = this._free << 1;
				this._free = this._next[this._free];
				this._data[i] = x;
				this._data[j + 1] = i;
				this._size++;
				$s.pop();
				return true;
			}
		}
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.IntHashSet::free");
		var $spos = $s.length;
		this._hash = null;
		this._data = null;
		this._next = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::contains");
		var $spos = $s.length;
		var $tmp = this.has(x);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::remove");
		var $spos = $s.length;
		var b = x * 73856093 & this._mask;
		var i = this._hash[b];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(x == this._data[i]) {
			if(this._data[i + 1] == -1) this._hash[b] = -1; else this._hash[b] = this._data[i + 1];
			var j = Std["int"](i >> 1);
			this._next[j] = this._free;
			this._free = j;
			this._data[i] = -2147483648;
			this._data[i + 1] = -1;
			this._size--;
			if(this._sizeLevel > 0) {
				if(this._size == this._capacity >> 2) {
					if(this._isResizable) this._shrink();
				}
			}
			$s.pop();
			return true;
		} else {
			var exists = false;
			var i0 = i;
			i = this._data[i + 1];
			while(i != -1) {
				if(this._data[i] == x) {
					exists = true;
					break;
				}
				i = this._data[(i0 = i) + 1];
			}
			if(exists) {
				this._data[i0 + 1] = this._data[i + 1];
				var j = Std["int"](i >> 1);
				this._next[j] = this._free;
				this._free = j;
				this._data[i] = -2147483648;
				this._data[i + 1] = -1;
				--this._size;
				if(this._sizeLevel > 0) {
					if(this._size == this._capacity >> 2) {
						if(this._isResizable) this._shrink();
					}
				}
				$s.pop();
				return true;
			} else {
				$s.pop();
				return false;
			}
		}
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.IntHashSet::size");
		var $spos = $s.length;
		var $tmp = this._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.IntHashSet::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		if(purge && this._sizeLevel > 0) {
			this._capacity >>= this._sizeLevel;
			this._sizeLevel = 0;
			this._data = de.polygonal.ds.ArrayUtil.alloc(this._capacity << 1);
			this._next = de.polygonal.ds.ArrayUtil.alloc(this._capacity);
		}
		de.polygonal.ds.ArrayUtil.fill(this._hash,-1,this._mask + 1);
		var j = 1;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			this._data[j - 1] = -2147483648;
			this._data[j] = -1;
			j += 2;
		}
		var _g1 = 0, _g = this._capacity - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[this._capacity - 1] = -1;
		this._free = 0;
		this._size = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.IntHashSet::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.IntHashSetIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.IntHashSetIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.IntHashSet::isEmpty");
		var $spos = $s.length;
		var $tmp = this._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.IntHashSet::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._size);
		var j = 0;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i << 1];
			if(v != -2147483648) a[j++] = v;
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.IntHashSet::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._size);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i << 1];
			if(v != -2147483648) a.set(a._size,v);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.IntHashSet::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var c = Type.createEmptyInstance(de.polygonal.ds.IntHashSet);
		c.key = de.polygonal.ds.HashKey._counter++;
		c.maxSize = this.maxSize;
		c._hash = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._hash,c._hash,null,null);
		c._data = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._data,c._data,null,null);
		c._next = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._next,c._next,null,null);
		c._mask = this._mask;
		c._capacity = this._capacity;
		c._free = this._free;
		c._size = this._size;
		c._sizeLevel = this._sizeLevel;
		$s.pop();
		return c;
		$s.pop();
	}
	,_hashCode: function(x) {
		$s.push("de.polygonal.ds.IntHashSet::_hashCode");
		var $spos = $s.length;
		var $tmp = x * 73856093 & this._mask;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_expand: function() {
		$s.push("de.polygonal.ds.IntHashSet::_expand");
		var $spos = $s.length;
		this._sizeLevel++;
		var oldSize = this._capacity;
		var newSize = oldSize << 1;
		this._capacity = newSize;
		var copy = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._next,copy,0,oldSize);
		this._next = copy;
		var copy1 = de.polygonal.ds.ArrayUtil.alloc(newSize << 1);
		de.polygonal.ds.ArrayUtil.copy(this._data,copy1,0,oldSize << 1);
		this._data = copy1;
		var _g1 = oldSize - 1, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = oldSize;
		var j = (oldSize << 1) + 1;
		var _g = 0;
		while(_g < oldSize) {
			var i = _g++;
			this._data[j - 1] = -2147483648;
			this._data[j] = -1;
			j += 2;
		}
		$s.pop();
	}
	,_shrink: function() {
		$s.push("de.polygonal.ds.IntHashSet::_shrink");
		var $spos = $s.length;
		this._sizeLevel--;
		var oldSize = this._capacity;
		var newSize = oldSize >> 1;
		this._capacity = newSize;
		var k = newSize << 1;
		var tmp = de.polygonal.ds.ArrayUtil.alloc(k);
		this._next = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var e = 0;
		var _g1 = 0, _g = this._mask + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var j = this._hash[i];
			if(j == -1) continue;
			this._hash[i] = e;
			tmp[e++] = this._data[j];
			tmp[e++] = -1;
			j = this._data[j + 1];
			while(j != -1) {
				tmp[e - 1] = e;
				tmp[e++] = this._data[j];
				tmp[e++] = -1;
				j = this._data[j + 1];
			}
		}
		var i = k >> 1;
		while(i < k) {
			tmp[i++] = -2147483648;
			tmp[i++] = -1;
		}
		this._data = tmp;
		var _g1 = 0, _g = newSize - 1;
		while(_g1 < _g) {
			var i1 = _g1++;
			this._next[i1] = i1 + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = newSize >> 1;
		$s.pop();
	}
	,__getHash: function(i) {
		$s.push("de.polygonal.ds.IntHashSet::__getHash");
		var $spos = $s.length;
		var $tmp = this._hash[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setHash: function(i,x) {
		$s.push("de.polygonal.ds.IntHashSet::__setHash");
		var $spos = $s.length;
		this._hash[i] = x;
		$s.pop();
	}
	,__getNext: function(i) {
		$s.push("de.polygonal.ds.IntHashSet::__getNext");
		var $spos = $s.length;
		var $tmp = this._next[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setNext: function(i,x) {
		$s.push("de.polygonal.ds.IntHashSet::__setNext");
		var $spos = $s.length;
		this._next[i] = x;
		$s.pop();
	}
	,__getData: function(i) {
		$s.push("de.polygonal.ds.IntHashSet::__getData");
		var $spos = $s.length;
		var $tmp = this._data[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setData: function(i,x) {
		$s.push("de.polygonal.ds.IntHashSet::__setData");
		var $spos = $s.length;
		this._data[i] = x;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntHashSet
	,__properties__: {get_capacity:"_capacityGetter",get_slotCount:"_slotCountGetter",get_loadFactor:"_loadFactorGetter"}
}
de.polygonal.ds.IntHashSetIterator = $hxClasses["de.polygonal.ds.IntHashSetIterator"] = function(hash) {
	$s.push("de.polygonal.ds.IntHashSetIterator::new");
	var $spos = $s.length;
	this._f = hash;
	this._data = this._f._data;
	this._i = 0;
	this._s = this._f._capacity;
	while(this._i < this._s && this._data[this._i << 1] == -2147483648) this._i++;
	$s.pop();
}
de.polygonal.ds.IntHashSetIterator.__name__ = ["de","polygonal","ds","IntHashSetIterator"];
de.polygonal.ds.IntHashSetIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.IntHashSetIterator.prototype = {
	_f: null
	,_i: null
	,_s: null
	,_data: null
	,reset: function() {
		$s.push("de.polygonal.ds.IntHashSetIterator::reset");
		var $spos = $s.length;
		this._data = this._f._data;
		this._i = 0;
		this._s = this._f._capacity;
		while(this._i < this._s && this._data[this._i << 1] == -2147483648) this._i++;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.IntHashSetIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.IntHashSetIterator::next");
		var $spos = $s.length;
		var x = this._data[this._i++ << 1];
		while(this._i < this._s && this._data[this._i << 1] == -2147483648) this._i++;
		$s.pop();
		return x;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.IntHashSetIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,_scan: function() {
		$s.push("de.polygonal.ds.IntHashSetIterator::_scan");
		var $spos = $s.length;
		while(this._i < this._s && this._data[this._i << 1] == -2147483648) this._i++;
		$s.pop();
	}
	,__getData: function(i) {
		$s.push("de.polygonal.ds.IntHashSetIterator::__getData");
		var $spos = $s.length;
		var $tmp = this._data[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntHashSetIterator
}
jeash.text.FontStyle = $hxClasses["jeash.text.FontStyle"] = { __ename__ : ["jeash","text","FontStyle"], __constructs__ : ["REGULAR","ITALIC","BOLD_ITALIC","BOLD"] }
jeash.text.FontStyle.REGULAR = ["REGULAR",0];
jeash.text.FontStyle.REGULAR.toString = $estr;
jeash.text.FontStyle.REGULAR.__enum__ = jeash.text.FontStyle;
jeash.text.FontStyle.ITALIC = ["ITALIC",1];
jeash.text.FontStyle.ITALIC.toString = $estr;
jeash.text.FontStyle.ITALIC.__enum__ = jeash.text.FontStyle;
jeash.text.FontStyle.BOLD_ITALIC = ["BOLD_ITALIC",2];
jeash.text.FontStyle.BOLD_ITALIC.toString = $estr;
jeash.text.FontStyle.BOLD_ITALIC.__enum__ = jeash.text.FontStyle;
jeash.text.FontStyle.BOLD = ["BOLD",3];
jeash.text.FontStyle.BOLD.toString = $estr;
jeash.text.FontStyle.BOLD.__enum__ = jeash.text.FontStyle;
haxe.Resource = $hxClasses["haxe.Resource"] = function() { }
haxe.Resource.__name__ = ["haxe","Resource"];
haxe.Resource.content = null;
haxe.Resource.listNames = function() {
	$s.push("haxe.Resource::listNames");
	var $spos = $s.length;
	var names = new Array();
	var _g = 0, _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		names.push(x.name);
	}
	$s.pop();
	return names;
	$s.pop();
}
haxe.Resource.getString = function(name) {
	$s.push("haxe.Resource::getString");
	var $spos = $s.length;
	var _g = 0, _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				var $tmp = x.str;
				$s.pop();
				return $tmp;
			}
			var b = haxe.Unserializer.run(x.data);
			var $tmp = b.toString();
			$s.pop();
			return $tmp;
		}
	}
	$s.pop();
	return null;
	$s.pop();
}
haxe.Resource.getBytes = function(name) {
	$s.push("haxe.Resource::getBytes");
	var $spos = $s.length;
	var _g = 0, _g1 = haxe.Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				var $tmp = haxe.io.Bytes.ofString(x.str);
				$s.pop();
				return $tmp;
			}
			var $tmp = haxe.Unserializer.run(x.data);
			$s.pop();
			return $tmp;
		}
	}
	$s.pop();
	return null;
	$s.pop();
}
haxe.Resource.prototype = {
	__class__: haxe.Resource
}
haxe.macro.Type = $hxClasses["haxe.macro.Type"] = { __ename__ : ["haxe","macro","Type"], __constructs__ : ["TMono","TEnum","TInst","TType","TFun","TAnonymous","TDynamic","TLazy"] }
haxe.macro.Type.TMono = function(t) { var $x = ["TMono",0,t]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TEnum = function(t,params) { var $x = ["TEnum",1,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TInst = function(t,params) { var $x = ["TInst",2,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TType = function(t,params) { var $x = ["TType",3,t,params]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TFun = function(args,ret) { var $x = ["TFun",4,args,ret]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TAnonymous = function(a) { var $x = ["TAnonymous",5,a]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TDynamic = function(t) { var $x = ["TDynamic",6,t]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.Type.TLazy = function(f) { var $x = ["TLazy",7,f]; $x.__enum__ = haxe.macro.Type; $x.toString = $estr; return $x; }
haxe.macro.FieldKind = $hxClasses["haxe.macro.FieldKind"] = { __ename__ : ["haxe","macro","FieldKind"], __constructs__ : ["FVar","FMethod"] }
haxe.macro.FieldKind.FVar = function(read,write) { var $x = ["FVar",0,read,write]; $x.__enum__ = haxe.macro.FieldKind; $x.toString = $estr; return $x; }
haxe.macro.FieldKind.FMethod = function(k) { var $x = ["FMethod",1,k]; $x.__enum__ = haxe.macro.FieldKind; $x.toString = $estr; return $x; }
haxe.macro.VarAccess = $hxClasses["haxe.macro.VarAccess"] = { __ename__ : ["haxe","macro","VarAccess"], __constructs__ : ["AccNormal","AccNo","AccNever","AccResolve","AccCall","AccInline","AccRequire"] }
haxe.macro.VarAccess.AccNormal = ["AccNormal",0];
haxe.macro.VarAccess.AccNormal.toString = $estr;
haxe.macro.VarAccess.AccNormal.__enum__ = haxe.macro.VarAccess;
haxe.macro.VarAccess.AccNo = ["AccNo",1];
haxe.macro.VarAccess.AccNo.toString = $estr;
haxe.macro.VarAccess.AccNo.__enum__ = haxe.macro.VarAccess;
haxe.macro.VarAccess.AccNever = ["AccNever",2];
haxe.macro.VarAccess.AccNever.toString = $estr;
haxe.macro.VarAccess.AccNever.__enum__ = haxe.macro.VarAccess;
haxe.macro.VarAccess.AccResolve = ["AccResolve",3];
haxe.macro.VarAccess.AccResolve.toString = $estr;
haxe.macro.VarAccess.AccResolve.__enum__ = haxe.macro.VarAccess;
haxe.macro.VarAccess.AccCall = function(m) { var $x = ["AccCall",4,m]; $x.__enum__ = haxe.macro.VarAccess; $x.toString = $estr; return $x; }
haxe.macro.VarAccess.AccInline = ["AccInline",5];
haxe.macro.VarAccess.AccInline.toString = $estr;
haxe.macro.VarAccess.AccInline.__enum__ = haxe.macro.VarAccess;
haxe.macro.VarAccess.AccRequire = function(r) { var $x = ["AccRequire",6,r]; $x.__enum__ = haxe.macro.VarAccess; $x.toString = $estr; return $x; }
haxe.macro.MethodKind = $hxClasses["haxe.macro.MethodKind"] = { __ename__ : ["haxe","macro","MethodKind"], __constructs__ : ["MethNormal","MethInline","MethDynamic","MethMacro"] }
haxe.macro.MethodKind.MethNormal = ["MethNormal",0];
haxe.macro.MethodKind.MethNormal.toString = $estr;
haxe.macro.MethodKind.MethNormal.__enum__ = haxe.macro.MethodKind;
haxe.macro.MethodKind.MethInline = ["MethInline",1];
haxe.macro.MethodKind.MethInline.toString = $estr;
haxe.macro.MethodKind.MethInline.__enum__ = haxe.macro.MethodKind;
haxe.macro.MethodKind.MethDynamic = ["MethDynamic",2];
haxe.macro.MethodKind.MethDynamic.toString = $estr;
haxe.macro.MethodKind.MethDynamic.__enum__ = haxe.macro.MethodKind;
haxe.macro.MethodKind.MethMacro = ["MethMacro",3];
haxe.macro.MethodKind.MethMacro.toString = $estr;
haxe.macro.MethodKind.MethMacro.__enum__ = haxe.macro.MethodKind;
jeash.display.GraphicsDataType = $hxClasses["jeash.display.GraphicsDataType"] = { __ename__ : ["jeash","display","GraphicsDataType"], __constructs__ : ["STROKE","SOLID","GRADIENT","PATH"] }
jeash.display.GraphicsDataType.STROKE = ["STROKE",0];
jeash.display.GraphicsDataType.STROKE.toString = $estr;
jeash.display.GraphicsDataType.STROKE.__enum__ = jeash.display.GraphicsDataType;
jeash.display.GraphicsDataType.SOLID = ["SOLID",1];
jeash.display.GraphicsDataType.SOLID.toString = $estr;
jeash.display.GraphicsDataType.SOLID.__enum__ = jeash.display.GraphicsDataType;
jeash.display.GraphicsDataType.GRADIENT = ["GRADIENT",2];
jeash.display.GraphicsDataType.GRADIENT.toString = $estr;
jeash.display.GraphicsDataType.GRADIENT.__enum__ = jeash.display.GraphicsDataType;
jeash.display.GraphicsDataType.PATH = ["PATH",3];
jeash.display.GraphicsDataType.PATH.toString = $estr;
jeash.display.GraphicsDataType.PATH.__enum__ = jeash.display.GraphicsDataType;
com.wighawag.game.xjump.session.GameSession = $hxClasses["com.wighawag.game.xjump.session.GameSession"] = function(highscoreService) {
	$s.push("com.wighawag.game.xjump.session.GameSession::new");
	var $spos = $s.length;
	this.highscoreService = highscoreService;
	$s.pop();
}
com.wighawag.game.xjump.session.GameSession.__name__ = ["com","wighawag","game","xjump","session","GameSession"];
com.wighawag.game.xjump.session.GameSession.prototype = {
	highscoreService: null
	,currentBestScore: null
	,currentBestScoreDuration: null
	,getReady: function() {
		$s.push("com.wighawag.game.xjump.session.GameSession::getReady");
		var $spos = $s.length;
		var me = this;
		var signaler = new hsl.haxe.DirectSignaler(this);
		this.highscoreService.getOwnHighScore().onSuccess(function(score) {
			$s.push("com.wighawag.game.xjump.session.GameSession::getReady@29");
			var $spos = $s.length;
			me.onHighscore(score);
			signaler.dispatch(null,null,{ fileName : "GameSession.hx", lineNumber : 31, className : "com.wighawag.game.xjump.session.GameSession", methodName : "getReady"});
			$s.pop();
		});
		$s.pop();
		return signaler;
		$s.pop();
	}
	,onHighscore: function(highscore) {
		$s.push("com.wighawag.game.xjump.session.GameSession::onHighscore");
		var $spos = $s.length;
		if(highscore != null) {
			this.currentBestScore = highscore.value;
			this.currentBestScoreDuration = highscore.time;
		} else com.wighawag.log.EventSignaler.dispatchError("no highscore : ");
		$s.pop();
	}
	,start: function() {
		$s.push("com.wighawag.game.xjump.session.GameSession::start");
		var $spos = $s.length;
		var signaler = new hsl.haxe.DirectSignaler(this);
		this.highscoreService.start().onSuccess(function(seed) {
			$s.push("com.wighawag.game.xjump.session.GameSession::start@52");
			var $spos = $s.length;
			com.wighawag.log.EventSignaler.dispatchEvent("starting : " + seed.seedList);
			var seeds = seed.seedList;
			var seedList = new Array();
			var _g = 0;
			while(_g < seeds.length) {
				var seed1 = seeds[_g];
				++_g;
				seedList.push(Std["int"](Math.abs(seed1)));
			}
			signaler.dispatch(seedList,null,{ fileName : "GameSession.hx", lineNumber : 62, className : "com.wighawag.game.xjump.session.GameSession", methodName : "start"});
			$s.pop();
		});
		$s.pop();
		return signaler;
		$s.pop();
	}
	,submitScore: function(score) {
		$s.push("com.wighawag.game.xjump.session.GameSession::submitScore");
		var $spos = $s.length;
		var me = this;
		var scoreValue = score.value;
		var scoreDuration = score.time;
		if(scoreValue > this.currentBestScore || scoreValue == this.currentBestScore && scoreDuration < this.currentBestScoreDuration) {
			com.wighawag.log.EventSignaler.dispatchEvent("submitting new score : " + scoreValue + " " + scoreDuration + " proof : " + score.proof);
			var signaler = new hsl.haxe.DirectSignaler(this);
			this.highscoreService.setScore(score).onSuccess(function(message) {
				$s.push("com.wighawag.game.xjump.session.GameSession::submitScore@78");
				var $spos = $s.length;
				com.wighawag.log.EventSignaler.dispatchEvent(message);
				me.currentBestScore = scoreValue;
				me.currentBestScoreDuration = scoreDuration;
				signaler.dispatch(message,null,{ fileName : "GameSession.hx", lineNumber : 82, className : "com.wighawag.game.xjump.session.GameSession", methodName : "submitScore"});
				$s.pop();
			});
			$s.pop();
			return signaler;
		} else {
			var extendedSignaler = new com.wighawag.signals.ExtendedSignaler(this);
			extendedSignaler.setData({ });
			$s.pop();
			return extendedSignaler;
		}
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.session.GameSession
}
if(!de.polygonal.core.fmt) de.polygonal.core.fmt = {}
de.polygonal.core.fmt.ASCII = $hxClasses["de.polygonal.core.fmt.ASCII"] = function() { }
de.polygonal.core.fmt.ASCII.__name__ = ["de","polygonal","core","fmt","ASCII"];
de.polygonal.core.fmt.ASCII.isASCII = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isASCII");
	var $spos = $s.length;
	var $tmp = x >= 0 && x <= 127;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isDigit = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isDigit");
	var $spos = $s.length;
	var $tmp = x >= 48 && x <= 57;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isWhite = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isWhite");
	var $spos = $s.length;
	var $tmp = x <= 32;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isPrintable = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isPrintable");
	var $spos = $s.length;
	var $tmp = x >= 33 && x <= 126;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isUpperCaseAlphabetic = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isUpperCaseAlphabetic");
	var $spos = $s.length;
	var $tmp = x >= 65 && x <= 90;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isLowerCaseAlphabetic = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isLowerCaseAlphabetic");
	var $spos = $s.length;
	var $tmp = x >= 97 && x <= 122;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isAlphabetic = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isAlphabetic");
	var $spos = $s.length;
	var $tmp = x >= 65 && x <= 90 || x >= 97 && x <= 122;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.isAlphaNumeric = function(x) {
	$s.push("de.polygonal.core.fmt.ASCII::isAlphaNumeric");
	var $spos = $s.length;
	var $tmp = x >= 48 && x <= 57 || x >= 65 && x <= 90 || x >= 97 && x <= 122;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.ASCII.prototype = {
	__class__: de.polygonal.core.fmt.ASCII
}
de.polygonal.core.event.ObserverMacro = $hxClasses["de.polygonal.core.event.ObserverMacro"] = function() { }
de.polygonal.core.event.ObserverMacro.__name__ = ["de","polygonal","core","event","ObserverMacro"];
de.polygonal.core.event.ObserverMacro.extractTypes = function(x) {
	$s.push("de.polygonal.core.event.ObserverMacro::extractTypes");
	var $spos = $s.length;
	var g = x & -134217728;
	var e = x & 134217727;
	var i = 0;
	var s = de.polygonal.ds.Bits.ones(e);
	var $tmp = { hasNext : function() {
		$s.push("de.polygonal.core.event.ObserverMacro::extractTypes@79");
		var $spos = $s.length;
		var $tmp = i < s;
		$s.pop();
		return $tmp;
		$s.pop();
	}, next : function() {
		$s.push("de.polygonal.core.event.ObserverMacro::extractTypes@83");
		var $spos = $s.length;
		var type = g | de.polygonal.ds.Bits.msb(e);
		e = e & ~de.polygonal.ds.Bits.msb(e);
		i++;
		$s.pop();
		return type;
		$s.pop();
	}};
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.event.ObserverMacro.prototype = {
	__class__: de.polygonal.core.event.ObserverMacro
}
if(!jeash.media) jeash.media = {}
jeash.media.SoundChannel = $hxClasses["jeash.media.SoundChannel"] = function() {
	$s.push("jeash.media.SoundChannel::new");
	var $spos = $s.length;
	jeash.events.EventDispatcher.call(this,this);
	this.ChannelId = -1;
	this.leftPeak = 0.;
	this.position = 0.;
	this.rightPeak = 0.;
	this.jeashAudioCurrentLoop = 1;
	this.jeashAudioTotalLoops = 1;
	$s.pop();
}
jeash.media.SoundChannel.__name__ = ["jeash","media","SoundChannel"];
jeash.media.SoundChannel.jeashCreate = function(src,startTime,loops,sndTransform,removeRef) {
	$s.push("jeash.media.SoundChannel::jeashCreate");
	var $spos = $s.length;
	if(loops == null) loops = 0;
	if(startTime == null) startTime = 0.0;
	var channel = new jeash.media.SoundChannel();
	channel.jeashAudio = js.Lib.document.createElement("audio");
	channel.jeashRemoveRef = removeRef;
	channel.jeashAudio.addEventListener("ended",channel.__onSoundChannelFinished.$bind(channel),false);
	channel.jeashAudio.addEventListener("seeked",channel.__onSoundSeeked.$bind(channel),false);
	if(loops > 0) {
		channel.jeashAudioTotalLoops = loops;
		channel.jeashAudio.loop = true;
	}
	channel.jeashStartTime = startTime;
	if(startTime > 0.) {
		var onLoad = null;
		onLoad = function(_) {
			$s.push("jeash.media.SoundChannel::jeashCreate@79");
			var $spos = $s.length;
			channel.jeashAudio.currentTime = channel.jeashStartTime;
			channel.jeashAudio.play();
			channel.jeashAudio.removeEventListener("canplaythrough",onLoad,false);
			$s.pop();
		};
		channel.jeashAudio.addEventListener("canplaythrough",onLoad,false);
	} else channel.jeashAudio.autoplay = true;
	channel.jeashAudio.src = src;
	$s.pop();
	return channel;
	$s.pop();
}
jeash.media.SoundChannel.__super__ = jeash.events.EventDispatcher;
jeash.media.SoundChannel.prototype = $extend(jeash.events.EventDispatcher.prototype,{
	ChannelId: null
	,leftPeak: null
	,position: null
	,rightPeak: null
	,soundTransform: null
	,jeashAudioCurrentLoop: null
	,jeashAudioTotalLoops: null
	,jeashRemoveRef: null
	,jeashStartTime: null
	,jeashAudio: null
	,stop: function() {
		$s.push("jeash.media.SoundChannel::stop");
		var $spos = $s.length;
		if(this.jeashAudio != null) {
			this.jeashAudio.pause();
			this.jeashAudio = null;
			if(this.jeashRemoveRef != null) this.jeashRemoveRef();
		}
		$s.pop();
	}
	,__setSoundTransform: function(v) {
		$s.push("jeash.media.SoundChannel::__setSoundTransform");
		var $spos = $s.length;
		var $tmp = this.soundTransform = v;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__onSoundSeeked: function(evt) {
		$s.push("jeash.media.SoundChannel::__onSoundSeeked");
		var $spos = $s.length;
		if(this.jeashAudioCurrentLoop >= this.jeashAudioTotalLoops) {
			this.jeashAudio.loop = false;
			this.stop();
		} else this.jeashAudioCurrentLoop++;
		$s.pop();
	}
	,__onSoundChannelFinished: function(evt) {
		$s.push("jeash.media.SoundChannel::__onSoundChannelFinished");
		var $spos = $s.length;
		if(this.jeashAudioCurrentLoop >= this.jeashAudioTotalLoops) {
			this.jeashAudio.removeEventListener("ended",this.__onSoundChannelFinished.$bind(this),false);
			this.jeashAudio.removeEventListener("seeked",this.__onSoundSeeked.$bind(this),false);
			this.jeashAudio = null;
			var evt1 = new jeash.events.Event(jeash.events.Event.COMPLETE);
			evt1.target = this;
			this.dispatchEvent(evt1);
			if(this.jeashRemoveRef != null) this.jeashRemoveRef();
		} else {
			this.jeashAudio.currentTime = this.jeashStartTime;
			this.jeashAudio.play();
		}
		$s.pop();
	}
	,__class__: jeash.media.SoundChannel
	,__properties__: {set_soundTransform:"__setSoundTransform"}
});
if(!haxe.io) haxe.io = {}
haxe.io.Output = $hxClasses["haxe.io.Output"] = function() { }
haxe.io.Output.__name__ = ["haxe","io","Output"];
haxe.io.Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		$s.push("haxe.io.Output::writeByte");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
	}
	,writeBytes: function(s,pos,len) {
		$s.push("haxe.io.Output::writeBytes");
		var $spos = $s.length;
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) throw haxe.io.Error.OutsideBounds;
		while(k > 0) {
			this.writeByte(b[pos]);
			pos++;
			k--;
		}
		$s.pop();
		return len;
		$s.pop();
	}
	,flush: function() {
		$s.push("haxe.io.Output::flush");
		var $spos = $s.length;
		$s.pop();
	}
	,close: function() {
		$s.push("haxe.io.Output::close");
		var $spos = $s.length;
		$s.pop();
	}
	,setEndian: function(b) {
		$s.push("haxe.io.Output::setEndian");
		var $spos = $s.length;
		this.bigEndian = b;
		$s.pop();
		return b;
		$s.pop();
	}
	,write: function(s) {
		$s.push("haxe.io.Output::write");
		var $spos = $s.length;
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) throw haxe.io.Error.Blocked;
			p += k;
			l -= k;
		}
		$s.pop();
	}
	,writeFullBytes: function(s,pos,len) {
		$s.push("haxe.io.Output::writeFullBytes");
		var $spos = $s.length;
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
		$s.pop();
	}
	,writeFloat: function(x) {
		$s.push("haxe.io.Output::writeFloat");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
	}
	,writeDouble: function(x) {
		$s.push("haxe.io.Output::writeDouble");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
	}
	,writeInt8: function(x) {
		$s.push("haxe.io.Output::writeInt8");
		var $spos = $s.length;
		if(x < -128 || x >= 128) throw haxe.io.Error.Overflow;
		this.writeByte(x & 255);
		$s.pop();
	}
	,writeInt16: function(x) {
		$s.push("haxe.io.Output::writeInt16");
		var $spos = $s.length;
		if(x < -32768 || x >= 32768) throw haxe.io.Error.Overflow;
		this.writeUInt16(x & 65535);
		$s.pop();
	}
	,writeUInt16: function(x) {
		$s.push("haxe.io.Output::writeUInt16");
		var $spos = $s.length;
		if(x < 0 || x >= 65536) throw haxe.io.Error.Overflow;
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
		$s.pop();
	}
	,writeInt24: function(x) {
		$s.push("haxe.io.Output::writeInt24");
		var $spos = $s.length;
		if(x < -8388608 || x >= 8388608) throw haxe.io.Error.Overflow;
		this.writeUInt24(x & 16777215);
		$s.pop();
	}
	,writeUInt24: function(x) {
		$s.push("haxe.io.Output::writeUInt24");
		var $spos = $s.length;
		if(x < 0 || x >= 16777216) throw haxe.io.Error.Overflow;
		if(this.bigEndian) {
			this.writeByte(x >> 16);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16);
		}
		$s.pop();
	}
	,writeInt31: function(x) {
		$s.push("haxe.io.Output::writeInt31");
		var $spos = $s.length;
		if(x < -1073741824 || x >= 1073741824) throw haxe.io.Error.Overflow;
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
		$s.pop();
	}
	,writeUInt30: function(x) {
		$s.push("haxe.io.Output::writeUInt30");
		var $spos = $s.length;
		if(x < 0 || x >= 1073741824) throw haxe.io.Error.Overflow;
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
		$s.pop();
	}
	,writeInt32: function(x) {
		$s.push("haxe.io.Output::writeInt32");
		var $spos = $s.length;
		if(this.bigEndian) {
			this.writeByte(haxe.Int32.toInt(x >>> 24));
			this.writeByte(haxe.Int32.toInt(x >>> 16) & 255);
			this.writeByte(haxe.Int32.toInt(x >>> 8) & 255);
			this.writeByte(haxe.Int32.toInt(x & (255 | 0)));
		} else {
			this.writeByte(haxe.Int32.toInt(x & (255 | 0)));
			this.writeByte(haxe.Int32.toInt(x >>> 8) & 255);
			this.writeByte(haxe.Int32.toInt(x >>> 16) & 255);
			this.writeByte(haxe.Int32.toInt(x >>> 24));
		}
		$s.pop();
	}
	,prepare: function(nbytes) {
		$s.push("haxe.io.Output::prepare");
		var $spos = $s.length;
		$s.pop();
	}
	,writeInput: function(i,bufsize) {
		$s.push("haxe.io.Output::writeInput");
		var $spos = $s.length;
		if(bufsize == null) bufsize = 4096;
		var buf = haxe.io.Bytes.alloc(bufsize);
		try {
			while(true) {
				var len = i.readBytes(buf,0,bufsize);
				if(len == 0) throw haxe.io.Error.Blocked;
				var p = 0;
				while(len > 0) {
					var k = this.writeBytes(buf,p,len);
					if(k == 0) throw haxe.io.Error.Blocked;
					p += k;
					len -= k;
				}
			}
		} catch( e ) {
			if( js.Boot.__instanceof(e,haxe.io.Eof) ) {
				$e = [];
				while($s.length >= $spos) $e.unshift($s.pop());
				$s.push($e[0]);
			} else throw(e);
		}
		$s.pop();
	}
	,writeString: function(s) {
		$s.push("haxe.io.Output::writeString");
		var $spos = $s.length;
		var b = haxe.io.Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
		$s.pop();
	}
	,__class__: haxe.io.Output
	,__properties__: {set_bigEndian:"setEndian"}
}
haxe.io.BytesOutput = $hxClasses["haxe.io.BytesOutput"] = function() {
	$s.push("haxe.io.BytesOutput::new");
	var $spos = $s.length;
	this.b = new haxe.io.BytesBuffer();
	$s.pop();
}
haxe.io.BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe.io.BytesOutput.__super__ = haxe.io.Output;
haxe.io.BytesOutput.prototype = $extend(haxe.io.Output.prototype,{
	b: null
	,writeByte: function(c) {
		$s.push("haxe.io.BytesOutput::writeByte");
		var $spos = $s.length;
		this.b.b.push(c);
		$s.pop();
	}
	,writeBytes: function(buf,pos,len) {
		$s.push("haxe.io.BytesOutput::writeBytes");
		var $spos = $s.length;
		this.b.addBytes(buf,pos,len);
		$s.pop();
		return len;
		$s.pop();
	}
	,getBytes: function() {
		$s.push("haxe.io.BytesOutput::getBytes");
		var $spos = $s.length;
		var $tmp = this.b.getBytes();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: haxe.io.BytesOutput
});
de.polygonal.core.fmt.NumberFormat = $hxClasses["de.polygonal.core.fmt.NumberFormat"] = function() { }
de.polygonal.core.fmt.NumberFormat.__name__ = ["de","polygonal","core","fmt","NumberFormat"];
de.polygonal.core.fmt.NumberFormat.toBin = function(x,byteDelimiter,leadingZeros) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toBin");
	var $spos = $s.length;
	if(leadingZeros == null) leadingZeros = false;
	if(byteDelimiter == null) byteDelimiter = "";
	var n = 32 - de.polygonal.ds.Bits.nlz(x);
	var s = (x & 1) > 0?"1":"0";
	x >>= 1;
	var _g = 1;
	while(_g < n) {
		var i = _g++;
		s = ((x & 1) > 0?"1":"0") + ((i & 7) == 0?byteDelimiter:"") + s;
		x >>= 1;
	}
	if(leadingZeros) {
		var _g1 = 0, _g = 32 - n;
		while(_g1 < _g) {
			var i = _g1++;
			s = "0" + s;
		}
	}
	$s.pop();
	return s;
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.toHex = function(x) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toHex");
	var $spos = $s.length;
	if(x == 0) {
		$s.pop();
		return "0";
	}
	var s = "";
	var a = de.polygonal.core.fmt.NumberFormat._hexLUT;
	while(x != 0) {
		s = a[x & 15] + s;
		x >>>= 4;
	}
	$s.pop();
	return s;
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.toOct = function(x) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toOct");
	var $spos = $s.length;
	var s = "";
	var t = x;
	while(t > 0) {
		var r = t & 7;
		s = r + s;
		t >>= 3;
	}
	$s.pop();
	return s;
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.toRadix = function(x,radix) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toRadix");
	var $spos = $s.length;
	var s = "";
	var t = x;
	while(t > 0) {
		var r = t % radix;
		s = r + s;
		t = t / radix;
	}
	$s.pop();
	return s;
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.toFixed = function(x,decimalPlaces) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toFixed");
	var $spos = $s.length;
	if(Math.isNaN(x)) {
		$s.pop();
		return "NaN";
	} else {
		var t = de.polygonal.core.math.Mathematics.exp(10,decimalPlaces);
		var s = Std.string(Std["int"](x * t) / t);
		var i = s.indexOf(".");
		if(i != -1) {
			var _g = s.substr(i + 1).length;
			while(_g < decimalPlaces) {
				var i1 = _g++;
				s += "0";
			}
		} else {
			s += ".";
			var _g = 0;
			while(_g < decimalPlaces) {
				var i1 = _g++;
				s += "0";
			}
		}
		$s.pop();
		return s;
	}
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.toMMSS = function(x) {
	$s.push("de.polygonal.core.fmt.NumberFormat::toMMSS");
	var $spos = $s.length;
	x = Std["int"](x * 1000);
	var ms = x % 1000;
	var r = (x - ms) / 1000;
	var tmp = r % 60;
	var $tmp = ("0" + (r - tmp) / 60).substr(-2) + ":" + ("0" + tmp).substr(-2);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.groupDigits = function(x,thousandsSeparator) {
	$s.push("de.polygonal.core.fmt.NumberFormat::groupDigits");
	var $spos = $s.length;
	if(thousandsSeparator == null) thousandsSeparator = ".";
	var n = x;
	var c = 0;
	while(n > 1) {
		n /= 10;
		c++;
	}
	c = c / 3;
	var source = Std.string(x);
	if(c == 0) {
		$s.pop();
		return source;
	} else {
		var target = "";
		var i = 0;
		var j = source.length - 1;
		while(j >= 0) {
			if(i == 3) {
				target = source.charAt(j--) + thousandsSeparator + target;
				i = 0;
				c--;
			} else target = source.charAt(j--) + target;
			i++;
		}
		$s.pop();
		return target;
	}
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.centToEuro = function(x,decimalSeparator,thousandsSeparator) {
	$s.push("de.polygonal.core.fmt.NumberFormat::centToEuro");
	var $spos = $s.length;
	if(thousandsSeparator == null) thousandsSeparator = ".";
	if(decimalSeparator == null) decimalSeparator = ",";
	var euro = Std["int"](x / 100);
	if(euro == 0) {
		if(x < 10) {
			var $tmp = "0" + decimalSeparator + "0" + x;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = "0" + decimalSeparator + x;
			$s.pop();
			return $tmp;
		}
	} else {
		var str;
		var cent = x - euro * 100;
		if(cent < 10) str = decimalSeparator + "0" + cent; else str = decimalSeparator + cent;
		if(euro >= 1000) {
			var num = euro;
			var add;
			while(num >= 1000) {
				num = Std["int"](euro / 1000);
				add = euro - num * 1000;
				if(add < 10) str = thousandsSeparator + "00" + add + str; else if(add < 100) str = thousandsSeparator + "0" + add + str; else str = thousandsSeparator + add + str;
				euro = num;
			}
			var $tmp = str = num + str;
			$s.pop();
			return $tmp;
		} else str = euro + str;
		$s.pop();
		return str;
	}
	$s.pop();
}
de.polygonal.core.fmt.NumberFormat.prototype = {
	__class__: de.polygonal.core.fmt.NumberFormat
}
com.wighawag.remote.service.ServiceError = $hxClasses["remote.service.ServiceError"] = function() { }
com.wighawag.remote.service.ServiceError.__name__ = ["com","wighawag","remote","service","ServiceError"];
com.wighawag.remote.service.ServiceError.prototype = {
	text: null
	,__class__: com.wighawag.remote.service.ServiceError
}
com.wighawag.remote.service.ErrorMessage = $hxClasses["remote.service.ErrorMessage"] = function(text) {
	$s.push("remote.service.ErrorMessage::new");
	var $spos = $s.length;
	this.text = text;
	$s.pop();
}
com.wighawag.remote.service.ErrorMessage.__name__ = ["com","wighawag","remote","service","ErrorMessage"];
com.wighawag.remote.service.ErrorMessage.__interfaces__ = [com.wighawag.remote.service.ServiceError];
com.wighawag.remote.service.ErrorMessage.prototype = {
	text: null
	,__class__: com.wighawag.remote.service.ErrorMessage
}
com.wighawag.game.engine.core.Entity = $hxClasses["com.wighawag.game.engine.core.Entity"] = function() { }
com.wighawag.game.engine.core.Entity.__name__ = ["com","wighawag","game","engine","core","Entity"];
com.wighawag.game.engine.core.Entity.__interfaces__ = [de.polygonal.ds.Hashable,com.wighawag.game.engine.core.Updatable];
com.wighawag.game.engine.core.Entity.prototype = {
	state: null
	,stateLifeTime: null
	,type: null
	,__class__: com.wighawag.game.engine.core.Entity
}
if(!com.wighawag.game.engine.world) com.wighawag.game.engine.world = {}
if(!com.wighawag.game.engine.world.twodimensions) com.wighawag.game.engine.world.twodimensions = {}
if(!com.wighawag.game.engine.world.twodimensions.core) com.wighawag.game.engine.world.twodimensions.core = {}
com.wighawag.game.engine.world.twodimensions.core.Entity2D = $hxClasses["com.wighawag.game.engine.world.twodimensions.core.Entity2D"] = function() { }
com.wighawag.game.engine.world.twodimensions.core.Entity2D.__name__ = ["com","wighawag","game","engine","world","twodimensions","core","Entity2D"];
com.wighawag.game.engine.world.twodimensions.core.Entity2D.__interfaces__ = [com.wighawag.game.engine.core.Entity];
com.wighawag.game.engine.world.twodimensions.core.Entity2D.prototype = {
	area: null
	,rotation: null
	,moveTo: null
	,__class__: com.wighawag.game.engine.world.twodimensions.core.Entity2D
}
de.polygonal.ds.Array2 = $hxClasses["de.polygonal.ds.Array2"] = function(width,height) {
	$s.push("de.polygonal.ds.Array2::new");
	var $spos = $s.length;
	if(true != (width >= 2 && height >= 2)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("invalid size (width:%d, height:%d)",[width,height]),{ fileName : "Array2.hx", lineNumber : 76, className : "de.polygonal.ds.Array2", methodName : "new"}); else null;
	this._w = width;
	this._h = height;
	this._a = de.polygonal.ds.ArrayUtil.alloc(this._w * this._h);
	this._iterator = null;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.Array2.__name__ = ["de","polygonal","ds","Array2"];
de.polygonal.ds.Array2.__interfaces__ = [de.polygonal.ds.Collection];
de.polygonal.ds.Array2.prototype = {
	key: null
	,reuseIterator: null
	,_a: null
	,_w: null
	,_h: null
	,_iterator: null
	,get: function(x,y) {
		$s.push("de.polygonal.ds.Array2::get");
		var $spos = $s.length;
		if(true != (x >= 0 && x < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[x]),{ fileName : "Array2.hx", lineNumber : 95, className : "de.polygonal.ds.Array2", methodName : "get"}); else null;
		if(true != (y >= 0 && y < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[y]),{ fileName : "Array2.hx", lineNumber : 96, className : "de.polygonal.ds.Array2", methodName : "get"}); else null;
		var $tmp = this._a[y * this._w + x];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getAt: function(cell) {
		$s.push("de.polygonal.ds.Array2::getAt");
		var $spos = $s.length;
		if(true != (cell != null)) throw new de.polygonal.ASE("cell is null",{ fileName : "Array2.hx", lineNumber : 111, className : "de.polygonal.ds.Array2", methodName : "getAt"}); else null;
		var $tmp = this._a[cell.y * this._w + cell.x];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(x,y,val) {
		$s.push("de.polygonal.ds.Array2::set");
		var $spos = $s.length;
		if(true != (x >= 0 && x < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[x]),{ fileName : "Array2.hx", lineNumber : 125, className : "de.polygonal.ds.Array2", methodName : "set"}); else null;
		if(true != (y >= 0 && y < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[y]),{ fileName : "Array2.hx", lineNumber : 126, className : "de.polygonal.ds.Array2", methodName : "set"}); else null;
		this._a[y * this._w + x] = val;
		$s.pop();
	}
	,getAtIndex: function(i) {
		$s.push("de.polygonal.ds.Array2::getAtIndex");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._w * this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Array2.hx", lineNumber : 140, className : "de.polygonal.ds.Array2", methodName : "getAtIndex"}); else null;
		var $tmp = this._a[Std["int"](i / this._w) * this._w + i % this._w];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setAtIndex: function(i,x) {
		$s.push("de.polygonal.ds.Array2::setAtIndex");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._w * this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Array2.hx", lineNumber : 154, className : "de.polygonal.ds.Array2", methodName : "setAtIndex"}); else null;
		this._a[Std["int"](i / this._w) * this._w + i % this._w] = x;
		$s.pop();
	}
	,getW: function() {
		$s.push("de.polygonal.ds.Array2::getW");
		var $spos = $s.length;
		var $tmp = this._w;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setW: function(x) {
		$s.push("de.polygonal.ds.Array2::setW");
		var $spos = $s.length;
		this.resize(x,this._h);
		$s.pop();
	}
	,getH: function() {
		$s.push("de.polygonal.ds.Array2::getH");
		var $spos = $s.length;
		var $tmp = this._h;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setH: function(x) {
		$s.push("de.polygonal.ds.Array2::setH");
		var $spos = $s.length;
		this.resize(this._w,x);
		$s.pop();
	}
	,getIndex: function(x,y) {
		$s.push("de.polygonal.ds.Array2::getIndex");
		var $spos = $s.length;
		var $tmp = y * this._w + x;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,indexOf: function(x) {
		$s.push("de.polygonal.ds.Array2::indexOf");
		var $spos = $s.length;
		var i = 0;
		var j = this._w * this._h;
		while(i < j) {
			if(this._a[i] == x) break;
			i++;
		}
		var $tmp = i == j?-1:i;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,inRange: function(x,y) {
		$s.push("de.polygonal.ds.Array2::inRange");
		var $spos = $s.length;
		var $tmp = x >= 0 && x < this._w && y >= 0 && y < this._h;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,cellOf: function(x,cell) {
		$s.push("de.polygonal.ds.Array2::cellOf");
		var $spos = $s.length;
		if(true != (cell != null)) throw new de.polygonal.ASE("cell != null",{ fileName : "Array2.hx", lineNumber : 245, className : "de.polygonal.ds.Array2", methodName : "cellOf"}); else null;
		var i = this.indexOf(x);
		if(i == -1) {
			$s.pop();
			return null;
		} else {
			var $tmp = (function($this) {
				var $r;
				if(true != (i >= 0 && i < $this._w * $this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Array2.hx", lineNumber : 266, className : "de.polygonal.ds.Array2", methodName : "indexToCell"}); else null;
				if(true != (cell != null)) throw new de.polygonal.ASE("cell is null",{ fileName : "Array2.hx", lineNumber : 267, className : "de.polygonal.ds.Array2", methodName : "indexToCell"}); else null;
				cell.y = Std["int"](i / $this._w);
				cell.x = i % $this._w;
				$r = cell;
				return $r;
			}(this));
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,indexToCell: function(i,cell) {
		$s.push("de.polygonal.ds.Array2::indexToCell");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._w * this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("index out of range (%d)",[i]),{ fileName : "Array2.hx", lineNumber : 266, className : "de.polygonal.ds.Array2", methodName : "indexToCell"}); else null;
		if(true != (cell != null)) throw new de.polygonal.ASE("cell is null",{ fileName : "Array2.hx", lineNumber : 267, className : "de.polygonal.ds.Array2", methodName : "indexToCell"}); else null;
		cell.y = Std["int"](i / this._w);
		cell.x = i % this._w;
		$s.pop();
		return cell;
		$s.pop();
	}
	,cellToIndex: function(cell) {
		$s.push("de.polygonal.ds.Array2::cellToIndex");
		var $spos = $s.length;
		if(true != (cell != null)) throw new de.polygonal.ASE("cell != null",{ fileName : "Array2.hx", lineNumber : 284, className : "de.polygonal.ds.Array2", methodName : "cellToIndex"}); else null;
		if(true != (cell.x >= 0 && cell.x < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[cell.x]),{ fileName : "Array2.hx", lineNumber : 285, className : "de.polygonal.ds.Array2", methodName : "cellToIndex"}); else null;
		if(true != (cell.y >= 0 && cell.y < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[cell.y]),{ fileName : "Array2.hx", lineNumber : 286, className : "de.polygonal.ds.Array2", methodName : "cellToIndex"}); else null;
		var $tmp = cell.y * this._w + cell.x;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getRow: function(y,output) {
		$s.push("de.polygonal.ds.Array2::getRow");
		var $spos = $s.length;
		if(true != (y >= 0 && y < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[y]),{ fileName : "Array2.hx", lineNumber : 302, className : "de.polygonal.ds.Array2", methodName : "getRow"}); else null;
		if(true != (output != null)) throw new de.polygonal.ASE("output is null",{ fileName : "Array2.hx", lineNumber : 303, className : "de.polygonal.ds.Array2", methodName : "getRow"}); else null;
		var offset = y * this._w;
		var _g1 = 0, _g = this._w;
		while(_g1 < _g) {
			var x = _g1++;
			output[x] = this._a[offset + x];
		}
		$s.pop();
		return output;
		$s.pop();
	}
	,setRow: function(y,input) {
		$s.push("de.polygonal.ds.Array2::setRow");
		var $spos = $s.length;
		if(true != (y >= 0 && y < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[y]),{ fileName : "Array2.hx", lineNumber : 320, className : "de.polygonal.ds.Array2", methodName : "setRow"}); else null;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 321, className : "de.polygonal.ds.Array2", methodName : "setRow"}); else null;
		if(true != input.length >= this._w) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 322, className : "de.polygonal.ds.Array2", methodName : "setRow"}); else null;
		var offset = y * this._w;
		var _g1 = 0, _g = this._w;
		while(_g1 < _g) {
			var x = _g1++;
			this._a[offset + x] = input[x];
		}
		$s.pop();
	}
	,getCol: function(x,output) {
		$s.push("de.polygonal.ds.Array2::getCol");
		var $spos = $s.length;
		if(true != (x >= 0 && x < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[x]),{ fileName : "Array2.hx", lineNumber : 340, className : "de.polygonal.ds.Array2", methodName : "getCol"}); else null;
		if(true != (output != null)) throw new de.polygonal.ASE("output is null",{ fileName : "Array2.hx", lineNumber : 341, className : "de.polygonal.ds.Array2", methodName : "getCol"}); else null;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var i = _g1++;
			output[i] = this._a[i * this._w + x];
		}
		$s.pop();
		return output;
		$s.pop();
	}
	,setCol: function(x,input) {
		$s.push("de.polygonal.ds.Array2::setCol");
		var $spos = $s.length;
		if(true != (x >= 0 && x < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[x]),{ fileName : "Array2.hx", lineNumber : 358, className : "de.polygonal.ds.Array2", methodName : "setCol"}); else null;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 359, className : "de.polygonal.ds.Array2", methodName : "setCol"}); else null;
		if(true != input.length >= this._h) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 360, className : "de.polygonal.ds.Array2", methodName : "setCol"}); else null;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var y = _g1++;
			this._a[y * this._w + x] = input[y];
		}
		$s.pop();
	}
	,assign: function(C,args) {
		$s.push("de.polygonal.ds.Array2::assign");
		var $spos = $s.length;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = de.polygonal.core.util.Instance.create(C,args);
		}
		$s.pop();
	}
	,fill: function(x) {
		$s.push("de.polygonal.ds.Array2::fill");
		var $spos = $s.length;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = x;
		}
		$s.pop();
	}
	,walk: function(process) {
		$s.push("de.polygonal.ds.Array2::walk");
		var $spos = $s.length;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var y = _g1++;
			var _g3 = 0, _g2 = this._w;
			while(_g3 < _g2) {
				var x = _g3++;
				var i = y * this._w + x;
				this._a[i] = process(this._a[i],x,y);
			}
		}
		$s.pop();
	}
	,resize: function(w,h) {
		$s.push("de.polygonal.ds.Array2::resize");
		var $spos = $s.length;
		if(true != (w >= 2 && h >= 2)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("invalid size (w:%d, h:%d)",[w,h]),{ fileName : "Array2.hx", lineNumber : 414, className : "de.polygonal.ds.Array2", methodName : "resize"}); else null;
		if(w == this._w && h == this._h) {
			$s.pop();
			return;
		}
		var t = this._a;
		this._a = de.polygonal.ds.ArrayUtil.alloc(w * h);
		var minX = w < this._w?w:this._w;
		var minY = h < this._h?h:this._h;
		var _g = 0;
		while(_g < minY) {
			var y = _g++;
			var t1 = y * w;
			var t2 = y * this._w;
			var _g1 = 0;
			while(_g1 < minX) {
				var x = _g1++;
				this._a[t1 + x] = t[t2 + x];
			}
		}
		this._w = w;
		this._h = h;
		$s.pop();
	}
	,shiftW: function() {
		$s.push("de.polygonal.ds.Array2::shiftW");
		var $spos = $s.length;
		var t, k;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var y = _g1++;
			k = y * this._w;
			t = this._a[k];
			var _g3 = 1, _g2 = this._w;
			while(_g3 < _g2) {
				var x = _g3++;
				this._a[k + x - 1] = this._a[k + x];
			}
			this._a[k + this._w - 1] = t;
		}
		$s.pop();
	}
	,shiftE: function() {
		$s.push("de.polygonal.ds.Array2::shiftE");
		var $spos = $s.length;
		var t, x, k;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var y = _g1++;
			k = y * this._w;
			t = this._a[k + this._w - 1];
			x = this._w - 1;
			while(x-- > 0) this._a[k + x + 1] = this._a[k + x];
			this._a[k] = t;
		}
		$s.pop();
	}
	,shiftN: function() {
		$s.push("de.polygonal.ds.Array2::shiftN");
		var $spos = $s.length;
		var t;
		var k = this._h - 1;
		var l = (this._h - 1) * this._w;
		var _g1 = 0, _g = this._w;
		while(_g1 < _g) {
			var x = _g1++;
			t = this._a[x];
			var _g2 = 0;
			while(_g2 < k) {
				var y = _g2++;
				this._a[y * this._w + x] = this._a[(y + 1) * this._w + x];
			}
			this._a[l + x] = t;
		}
		$s.pop();
	}
	,shiftS: function() {
		$s.push("de.polygonal.ds.Array2::shiftS");
		var $spos = $s.length;
		var t, k, y;
		var k1 = this._h - 1;
		var l = k1 * this._w;
		var _g1 = 0, _g = this._w;
		while(_g1 < _g) {
			var x = _g1++;
			t = this._a[l + x];
			y = k1;
			while(y-- > 0) this._a[(y + 1) * this._w + x] = this._a[y * this._w + x];
			this._a[x] = t;
		}
		$s.pop();
	}
	,swap: function(x0,y0,x1,y1) {
		$s.push("de.polygonal.ds.Array2::swap");
		var $spos = $s.length;
		if(true != (x0 >= 0 && x0 < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x0 index out of range (%d)",[x0]),{ fileName : "Array2.hx", lineNumber : 520, className : "de.polygonal.ds.Array2", methodName : "swap"}); else null;
		if(true != (y0 >= 0 && y0 < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y0 index out of range (%d)",[y0]),{ fileName : "Array2.hx", lineNumber : 521, className : "de.polygonal.ds.Array2", methodName : "swap"}); else null;
		if(true != (x1 >= 0 && x1 < this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x1 index out of range (%d)",[x1]),{ fileName : "Array2.hx", lineNumber : 522, className : "de.polygonal.ds.Array2", methodName : "swap"}); else null;
		if(true != (y1 >= 0 && y1 < this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y1 index out of range (%d)",[y1]),{ fileName : "Array2.hx", lineNumber : 523, className : "de.polygonal.ds.Array2", methodName : "swap"}); else null;
		if(true != !(x0 == x1 && y0 == y1)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("source indices equal target indices (x: %d, y: %d)",[x0,y0]),{ fileName : "Array2.hx", lineNumber : 524, className : "de.polygonal.ds.Array2", methodName : "swap"}); else null;
		var i = y0 * this._w + x0;
		var j = y1 * this._w + x1;
		var t = this._a[i];
		this._a[i] = this._a[j];
		this._a[j] = t;
		$s.pop();
	}
	,appendRow: function(input) {
		$s.push("de.polygonal.ds.Array2::appendRow");
		var $spos = $s.length;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 542, className : "de.polygonal.ds.Array2", methodName : "appendRow"}); else null;
		if(true != input.length >= this._w) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 543, className : "de.polygonal.ds.Array2", methodName : "appendRow"}); else null;
		var t = this._w * this._h++;
		var _g1 = 0, _g = this._w;
		while(_g1 < _g) {
			var x = _g1++;
			this._a[x + t] = input[x];
		}
		$s.pop();
	}
	,appendCol: function(input) {
		$s.push("de.polygonal.ds.Array2::appendCol");
		var $spos = $s.length;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 558, className : "de.polygonal.ds.Array2", methodName : "appendCol"}); else null;
		if(true != input.length >= this._h) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 559, className : "de.polygonal.ds.Array2", methodName : "appendCol"}); else null;
		var l = this._w * this._h + this._h;
		var i = this._h - 1;
		var j = this._h;
		var x = this._w;
		var y = l;
		while(y-- > 0) if(++x > this._w) {
			x = 0;
			j--;
			this._a[y] = input[i--];
		} else this._a[y] = this._a[y - j];
		this._w++;
		$s.pop();
	}
	,prependRow: function(input) {
		$s.push("de.polygonal.ds.Array2::prependRow");
		var $spos = $s.length;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 589, className : "de.polygonal.ds.Array2", methodName : "prependRow"}); else null;
		if(true != input.length >= this._w) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 590, className : "de.polygonal.ds.Array2", methodName : "prependRow"}); else null;
		this._h++;
		var y = this._w * this._h;
		while(y-- > this._w) this._a[y] = this._a[y - this._w];
		y++;
		while(y-- > 0) this._a[y] = input[y];
		$s.pop();
	}
	,prependCol: function(input) {
		$s.push("de.polygonal.ds.Array2::prependCol");
		var $spos = $s.length;
		if(true != (input != null)) throw new de.polygonal.ASE("input is null",{ fileName : "Array2.hx", lineNumber : 612, className : "de.polygonal.ds.Array2", methodName : "prependCol"}); else null;
		if(true != input.length >= this._h) throw new de.polygonal.ASE("insufficient input values",{ fileName : "Array2.hx", lineNumber : 613, className : "de.polygonal.ds.Array2", methodName : "prependCol"}); else null;
		var l = this._w * this._h + this._h;
		var i = this._h - 1;
		var j = this._h;
		var x = 0;
		var y = l;
		while(y-- > 0) if(++x > this._w) {
			x = 0;
			j--;
			this._a[y] = input[i--];
		} else this._a[y] = this._a[y - j];
		this._w++;
		$s.pop();
	}
	,transpose: function() {
		$s.push("de.polygonal.ds.Array2::transpose");
		var $spos = $s.length;
		if(this._w == this._h) {
			var _g1 = 0, _g = this._h;
			while(_g1 < _g) {
				var y = _g1++;
				var _g3 = y + 1, _g2 = this._w;
				while(_g3 < _g2) {
					var x = _g3++;
					this.swap(x,y,y,x);
				}
			}
		} else {
			var t = new Array();
			var _g1 = 0, _g = this._h;
			while(_g1 < _g) {
				var y = _g1++;
				var _g3 = 0, _g2 = this._w;
				while(_g3 < _g2) {
					var x = _g3++;
					t[x * this._h + y] = (function($this) {
						var $r;
						if(true != (x >= 0 && x < $this._w)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("x index out of range (%d)",[x]),{ fileName : "Array2.hx", lineNumber : 95, className : "de.polygonal.ds.Array2", methodName : "get"}); else null;
						if(true != (y >= 0 && y < $this._h)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("y index out of range (%d)",[y]),{ fileName : "Array2.hx", lineNumber : 96, className : "de.polygonal.ds.Array2", methodName : "get"}); else null;
						$r = $this._a[y * $this._w + x];
						return $r;
					}(this));
				}
			}
			this._a = t;
			this._w ^= this._h;
			this._h ^= this._w;
			this._w ^= this._h;
		}
		$s.pop();
	}
	,getArray: function() {
		$s.push("de.polygonal.ds.Array2::getArray");
		var $spos = $s.length;
		var $tmp = this._a;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setNestedArray: function(a) {
		$s.push("de.polygonal.ds.Array2::setNestedArray");
		var $spos = $s.length;
		if(true != (a.length == this._h && a[0] != null && a[0].length == this._w)) throw new de.polygonal.ASE("invalid input",{ fileName : "Array2.hx", lineNumber : 677, className : "de.polygonal.ds.Array2", methodName : "setNestedArray"}); else null;
		var w = a[0].length;
		var _g1 = 0, _g = a.length;
		while(_g1 < _g) {
			var y = _g1++;
			var row = a[y];
			var _g2 = 0;
			while(_g2 < w) {
				var x = _g2++;
				this._a[y * this._w + x] = row[x];
			}
		}
		$s.pop();
	}
	,shuffle: function(rval) {
		$s.push("de.polygonal.ds.Array2::shuffle");
		var $spos = $s.length;
		var s = this._w * this._h;
		if(rval == null) {
			var m = Math;
			while(--s > 1) {
				var i = Std["int"](m.random() * s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		} else {
			if(true != rval._size >= this._w * this._h) throw new de.polygonal.ASE("insufficient random values",{ fileName : "Array2.hx", lineNumber : 713, className : "de.polygonal.ds.Array2", methodName : "shuffle"}); else null;
			var j = 0;
			while(--s > 1) {
				var i = Std["int"](rval.get(j++) * s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.Array2::toString");
		var $spos = $s.length;
		var l = 0;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			var s = Std.string(this._a[i]);
			l = Std["int"](Math.max(s.length,l));
		}
		var s = de.polygonal.core.fmt.Sprintf.format("{Array2, %dx%d}",[this._w,this._h]);
		s += "\n|<\n";
		var offset, value;
		var _g1 = 0, _g = this._h;
		while(_g1 < _g) {
			var y = _g1++;
			s += "  ";
			offset = y * this._w;
			var _g3 = 0, _g2 = this._w;
			while(_g3 < _g2) {
				var x = _g3++;
				s += de.polygonal.core.fmt.Sprintf.format("[%" + l + "s]",[Std.string(this._a[offset + x])]);
			}
			s += "\n";
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.Array2::free");
		var $spos = $s.length;
		var NULL = null;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = NULL;
		}
		this._a = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(x) {
		$s.push("de.polygonal.ds.Array2::contains");
		var $spos = $s.length;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._a[i] == x) {
				$s.pop();
				return true;
			}
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.Array2::remove");
		var $spos = $s.length;
		var found = false;
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._a[i] == x) {
				this._a[i] = null;
				found = true;
			}
		}
		$s.pop();
		return found;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.Array2::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		var NULL = null;
		var _g1 = 0, _g = this._a.length;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = NULL;
		}
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.Array2::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.Array2Iterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.Array2Iterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.Array2::size");
		var $spos = $s.length;
		var $tmp = this._w * this._h;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.Array2::isEmpty");
		var $spos = $s.length;
		$s.pop();
		return false;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.Array2::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._w * this._h);
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			a[i] = this._a[i];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.Array2::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._w * this._h);
		var _g1 = 0, _g = this._w * this._h;
		while(_g1 < _g) {
			var i = _g1++;
			a.set(a._size,this._a[i]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.Array2::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var copy = new de.polygonal.ds.Array2(this._w,this._h);
		if(assign) {
			var _g1 = 0, _g = this._w * this._h;
			while(_g1 < _g) {
				var i = _g1++;
				copy._a[i] = this._a[i];
			}
		} else if(copier == null) {
			var c = null;
			var _g1 = 0, _g = this._w * this._h;
			while(_g1 < _g) {
				var i = _g1++;
				if(true != Std["is"](this._a[i],de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[this._a[i]]),{ fileName : "Array2.hx", lineNumber : 930, className : "de.polygonal.ds.Array2", methodName : "clone"}); else null;
				c = this._a[i];
				copy._a[i] = c.clone();
			}
		} else {
			var _g1 = 0, _g = this._w * this._h;
			while(_g1 < _g) {
				var i = _g1++;
				copy._a[i] = copier(this._a[i]);
			}
		}
		$s.pop();
		return copy;
		$s.pop();
	}
	,__get: function(i) {
		$s.push("de.polygonal.ds.Array2::__get");
		var $spos = $s.length;
		var $tmp = this._a[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__set: function(i,x) {
		$s.push("de.polygonal.ds.Array2::__set");
		var $spos = $s.length;
		this._a[i] = x;
		$s.pop();
	}
	,__class__: de.polygonal.ds.Array2
}
de.polygonal.ds.Array2Iterator = $hxClasses["de.polygonal.ds.Array2Iterator"] = function(f) {
	$s.push("de.polygonal.ds.Array2Iterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._a = this._f._a;
		this._s = this.__size(this._f);
		this._i = 0;
		this;
	}
	$s.pop();
}
de.polygonal.ds.Array2Iterator.__name__ = ["de","polygonal","ds","Array2Iterator"];
de.polygonal.ds.Array2Iterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.Array2Iterator.prototype = {
	_f: null
	,_a: null
	,_i: null
	,_s: null
	,reset: function() {
		$s.push("de.polygonal.ds.Array2Iterator::reset");
		var $spos = $s.length;
		this._a = this._f._a;
		this._s = this.__size(this._f);
		this._i = 0;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.Array2Iterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.Array2Iterator::next");
		var $spos = $s.length;
		var $tmp = this._a[this._i++];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.Array2Iterator::remove");
		var $spos = $s.length;
		if(true != this._i > 0) throw new de.polygonal.ASE("call next() before removing an element",{ fileName : "Array2.hx", lineNumber : 988, className : "de.polygonal.ds.Array2Iterator", methodName : "remove"}); else null;
		this._a[this._i - 1] = null;
		$s.pop();
	}
	,__a: function(f) {
		$s.push("de.polygonal.ds.Array2Iterator::__a");
		var $spos = $s.length;
		var $tmp = f._a;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__size: function(f) {
		$s.push("de.polygonal.ds.Array2Iterator::__size");
		var $spos = $s.length;
		var $tmp = f._w * f._h;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.Array2Iterator
}
de.polygonal.ds.Array2Cell = $hxClasses["de.polygonal.ds.Array2Cell"] = function(x,y) {
	$s.push("de.polygonal.ds.Array2Cell::new");
	var $spos = $s.length;
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.x = x;
	this.y = y;
	$s.pop();
}
de.polygonal.ds.Array2Cell.__name__ = ["de","polygonal","ds","Array2Cell"];
de.polygonal.ds.Array2Cell.prototype = {
	x: null
	,y: null
	,__class__: de.polygonal.ds.Array2Cell
}
haxe.io.Bytes = $hxClasses["haxe.io.Bytes"] = function(length,b) {
	$s.push("haxe.io.Bytes::new");
	var $spos = $s.length;
	this.length = length;
	this.b = b;
	$s.pop();
}
haxe.io.Bytes.__name__ = ["haxe","io","Bytes"];
haxe.io.Bytes.alloc = function(length) {
	$s.push("haxe.io.Bytes::alloc");
	var $spos = $s.length;
	var a = new Array();
	var _g = 0;
	while(_g < length) {
		var i = _g++;
		a.push(0);
	}
	var $tmp = new haxe.io.Bytes(length,a);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.io.Bytes.ofString = function(s) {
	$s.push("haxe.io.Bytes::ofString");
	var $spos = $s.length;
	var a = new Array();
	var _g1 = 0, _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c = s.cca(i);
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	var $tmp = new haxe.io.Bytes(a.length,a);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.io.Bytes.ofData = function(b) {
	$s.push("haxe.io.Bytes::ofData");
	var $spos = $s.length;
	var $tmp = new haxe.io.Bytes(b.length,b);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.io.Bytes.prototype = {
	length: null
	,b: null
	,get: function(pos) {
		$s.push("haxe.io.Bytes::get");
		var $spos = $s.length;
		var $tmp = this.b[pos];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(pos,v) {
		$s.push("haxe.io.Bytes::set");
		var $spos = $s.length;
		this.b[pos] = v & 255;
		$s.pop();
	}
	,blit: function(pos,src,srcpos,len) {
		$s.push("haxe.io.Bytes::blit");
		var $spos = $s.length;
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw haxe.io.Error.OutsideBounds;
		var b1 = this.b;
		var b2 = src.b;
		if(b1 == b2 && pos > srcpos) {
			var i = len;
			while(i > 0) {
				i--;
				b1[i + pos] = b2[i + srcpos];
			}
			$s.pop();
			return;
		}
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			b1[i + pos] = b2[i + srcpos];
		}
		$s.pop();
	}
	,sub: function(pos,len) {
		$s.push("haxe.io.Bytes::sub");
		var $spos = $s.length;
		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
		var $tmp = new haxe.io.Bytes(len,this.b.slice(pos,pos + len));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,compare: function(other) {
		$s.push("haxe.io.Bytes::compare");
		var $spos = $s.length;
		var b1 = this.b;
		var b2 = other.b;
		var len = this.length < other.length?this.length:other.length;
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			if(b1[i] != b2[i]) {
				var $tmp = b1[i] - b2[i];
				$s.pop();
				return $tmp;
			}
		}
		var $tmp = this.length - other.length;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readString: function(pos,len) {
		$s.push("haxe.io.Bytes::readString");
		var $spos = $s.length;
		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c2 = b[i++];
				var c3 = b[i++];
				s += fcc((c & 15) << 18 | (c2 & 127) << 12 | c3 << 6 & 127 | b[i++] & 127);
			}
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,toString: function() {
		$s.push("haxe.io.Bytes::toString");
		var $spos = $s.length;
		var $tmp = this.readString(0,this.length);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toHex: function() {
		$s.push("haxe.io.Bytes::toHex");
		var $spos = $s.length;
		var s = new StringBuf();
		var chars = [];
		var str = "0123456789abcdef";
		var _g1 = 0, _g = str.length;
		while(_g1 < _g) {
			var i = _g1++;
			chars.push(str.charCodeAt(i));
		}
		var _g1 = 0, _g = this.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = this.b[i];
			s.b[s.b.length] = String.fromCharCode(chars[c >> 4]);
			s.b[s.b.length] = String.fromCharCode(chars[c & 15]);
		}
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getData: function() {
		$s.push("haxe.io.Bytes::getData");
		var $spos = $s.length;
		var $tmp = this.b;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: haxe.io.Bytes
}
jeash.display.GradientType = $hxClasses["jeash.display.GradientType"] = { __ename__ : ["jeash","display","GradientType"], __constructs__ : ["RADIAL","LINEAR"] }
jeash.display.GradientType.RADIAL = ["RADIAL",0];
jeash.display.GradientType.RADIAL.toString = $estr;
jeash.display.GradientType.RADIAL.__enum__ = jeash.display.GradientType;
jeash.display.GradientType.LINEAR = ["LINEAR",1];
jeash.display.GradientType.LINEAR.toString = $estr;
jeash.display.GradientType.LINEAR.__enum__ = jeash.display.GradientType;
jeash.display.LineScaleMode = $hxClasses["jeash.display.LineScaleMode"] = { __ename__ : ["jeash","display","LineScaleMode"], __constructs__ : ["HORIZONTAL","NONE","NORMAL","VERTICAL"] }
jeash.display.LineScaleMode.HORIZONTAL = ["HORIZONTAL",0];
jeash.display.LineScaleMode.HORIZONTAL.toString = $estr;
jeash.display.LineScaleMode.HORIZONTAL.__enum__ = jeash.display.LineScaleMode;
jeash.display.LineScaleMode.NONE = ["NONE",1];
jeash.display.LineScaleMode.NONE.toString = $estr;
jeash.display.LineScaleMode.NONE.__enum__ = jeash.display.LineScaleMode;
jeash.display.LineScaleMode.NORMAL = ["NORMAL",2];
jeash.display.LineScaleMode.NORMAL.toString = $estr;
jeash.display.LineScaleMode.NORMAL.__enum__ = jeash.display.LineScaleMode;
jeash.display.LineScaleMode.VERTICAL = ["VERTICAL",3];
jeash.display.LineScaleMode.VERTICAL.toString = $estr;
jeash.display.LineScaleMode.VERTICAL.__enum__ = jeash.display.LineScaleMode;
com.wighawag.game.engine.world.twodimensions.core.Renderable2D = $hxClasses["com.wighawag.game.engine.world.twodimensions.core.Renderable2D"] = function() { }
com.wighawag.game.engine.world.twodimensions.core.Renderable2D.__name__ = ["com","wighawag","game","engine","world","twodimensions","core","Renderable2D"];
com.wighawag.game.engine.world.twodimensions.core.Renderable2D.__interfaces__ = [com.wighawag.game.engine.core.Renderable];
com.wighawag.game.engine.world.twodimensions.core.Renderable2D.prototype = {
	focusArea: null
	,__class__: com.wighawag.game.engine.world.twodimensions.core.Renderable2D
}
if(!de.polygonal.core.math) de.polygonal.core.math = {}
if(!de.polygonal.core.math.random) de.polygonal.core.math.random = {}
de.polygonal.core.math.random.RNG = $hxClasses["de.polygonal.core.math.random.RNG"] = function() {
	$s.push("de.polygonal.core.math.random.RNG::new");
	var $spos = $s.length;
	this._seed = 0;
	$s.pop();
}
de.polygonal.core.math.random.RNG.__name__ = ["de","polygonal","core","math","random","RNG"];
de.polygonal.core.math.random.RNG.prototype = {
	_seed: null
	,getSeed: function() {
		$s.push("de.polygonal.core.math.random.RNG::getSeed");
		var $spos = $s.length;
		var $tmp = this._seed;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setSeed: function(seed) {
		$s.push("de.polygonal.core.math.random.RNG::setSeed");
		var $spos = $s.length;
		this._seed = seed;
		$s.pop();
	}
	,random: function() {
		$s.push("de.polygonal.core.math.random.RNG::random");
		var $spos = $s.length;
		var $tmp = (function($this) {
			var $r;
			throw "override for implementation";
			return $r;
		}(this));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomFloat: function() {
		$s.push("de.polygonal.core.math.random.RNG::randomFloat");
		var $spos = $s.length;
		var $tmp = (function($this) {
			var $r;
			throw "override for implementation";
			return $r;
		}(this));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomRange: function(min,max) {
		$s.push("de.polygonal.core.math.random.RNG::randomRange");
		var $spos = $s.length;
		var l = min - .4999;
		var h = max + .4999;
		var $tmp = de.polygonal.core.math.Mathematics.round(l + (h - l) * this.randomFloat());
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomFloatRange: function(min,max) {
		$s.push("de.polygonal.core.math.random.RNG::randomFloatRange");
		var $spos = $s.length;
		var $tmp = min + (max - min) * this.randomFloat();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomSym: function(range) {
		$s.push("de.polygonal.core.math.random.RNG::randomSym");
		var $spos = $s.length;
		var $tmp = this.randomRange(-range,range);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomFloatSym: function(range) {
		$s.push("de.polygonal.core.math.random.RNG::randomFloatSym");
		var $spos = $s.length;
		var $tmp = this.randomFloatRange(-range,range);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.core.math.random.RNG
}
var StringTools = $hxClasses["StringTools"] = function() { }
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	$s.push("StringTools::urlEncode");
	var $spos = $s.length;
	var $tmp = encodeURIComponent(s);
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.urlDecode = function(s) {
	$s.push("StringTools::urlDecode");
	var $spos = $s.length;
	var $tmp = decodeURIComponent(s.split("+").join(" "));
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.htmlEscape = function(s) {
	$s.push("StringTools::htmlEscape");
	var $spos = $s.length;
	var $tmp = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.htmlUnescape = function(s) {
	$s.push("StringTools::htmlUnescape");
	var $spos = $s.length;
	var $tmp = s.split("&gt;").join(">").split("&lt;").join("<").split("&amp;").join("&");
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.startsWith = function(s,start) {
	$s.push("StringTools::startsWith");
	var $spos = $s.length;
	var $tmp = s.length >= start.length && s.substr(0,start.length) == start;
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.endsWith = function(s,end) {
	$s.push("StringTools::endsWith");
	var $spos = $s.length;
	var elen = end.length;
	var slen = s.length;
	var $tmp = slen >= elen && s.substr(slen - elen,elen) == end;
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.isSpace = function(s,pos) {
	$s.push("StringTools::isSpace");
	var $spos = $s.length;
	var c = s.charCodeAt(pos);
	var $tmp = c >= 9 && c <= 13 || c == 32;
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.ltrim = function(s) {
	$s.push("StringTools::ltrim");
	var $spos = $s.length;
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) {
		var $tmp = s.substr(r,l - r);
		$s.pop();
		return $tmp;
	} else {
		$s.pop();
		return s;
	}
	$s.pop();
}
StringTools.rtrim = function(s) {
	$s.push("StringTools::rtrim");
	var $spos = $s.length;
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) {
		var $tmp = s.substr(0,l - r);
		$s.pop();
		return $tmp;
	} else {
		$s.pop();
		return s;
	}
	$s.pop();
}
StringTools.trim = function(s) {
	$s.push("StringTools::trim");
	var $spos = $s.length;
	var $tmp = StringTools.ltrim(StringTools.rtrim(s));
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.rpad = function(s,c,l) {
	$s.push("StringTools::rpad");
	var $spos = $s.length;
	var sl = s.length;
	var cl = c.length;
	while(sl < l) if(l - sl < cl) {
		s += c.substr(0,l - sl);
		sl = l;
	} else {
		s += c;
		sl += cl;
	}
	$s.pop();
	return s;
	$s.pop();
}
StringTools.lpad = function(s,c,l) {
	$s.push("StringTools::lpad");
	var $spos = $s.length;
	var ns = "";
	var sl = s.length;
	if(sl >= l) {
		$s.pop();
		return s;
	}
	var cl = c.length;
	while(sl < l) if(l - sl < cl) {
		ns += c.substr(0,l - sl);
		sl = l;
	} else {
		ns += c;
		sl += cl;
	}
	var $tmp = ns + s;
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.replace = function(s,sub,by) {
	$s.push("StringTools::replace");
	var $spos = $s.length;
	var $tmp = s.split(sub).join(by);
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.hex = function(n,digits) {
	$s.push("StringTools::hex");
	var $spos = $s.length;
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) while(s.length < digits) s = "0" + s;
	$s.pop();
	return s;
	$s.pop();
}
StringTools.fastCodeAt = function(s,index) {
	$s.push("StringTools::fastCodeAt");
	var $spos = $s.length;
	var $tmp = s.cca(index);
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.isEOF = function(c) {
	$s.push("StringTools::isEOF");
	var $spos = $s.length;
	var $tmp = c != c;
	$s.pop();
	return $tmp;
	$s.pop();
}
StringTools.prototype = {
	__class__: StringTools
}
jeash.display.StageQuality = $hxClasses["jeash.display.StageQuality"] = function() { }
jeash.display.StageQuality.__name__ = ["jeash","display","StageQuality"];
jeash.display.StageQuality.prototype = {
	__class__: jeash.display.StageQuality
}
jeash.display.Tilesheet = $hxClasses["jeash.display.Tilesheet"] = function(bitmapData) {
	$s.push("jeash.display.Tilesheet::new");
	var $spos = $s.length;
	this.jeashSurface = bitmapData.clone().mTextureBuffer;
	this.jeashBitmapData = bitmapData;
	this.jeashTileRects = [];
	this.jeashTileHotspots = [];
	$s.pop();
}
jeash.display.Tilesheet.__name__ = ["jeash","display","Tilesheet"];
jeash.display.Tilesheet.prototype = {
	jeashTileRects: null
	,jeashTileHotspots: null
	,jeashSurface: null
	,jeashBitmapData: null
	,addTileRect: function(rect,hotspot) {
		$s.push("jeash.display.Tilesheet::addTileRect");
		var $spos = $s.length;
		this.jeashTileRects.push(rect.clone());
		if(hotspot != null) this.jeashTileHotspots.push(hotspot.clone()); else this.jeashTileHotspots.push(new jeash.geom.Point((rect.width - rect.x) / 2,(rect.height - rect.y) / 2));
		$s.pop();
	}
	,__class__: jeash.display.Tilesheet
}
haxe.macro.Constant = $hxClasses["haxe.macro.Constant"] = { __ename__ : ["haxe","macro","Constant"], __constructs__ : ["CInt","CFloat","CString","CIdent","CType","CRegexp"] }
haxe.macro.Constant.CInt = function(v) { var $x = ["CInt",0,v]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CFloat = function(f) { var $x = ["CFloat",1,f]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CString = function(s) { var $x = ["CString",2,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CIdent = function(s) { var $x = ["CIdent",3,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CType = function(s) { var $x = ["CType",4,s]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Constant.CRegexp = function(r,opt) { var $x = ["CRegexp",5,r,opt]; $x.__enum__ = haxe.macro.Constant; $x.toString = $estr; return $x; }
haxe.macro.Binop = $hxClasses["haxe.macro.Binop"] = { __ename__ : ["haxe","macro","Binop"], __constructs__ : ["OpAdd","OpMult","OpDiv","OpSub","OpAssign","OpEq","OpNotEq","OpGt","OpGte","OpLt","OpLte","OpAnd","OpOr","OpXor","OpBoolAnd","OpBoolOr","OpShl","OpShr","OpUShr","OpMod","OpAssignOp","OpInterval"] }
haxe.macro.Binop.OpAdd = ["OpAdd",0];
haxe.macro.Binop.OpAdd.toString = $estr;
haxe.macro.Binop.OpAdd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMult = ["OpMult",1];
haxe.macro.Binop.OpMult.toString = $estr;
haxe.macro.Binop.OpMult.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpDiv = ["OpDiv",2];
haxe.macro.Binop.OpDiv.toString = $estr;
haxe.macro.Binop.OpDiv.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpSub = ["OpSub",3];
haxe.macro.Binop.OpSub.toString = $estr;
haxe.macro.Binop.OpSub.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssign = ["OpAssign",4];
haxe.macro.Binop.OpAssign.toString = $estr;
haxe.macro.Binop.OpAssign.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpEq = ["OpEq",5];
haxe.macro.Binop.OpEq.toString = $estr;
haxe.macro.Binop.OpEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpNotEq = ["OpNotEq",6];
haxe.macro.Binop.OpNotEq.toString = $estr;
haxe.macro.Binop.OpNotEq.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGt = ["OpGt",7];
haxe.macro.Binop.OpGt.toString = $estr;
haxe.macro.Binop.OpGt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpGte = ["OpGte",8];
haxe.macro.Binop.OpGte.toString = $estr;
haxe.macro.Binop.OpGte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLt = ["OpLt",9];
haxe.macro.Binop.OpLt.toString = $estr;
haxe.macro.Binop.OpLt.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpLte = ["OpLte",10];
haxe.macro.Binop.OpLte.toString = $estr;
haxe.macro.Binop.OpLte.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAnd = ["OpAnd",11];
haxe.macro.Binop.OpAnd.toString = $estr;
haxe.macro.Binop.OpAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpOr = ["OpOr",12];
haxe.macro.Binop.OpOr.toString = $estr;
haxe.macro.Binop.OpOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpXor = ["OpXor",13];
haxe.macro.Binop.OpXor.toString = $estr;
haxe.macro.Binop.OpXor.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolAnd = ["OpBoolAnd",14];
haxe.macro.Binop.OpBoolAnd.toString = $estr;
haxe.macro.Binop.OpBoolAnd.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpBoolOr = ["OpBoolOr",15];
haxe.macro.Binop.OpBoolOr.toString = $estr;
haxe.macro.Binop.OpBoolOr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShl = ["OpShl",16];
haxe.macro.Binop.OpShl.toString = $estr;
haxe.macro.Binop.OpShl.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpShr = ["OpShr",17];
haxe.macro.Binop.OpShr.toString = $estr;
haxe.macro.Binop.OpShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpUShr = ["OpUShr",18];
haxe.macro.Binop.OpUShr.toString = $estr;
haxe.macro.Binop.OpUShr.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpMod = ["OpMod",19];
haxe.macro.Binop.OpMod.toString = $estr;
haxe.macro.Binop.OpMod.__enum__ = haxe.macro.Binop;
haxe.macro.Binop.OpAssignOp = function(op) { var $x = ["OpAssignOp",20,op]; $x.__enum__ = haxe.macro.Binop; $x.toString = $estr; return $x; }
haxe.macro.Binop.OpInterval = ["OpInterval",21];
haxe.macro.Binop.OpInterval.toString = $estr;
haxe.macro.Binop.OpInterval.__enum__ = haxe.macro.Binop;
haxe.macro.Unop = $hxClasses["haxe.macro.Unop"] = { __ename__ : ["haxe","macro","Unop"], __constructs__ : ["OpIncrement","OpDecrement","OpNot","OpNeg","OpNegBits"] }
haxe.macro.Unop.OpIncrement = ["OpIncrement",0];
haxe.macro.Unop.OpIncrement.toString = $estr;
haxe.macro.Unop.OpIncrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpDecrement = ["OpDecrement",1];
haxe.macro.Unop.OpDecrement.toString = $estr;
haxe.macro.Unop.OpDecrement.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNot = ["OpNot",2];
haxe.macro.Unop.OpNot.toString = $estr;
haxe.macro.Unop.OpNot.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNeg = ["OpNeg",3];
haxe.macro.Unop.OpNeg.toString = $estr;
haxe.macro.Unop.OpNeg.__enum__ = haxe.macro.Unop;
haxe.macro.Unop.OpNegBits = ["OpNegBits",4];
haxe.macro.Unop.OpNegBits.toString = $estr;
haxe.macro.Unop.OpNegBits.__enum__ = haxe.macro.Unop;
haxe.macro.ExprDef = $hxClasses["haxe.macro.ExprDef"] = { __ename__ : ["haxe","macro","ExprDef"], __constructs__ : ["EConst","EArray","EBinop","EField","EType","EParenthesis","EObjectDecl","EArrayDecl","ECall","ENew","EUnop","EVars","EFunction","EBlock","EFor","EIn","EIf","EWhile","ESwitch","ETry","EReturn","EBreak","EContinue","EUntyped","EThrow","ECast","EDisplay","EDisplayNew","ETernary","ECheckType"] }
haxe.macro.ExprDef.EConst = function(c) { var $x = ["EConst",0,c]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EArray = function(e1,e2) { var $x = ["EArray",1,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBinop = function(op,e1,e2) { var $x = ["EBinop",2,op,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EField = function(e,field) { var $x = ["EField",3,e,field]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EType = function(e,field) { var $x = ["EType",4,e,field]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EParenthesis = function(e) { var $x = ["EParenthesis",5,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EObjectDecl = function(fields) { var $x = ["EObjectDecl",6,fields]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EArrayDecl = function(values) { var $x = ["EArrayDecl",7,values]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECall = function(e,params) { var $x = ["ECall",8,e,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ENew = function(t,params) { var $x = ["ENew",9,t,params]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EUnop = function(op,postFix,e) { var $x = ["EUnop",10,op,postFix,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EVars = function(vars) { var $x = ["EVars",11,vars]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EFunction = function(name,f) { var $x = ["EFunction",12,name,f]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBlock = function(exprs) { var $x = ["EBlock",13,exprs]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EFor = function(it,expr) { var $x = ["EFor",14,it,expr]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EIn = function(e1,e2) { var $x = ["EIn",15,e1,e2]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EIf = function(econd,eif,eelse) { var $x = ["EIf",16,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EWhile = function(econd,e,normalWhile) { var $x = ["EWhile",17,econd,e,normalWhile]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ESwitch = function(e,cases,edef) { var $x = ["ESwitch",18,e,cases,edef]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ETry = function(e,catches) { var $x = ["ETry",19,e,catches]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EReturn = function(e) { var $x = ["EReturn",20,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EBreak = ["EBreak",21];
haxe.macro.ExprDef.EBreak.toString = $estr;
haxe.macro.ExprDef.EBreak.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EContinue = ["EContinue",22];
haxe.macro.ExprDef.EContinue.toString = $estr;
haxe.macro.ExprDef.EContinue.__enum__ = haxe.macro.ExprDef;
haxe.macro.ExprDef.EUntyped = function(e) { var $x = ["EUntyped",23,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EThrow = function(e) { var $x = ["EThrow",24,e]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECast = function(e,t) { var $x = ["ECast",25,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EDisplay = function(e,isCall) { var $x = ["EDisplay",26,e,isCall]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.EDisplayNew = function(t) { var $x = ["EDisplayNew",27,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ETernary = function(econd,eif,eelse) { var $x = ["ETernary",28,econd,eif,eelse]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ExprDef.ECheckType = function(e,t) { var $x = ["ECheckType",29,e,t]; $x.__enum__ = haxe.macro.ExprDef; $x.toString = $estr; return $x; }
haxe.macro.ComplexType = $hxClasses["haxe.macro.ComplexType"] = { __ename__ : ["haxe","macro","ComplexType"], __constructs__ : ["TPath","TFunction","TAnonymous","TParent","TExtend","TOptional"] }
haxe.macro.ComplexType.TPath = function(p) { var $x = ["TPath",0,p]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TFunction = function(args,ret) { var $x = ["TFunction",1,args,ret]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TAnonymous = function(fields) { var $x = ["TAnonymous",2,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TParent = function(t) { var $x = ["TParent",3,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TExtend = function(p,fields) { var $x = ["TExtend",4,p,fields]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.ComplexType.TOptional = function(t) { var $x = ["TOptional",5,t]; $x.__enum__ = haxe.macro.ComplexType; $x.toString = $estr; return $x; }
haxe.macro.TypeParam = $hxClasses["haxe.macro.TypeParam"] = { __ename__ : ["haxe","macro","TypeParam"], __constructs__ : ["TPType","TPExpr"] }
haxe.macro.TypeParam.TPType = function(t) { var $x = ["TPType",0,t]; $x.__enum__ = haxe.macro.TypeParam; $x.toString = $estr; return $x; }
haxe.macro.TypeParam.TPExpr = function(e) { var $x = ["TPExpr",1,e]; $x.__enum__ = haxe.macro.TypeParam; $x.toString = $estr; return $x; }
haxe.macro.Access = $hxClasses["haxe.macro.Access"] = { __ename__ : ["haxe","macro","Access"], __constructs__ : ["APublic","APrivate","AStatic","AOverride","ADynamic","AInline"] }
haxe.macro.Access.APublic = ["APublic",0];
haxe.macro.Access.APublic.toString = $estr;
haxe.macro.Access.APublic.__enum__ = haxe.macro.Access;
haxe.macro.Access.APrivate = ["APrivate",1];
haxe.macro.Access.APrivate.toString = $estr;
haxe.macro.Access.APrivate.__enum__ = haxe.macro.Access;
haxe.macro.Access.AStatic = ["AStatic",2];
haxe.macro.Access.AStatic.toString = $estr;
haxe.macro.Access.AStatic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AOverride = ["AOverride",3];
haxe.macro.Access.AOverride.toString = $estr;
haxe.macro.Access.AOverride.__enum__ = haxe.macro.Access;
haxe.macro.Access.ADynamic = ["ADynamic",4];
haxe.macro.Access.ADynamic.toString = $estr;
haxe.macro.Access.ADynamic.__enum__ = haxe.macro.Access;
haxe.macro.Access.AInline = ["AInline",5];
haxe.macro.Access.AInline.toString = $estr;
haxe.macro.Access.AInline.__enum__ = haxe.macro.Access;
haxe.macro.FieldType = $hxClasses["haxe.macro.FieldType"] = { __ename__ : ["haxe","macro","FieldType"], __constructs__ : ["FVar","FFun","FProp"] }
haxe.macro.FieldType.FVar = function(t,e) { var $x = ["FVar",0,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.FieldType.FFun = function(f) { var $x = ["FFun",1,f]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.FieldType.FProp = function(get,set,t,e) { var $x = ["FProp",2,get,set,t,e]; $x.__enum__ = haxe.macro.FieldType; $x.toString = $estr; return $x; }
haxe.macro.TypeDefKind = $hxClasses["haxe.macro.TypeDefKind"] = { __ename__ : ["haxe","macro","TypeDefKind"], __constructs__ : ["TDEnum","TDStructure","TDClass"] }
haxe.macro.TypeDefKind.TDEnum = ["TDEnum",0];
haxe.macro.TypeDefKind.TDEnum.toString = $estr;
haxe.macro.TypeDefKind.TDEnum.__enum__ = haxe.macro.TypeDefKind;
haxe.macro.TypeDefKind.TDStructure = ["TDStructure",1];
haxe.macro.TypeDefKind.TDStructure.toString = $estr;
haxe.macro.TypeDefKind.TDStructure.__enum__ = haxe.macro.TypeDefKind;
haxe.macro.TypeDefKind.TDClass = function(extend,implement,isInterface) { var $x = ["TDClass",2,extend,implement,isInterface]; $x.__enum__ = haxe.macro.TypeDefKind; $x.toString = $estr; return $x; }
haxe.macro.Error = $hxClasses["haxe.macro.Error"] = function(m,p) {
	$s.push("haxe.macro.Error::new");
	var $spos = $s.length;
	this.message = m;
	this.pos = p;
	$s.pop();
}
haxe.macro.Error.__name__ = ["haxe","macro","Error"];
haxe.macro.Error.prototype = {
	message: null
	,pos: null
	,__class__: haxe.macro.Error
}
hxjson2.JSONParseError = $hxClasses["hxjson2.JSONParseError"] = function(message,location,text) {
	$s.push("hxjson2.JSONParseError::new");
	var $spos = $s.length;
	if(text == null) text = "";
	if(location == null) location = 0;
	if(message == null) message = "";
	this.name = "JSONParseError";
	this._location = location;
	this._text = text;
	this.message = message;
	$s.pop();
}
hxjson2.JSONParseError.__name__ = ["hxjson2","JSONParseError"];
hxjson2.JSONParseError.prototype = {
	_location: null
	,_text: null
	,name: null
	,text: null
	,location: null
	,message: null
	,getlocation: function() {
		$s.push("hxjson2.JSONParseError::getlocation");
		var $spos = $s.length;
		var $tmp = this._location;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,gettext: function() {
		$s.push("hxjson2.JSONParseError::gettext");
		var $spos = $s.length;
		var $tmp = this._text;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("hxjson2.JSONParseError::toString");
		var $spos = $s.length;
		var $tmp = this.name + ": " + this.message + " at position: " + this._location + " near \"" + this._text + "\"";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hxjson2.JSONParseError
	,__properties__: {get_location:"getlocation",get_text:"gettext"}
}
haxe.TypeTools = $hxClasses["haxe.TypeTools"] = function() { }
haxe.TypeTools.__name__ = ["haxe","TypeTools"];
haxe.TypeTools.getClassNames = function(value) {
	$s.push("haxe.TypeTools::getClassNames");
	var $spos = $s.length;
	var result = new List();
	var valueClass = Std["is"](value,Class)?value:Type.getClass(value);
	while(null != valueClass) {
		result.add(Type.getClassName(valueClass));
		valueClass = Type.getSuperClass(valueClass);
	}
	$s.pop();
	return result;
	$s.pop();
}
haxe.TypeTools.prototype = {
	__class__: haxe.TypeTools
}
var js = js || {}
js.Boot = $hxClasses["js.Boot"] = function() { }
js.Boot.__name__ = ["js","Boot"];
js.Boot.__unhtml = function(s) {
	$s.push("js.Boot::__unhtml");
	var $spos = $s.length;
	var $tmp = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	$s.pop();
	return $tmp;
	$s.pop();
}
js.Boot.__trace = function(v,i) {
	$s.push("js.Boot::__trace");
	var $spos = $s.length;
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js.Boot.__string_rec(v,"");
	var d = document.getElementById("haxe:trace");
	if(d != null) d.innerHTML += js.Boot.__unhtml(msg) + "<br/>"; else if(typeof(console) != "undefined" && console.log != null) console.log(msg);
	$s.pop();
}
js.Boot.__clear_trace = function() {
	$s.push("js.Boot::__clear_trace");
	var $spos = $s.length;
	var d = document.getElementById("haxe:trace");
	if(d != null) d.innerHTML = "";
	$s.pop();
}
js.Boot.__string_rec = function(o,s) {
	$s.push("js.Boot::__string_rec");
	var $spos = $s.length;
	if(o == null) {
		$s.pop();
		return "null";
	}
	if(s.length >= 5) {
		$s.pop();
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ != null || o.__ename__ != null)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__ != null) {
				if(o.length == 2) {
					var $tmp = o[0];
					$s.pop();
					return $tmp;
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2, _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) str += "," + js.Boot.__string_rec(o[i],s); else str += js.Boot.__string_rec(o[i],s);
				}
				var $tmp = str + ")";
				$s.pop();
				return $tmp;
			}
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g = 0;
			while(_g < l) {
				var i1 = _g++;
				str += (i1 > 0?",":"") + js.Boot.__string_rec(o[i1],s);
			}
			str += "]";
			$s.pop();
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			$s.pop();
			return "???";
		}
		if(tostr != null && tostr != Object.toString) {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				$s.pop();
				return s2;
			}
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) { ;
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js.Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		$s.pop();
		return str;
	case "function":
		$s.pop();
		return "<function>";
	case "string":
		$s.pop();
		return o;
	default:
		var $tmp = String(o);
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
js.Boot.__interfLoop = function(cc,cl) {
	$s.push("js.Boot::__interfLoop");
	var $spos = $s.length;
	if(cc == null) {
		$s.pop();
		return false;
	}
	if(cc == cl) {
		$s.pop();
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0, _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js.Boot.__interfLoop(i1,cl)) {
				$s.pop();
				return true;
			}
		}
	}
	var $tmp = js.Boot.__interfLoop(cc.__super__,cl);
	$s.pop();
	return $tmp;
	$s.pop();
}
js.Boot.__instanceof = function(o,cl) {
	$s.push("js.Boot::__instanceof");
	var $spos = $s.length;
	try {
		if(o instanceof cl) {
			if(cl == Array) {
				var $tmp = o.__enum__ == null;
				$s.pop();
				return $tmp;
			}
			$s.pop();
			return true;
		}
		if(js.Boot.__interfLoop(o.__class__,cl)) {
			$s.pop();
			return true;
		}
	} catch( e ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
		if(cl == null) {
			$s.pop();
			return false;
		}
	}
	switch(cl) {
	case Int:
		var $tmp = Math.ceil(o%2147483648.0) === o;
		$s.pop();
		return $tmp;
	case Float:
		var $tmp = typeof(o) == "number";
		$s.pop();
		return $tmp;
	case Bool:
		var $tmp = o === true || o === false;
		$s.pop();
		return $tmp;
	case String:
		var $tmp = typeof(o) == "string";
		$s.pop();
		return $tmp;
	case Dynamic:
		$s.pop();
		return true;
	default:
		if(o == null) {
			$s.pop();
			return false;
		}
		var $tmp = o.__enum__ == cl || cl == Class && o.__name__ != null || cl == Enum && o.__ename__ != null;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
js.Boot.__init = function() {
	$s.push("js.Boot::__init");
	var $spos = $s.length;
	js.Lib.isIE = typeof document!='undefined' && document.all != null && typeof window!='undefined' && window.opera == null;
	js.Lib.isOpera = typeof window!='undefined' && window.opera != null;
	Array.prototype.copy = Array.prototype.slice;
	Array.prototype.insert = function(i,x) {
		$s.push("js.Boot::__init@187");
		var $spos = $s.length;
		this.splice(i,0,x);
		$s.pop();
	};
	Array.prototype.remove = Array.prototype.indexOf?function(obj) {
		$s.push("js.Boot::__init@190");
		var $spos = $s.length;
		var idx = this.indexOf(obj);
		if(idx == -1) {
			$s.pop();
			return false;
		}
		this.splice(idx,1);
		$s.pop();
		return true;
		$s.pop();
	}:function(obj) {
		$s.push("js.Boot::__init@195");
		var $spos = $s.length;
		var i = 0;
		var l = this.length;
		while(i < l) {
			if(this[i] == obj) {
				this.splice(i,1);
				$s.pop();
				return true;
			}
			i++;
		}
		$s.pop();
		return false;
		$s.pop();
	};
	Array.prototype.iterator = function() {
		$s.push("js.Boot::__init@207");
		var $spos = $s.length;
		var $tmp = { cur : 0, arr : this, hasNext : function() {
			$s.push("js.Boot::__init@207@211");
			var $spos = $s.length;
			var $tmp = this.cur < this.arr.length;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("js.Boot::__init@207@214");
			var $spos = $s.length;
			var $tmp = this.arr[this.cur++];
			$s.pop();
			return $tmp;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	};
	if(String.prototype.cca == null) String.prototype.cca = String.prototype.charCodeAt;
	String.prototype.charCodeAt = function(i) {
		$s.push("js.Boot::__init@221");
		var $spos = $s.length;
		var x = this.cca(i);
		if(x != x) {
			var $tmp = undefined;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return x;
		$s.pop();
	};
	var oldsub = String.prototype.substr;
	String.prototype.substr = function(pos,len) {
		$s.push("js.Boot::__init@228");
		var $spos = $s.length;
		if(pos != null && pos != 0 && len != null && len < 0) {
			$s.pop();
			return "";
		}
		if(len == null) len = this.length;
		if(pos < 0) {
			pos = this.length + pos;
			if(pos < 0) pos = 0;
		} else if(len < 0) len = this.length + len - pos;
		var $tmp = oldsub.apply(this,[pos,len]);
		$s.pop();
		return $tmp;
		$s.pop();
	};
	Function.prototype["$bind"] = function(o) {
		$s.push("js.Boot::__init@239");
		var $spos = $s.length;
		var f = function() {
			$s.push("js.Boot::__init@239@240");
			var $spos = $s.length;
			var $tmp = f.method.apply(f.scope,arguments);
			$s.pop();
			return $tmp;
			$s.pop();
		};
		f.scope = o;
		f.method = this;
		$s.pop();
		return f;
		$s.pop();
	};
	$s.pop();
}
js.Boot.prototype = {
	__class__: js.Boot
}
jeash.display.IGraphicsPath = $hxClasses["jeash.display.IGraphicsPath"] = function() { }
jeash.display.IGraphicsPath.__name__ = ["jeash","display","IGraphicsPath"];
jeash.display.IGraphicsPath.prototype = {
	__class__: jeash.display.IGraphicsPath
}
jeash.display.GraphicsPath = $hxClasses["jeash.display.GraphicsPath"] = function(commands,data,winding) {
	$s.push("jeash.display.GraphicsPath::new");
	var $spos = $s.length;
	this.commands = commands;
	this.data = data;
	this.winding = winding;
	this.jeashGraphicsDataType = jeash.display.GraphicsDataType.PATH;
	$s.pop();
}
jeash.display.GraphicsPath.__name__ = ["jeash","display","GraphicsPath"];
jeash.display.GraphicsPath.__interfaces__ = [jeash.display.IGraphicsPath,jeash.display.IGraphicsData];
jeash.display.GraphicsPath.prototype = {
	commands: null
	,data: null
	,winding: null
	,jeashGraphicsDataType: null
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		$s.push("jeash.display.GraphicsPath::curveTo");
		var $spos = $s.length;
		if(this.commands != null && this.data != null) {
			this.commands.push(3);
			this.data.push(anchorX);
			this.data.push(anchorY);
			this.data.push(controlX);
			this.data.push(controlY);
		}
		$s.pop();
	}
	,lineTo: function(x,y) {
		$s.push("jeash.display.GraphicsPath::lineTo");
		var $spos = $s.length;
		if(this.commands != null && this.data != null) {
			this.commands.push(2);
			this.data.push(x);
			this.data.push(y);
		}
		$s.pop();
	}
	,moveTo: function(x,y) {
		$s.push("jeash.display.GraphicsPath::moveTo");
		var $spos = $s.length;
		if(this.commands != null && this.data != null) {
			this.commands.push(1);
			this.data.push(x);
			this.data.push(y);
		}
		$s.pop();
	}
	,__class__: jeash.display.GraphicsPath
}
jeash.display.LoaderInfo = $hxClasses["jeash.display.LoaderInfo"] = function() {
	$s.push("jeash.display.LoaderInfo::new");
	var $spos = $s.length;
	jeash.events.EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
	$s.pop();
}
jeash.display.LoaderInfo.__name__ = ["jeash","display","LoaderInfo"];
jeash.display.LoaderInfo.create = function(ldr) {
	$s.push("jeash.display.LoaderInfo::create");
	var $spos = $s.length;
	var li = new jeash.display.LoaderInfo();
	li.loader = ldr;
	$s.pop();
	return li;
	$s.pop();
}
jeash.display.LoaderInfo.__super__ = jeash.events.EventDispatcher;
jeash.display.LoaderInfo.prototype = $extend(jeash.events.EventDispatcher.prototype,{
	bytes: null
	,bytesLoaded: null
	,bytesTotal: null
	,childAllowsParent: null
	,content: null
	,contentType: null
	,frameRate: null
	,height: null
	,loader: null
	,loaderURL: null
	,parameters: null
	,parentAllowsChild: null
	,sameDomain: null
	,sharedEvents: null
	,url: null
	,width: null
	,__class__: jeash.display.LoaderInfo
});
jeash.media.SoundLoaderContext = $hxClasses["jeash.media.SoundLoaderContext"] = function(bufferTime,checkPolicyFile) {
	$s.push("jeash.media.SoundLoaderContext::new");
	var $spos = $s.length;
	this.bufferTime = bufferTime;
	this.checkPolicyFile = checkPolicyFile;
	$s.pop();
}
jeash.media.SoundLoaderContext.__name__ = ["jeash","media","SoundLoaderContext"];
jeash.media.SoundLoaderContext.prototype = {
	bufferTime: null
	,checkPolicyFile: null
	,__class__: jeash.media.SoundLoaderContext
}
jeash.display.BlendMode = $hxClasses["jeash.display.BlendMode"] = { __ename__ : ["jeash","display","BlendMode"], __constructs__ : ["ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SUBTRACT"] }
jeash.display.BlendMode.ADD = ["ADD",0];
jeash.display.BlendMode.ADD.toString = $estr;
jeash.display.BlendMode.ADD.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.ALPHA = ["ALPHA",1];
jeash.display.BlendMode.ALPHA.toString = $estr;
jeash.display.BlendMode.ALPHA.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.DARKEN = ["DARKEN",2];
jeash.display.BlendMode.DARKEN.toString = $estr;
jeash.display.BlendMode.DARKEN.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.DIFFERENCE = ["DIFFERENCE",3];
jeash.display.BlendMode.DIFFERENCE.toString = $estr;
jeash.display.BlendMode.DIFFERENCE.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.ERASE = ["ERASE",4];
jeash.display.BlendMode.ERASE.toString = $estr;
jeash.display.BlendMode.ERASE.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.HARDLIGHT = ["HARDLIGHT",5];
jeash.display.BlendMode.HARDLIGHT.toString = $estr;
jeash.display.BlendMode.HARDLIGHT.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.INVERT = ["INVERT",6];
jeash.display.BlendMode.INVERT.toString = $estr;
jeash.display.BlendMode.INVERT.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.LAYER = ["LAYER",7];
jeash.display.BlendMode.LAYER.toString = $estr;
jeash.display.BlendMode.LAYER.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.LIGHTEN = ["LIGHTEN",8];
jeash.display.BlendMode.LIGHTEN.toString = $estr;
jeash.display.BlendMode.LIGHTEN.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.MULTIPLY = ["MULTIPLY",9];
jeash.display.BlendMode.MULTIPLY.toString = $estr;
jeash.display.BlendMode.MULTIPLY.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.NORMAL = ["NORMAL",10];
jeash.display.BlendMode.NORMAL.toString = $estr;
jeash.display.BlendMode.NORMAL.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.OVERLAY = ["OVERLAY",11];
jeash.display.BlendMode.OVERLAY.toString = $estr;
jeash.display.BlendMode.OVERLAY.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.SCREEN = ["SCREEN",12];
jeash.display.BlendMode.SCREEN.toString = $estr;
jeash.display.BlendMode.SCREEN.__enum__ = jeash.display.BlendMode;
jeash.display.BlendMode.SUBTRACT = ["SUBTRACT",13];
jeash.display.BlendMode.SUBTRACT.toString = $estr;
jeash.display.BlendMode.SUBTRACT.__enum__ = jeash.display.BlendMode;
haxe.io.Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] }
haxe.io.Error.Blocked = ["Blocked",0];
haxe.io.Error.Blocked.toString = $estr;
haxe.io.Error.Blocked.__enum__ = haxe.io.Error;
haxe.io.Error.Overflow = ["Overflow",1];
haxe.io.Error.Overflow.toString = $estr;
haxe.io.Error.Overflow.__enum__ = haxe.io.Error;
haxe.io.Error.OutsideBounds = ["OutsideBounds",2];
haxe.io.Error.OutsideBounds.toString = $estr;
haxe.io.Error.OutsideBounds.__enum__ = haxe.io.Error;
haxe.io.Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe.io.Error; $x.toString = $estr; return $x; }
jeash.geom.Point = $hxClasses["jeash.geom.Point"] = function(inX,inY) {
	$s.push("jeash.geom.Point::new");
	var $spos = $s.length;
	this.x = inX == null?0.0:inX;
	this.y = inY == null?0.0:inY;
	$s.pop();
}
jeash.geom.Point.__name__ = ["jeash","geom","Point"];
jeash.geom.Point.distance = function(pt1,pt2) {
	$s.push("jeash.geom.Point::distance");
	var $spos = $s.length;
	var dx = pt1.x - pt2.x;
	var dy = pt1.y - pt2.y;
	var $tmp = Math.sqrt(dx * dx + dy * dy);
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.geom.Point.interpolate = function(pt1,pt2,f) {
	$s.push("jeash.geom.Point::interpolate");
	var $spos = $s.length;
	var $tmp = new jeash.geom.Point(pt2.x + f * (pt1.x - pt2.x),pt2.y + f * (pt1.y - pt2.y));
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.geom.Point.polar = function(len,angle) {
	$s.push("jeash.geom.Point::polar");
	var $spos = $s.length;
	var $tmp = new jeash.geom.Point(len * Math.cos(angle),len * Math.sin(angle));
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.geom.Point.prototype = {
	x: null
	,y: null
	,add: function(v) {
		$s.push("jeash.geom.Point::add");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(v.x + this.x,v.y + this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clone: function() {
		$s.push("jeash.geom.Point::clone");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(this.x,this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,equals: function(toCompare) {
		$s.push("jeash.geom.Point::equals");
		var $spos = $s.length;
		var $tmp = toCompare.x == this.x && toCompare.y == this.y;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,length: null
	,get_length: function() {
		$s.push("jeash.geom.Point::get_length");
		var $spos = $s.length;
		var $tmp = Math.sqrt(this.x * this.x + this.y * this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,normalize: function(thickness) {
		$s.push("jeash.geom.Point::normalize");
		var $spos = $s.length;
		if(this.x == 0 && this.y == 0) this.x = thickness; else {
			var norm = thickness / Math.sqrt(this.x * this.x + this.y * this.y);
			this.x *= norm;
			this.y *= norm;
		}
		$s.pop();
	}
	,offset: function(dx,dy) {
		$s.push("jeash.geom.Point::offset");
		var $spos = $s.length;
		this.x += dx;
		this.y += dy;
		$s.pop();
	}
	,subtract: function(v) {
		$s.push("jeash.geom.Point::subtract");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(this.x - v.x,this.y - v.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.geom.Point
	,__properties__: {get_length:"get_length"}
}
jeash.Lib = $hxClasses["jeash.Lib"] = function(title,width,height) {
	$s.push("jeash.Lib::new");
	var $spos = $s.length;
	this.mKilled = false;
	this.mRequestedWidth = width;
	this.mRequestedHeight = height;
	this.mResizePending = false;
	this.__scr = js.Lib.document.getElementById(title);
	if(this.__scr == null) throw "Element with id '" + title + "' not found";
	this.__scr.style.setProperty("overflow","hidden","");
	this.__scr.style.setProperty("position","absolute","");
	this.__scr.appendChild(jeash.Lib.jeashGetCanvas());
	$s.pop();
}
jeash.Lib.__name__ = ["jeash","Lib"];
jeash.Lib.__properties__ = {get_canvas:"jeashGetCanvas",get_current:"jeashGetCurrent"}
jeash.Lib.mMe = null;
jeash.Lib.context = null;
jeash.Lib.current = null;
jeash.Lib.glContext = null;
jeash.Lib.canvas = null;
jeash.Lib.mStage = null;
jeash.Lib.mMainClassRoot = null;
jeash.Lib.mCurrent = null;
jeash.Lib.mRolling = null;
jeash.Lib.mDownObj = null;
jeash.Lib.mMouseX = null;
jeash.Lib.mMouseY = null;
jeash.Lib.trace = function(arg) {
	$s.push("jeash.Lib::trace");
	var $spos = $s.length;
	if(jeash.Lib.mMe.jeashTraceTextField != null) {
		var _g = jeash.Lib.mMe.jeashTraceTextField;
		_g.SetText(_g.GetText() + (arg + "\n"));
	} else if(window.console != null) window.console.log(arg);
	$s.pop();
}
jeash.Lib.getURL = function(request,target) {
	$s.push("jeash.Lib::getURL");
	var $spos = $s.length;
	var document = js.Lib.document;
	var window = js.Lib.window;
	if(target == null || target == "_self") document.open(request.url); else switch(target) {
	case "_blank":
		window.open(request.url);
		break;
	case "_parent":
		window.parent.open(request.url);
		break;
	case "_top":
		window.top.open(request.url);
		break;
	}
	$s.pop();
}
jeash.Lib.jeashGetCanvas = function() {
	$s.push("jeash.Lib::jeashGetCanvas");
	var $spos = $s.length;
	if(jeash.Lib.canvas == null) {
		if(document == null) throw "Document not loaded yet, cannot create root canvas!";
		jeash.Lib.canvas = document.createElement("canvas");
		jeash.Lib.canvas.id = "Root Surface";
		jeash.Lib.context = "2d";
		jeash.Lib.jeashBootstrap();
		jeash.Lib.starttime = haxe.Timer.stamp();
	}
	var $tmp = jeash.Lib.canvas;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashGetCurrent = function() {
	$s.push("jeash.Lib::jeashGetCurrent");
	var $spos = $s.length;
	jeash.Lib.jeashGetCanvas();
	if(jeash.Lib.mMainClassRoot == null) {
		jeash.Lib.mMainClassRoot = new jeash.display.MovieClip();
		jeash.Lib.mCurrent = jeash.Lib.mMainClassRoot;
		jeash.Lib.mCurrent.name = "Root MovieClip";
	}
	var $tmp = jeash.Lib.mMainClassRoot;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib["as"] = function(v,c) {
	$s.push("jeash.Lib::as");
	var $spos = $s.length;
	var $tmp = Std["is"](v,c)?v:null;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.starttime = null;
jeash.Lib.getTimer = function() {
	$s.push("jeash.Lib::getTimer");
	var $spos = $s.length;
	var $tmp = Std["int"]((haxe.Timer.stamp() - jeash.Lib.starttime) * 1000);
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashGetStage = function() {
	$s.push("jeash.Lib::jeashGetStage");
	var $spos = $s.length;
	jeash.Lib.jeashGetCanvas();
	if(jeash.Lib.mStage == null) {
		var width = jeash.Lib.jeashGetWidth();
		var height = jeash.Lib.jeashGetHeight();
		jeash.Lib.mStage = new jeash.display.Stage(width,height);
		jeash.Lib.mStage.addChild(jeash.Lib.jeashGetCurrent());
	}
	var $tmp = jeash.Lib.mStage;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashAppendSurface = function(surface,before) {
	$s.push("jeash.Lib::jeashAppendSurface");
	var $spos = $s.length;
	if(jeash.Lib.mMe.__scr != null) {
		surface.style.setProperty("position","absolute","");
		surface.style.setProperty("left","0px","");
		surface.style.setProperty("top","0px","");
		surface.style.setProperty("-moz-transform-origin","0 0","");
		surface.style.setProperty("-webkit-transform-origin","0 0","");
		surface.style.setProperty("-o-transform-origin","0 0","");
		surface.style.setProperty("-ms-transform-origin","0 0","");
		try {
			surface.onmouseover = surface.onselectstart = function() {
				$s.push("jeash.Lib::jeashAppendSurface@208");
				var $spos = $s.length;
				$s.pop();
				return false;
				$s.pop();
			};
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
		}
		if(before != null) jeash.Lib.mMe.__scr.insertBefore(surface,before); else jeash.Lib.mMe.__scr.appendChild(surface);
	}
	$s.pop();
}
jeash.Lib.jeashSwapSurface = function(surface1,surface2) {
	$s.push("jeash.Lib::jeashSwapSurface");
	var $spos = $s.length;
	var c1 = -1;
	var c2 = -1;
	var swap;
	var _g1 = 0, _g = jeash.Lib.mMe.__scr.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(jeash.Lib.mMe.__scr.childNodes[i] == surface1) c1 = i; else if(jeash.Lib.mMe.__scr.childNodes[i] == surface2) c2 = i;
	}
	if(c1 != -1 && c2 != -1) {
		swap = jeash.Lib.mMe.__scr.removeChild(jeash.Lib.mMe.__scr.childNodes[c1]);
		if(c2 > c1) c2--;
		if(c2 < jeash.Lib.mMe.__scr.childNodes.length - 1) jeash.Lib.mMe.__scr.insertBefore(swap,jeash.Lib.mMe.__scr.childNodes[c2++]); else jeash.Lib.mMe.__scr.appendChild(swap);
		swap = jeash.Lib.mMe.__scr.removeChild(jeash.Lib.mMe.__scr.childNodes[c2]);
		if(c1 > c2) c1--;
		if(c1 < jeash.Lib.mMe.__scr.childNodes.length - 1) jeash.Lib.mMe.__scr.insertBefore(swap,jeash.Lib.mMe.__scr.childNodes[c1++]); else jeash.Lib.mMe.__scr.appendChild(swap);
	}
	$s.pop();
}
jeash.Lib.jeashIsOnStage = function(surface) {
	$s.push("jeash.Lib::jeashIsOnStage");
	var $spos = $s.length;
	var _g1 = 0, _g = jeash.Lib.mMe.__scr.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(jeash.Lib.mMe.__scr.childNodes[i] == surface) {
			$s.pop();
			return true;
		}
	}
	$s.pop();
	return false;
	$s.pop();
}
jeash.Lib.jeashRemoveSurface = function(surface) {
	$s.push("jeash.Lib::jeashRemoveSurface");
	var $spos = $s.length;
	if(jeash.Lib.mMe.__scr != null) jeash.Lib.mMe.__scr.removeChild(surface);
	$s.pop();
}
jeash.Lib.jeashSetSurfaceTransform = function(surface,matrix) {
	$s.push("jeash.Lib::jeashSetSurfaceTransform");
	var $spos = $s.length;
	if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) {
		surface.style.left = matrix.tx + "px";
		surface.style.top = matrix.ty + "px";
	} else {
		surface.style.setProperty("-moz-transform","matrix(" + matrix.a.toFixed(4) + ", " + matrix.b.toFixed(4) + ", " + matrix.c.toFixed(4) + ", " + matrix.d.toFixed(4) + ", " + matrix.tx.toFixed(4) + "px, " + matrix.ty.toFixed(4) + "px)","");
		surface.style.setProperty("-webkit-transform","matrix(" + matrix.a.toFixed(4) + ", " + matrix.b.toFixed(4) + ", " + matrix.c.toFixed(4) + ", " + matrix.d.toFixed(4) + ", " + matrix.tx.toFixed(4) + ", " + matrix.ty.toFixed(4) + ")","");
		surface.style.setProperty("-o-transform","matrix(" + matrix.a.toFixed(4) + ", " + matrix.b.toFixed(4) + ", " + matrix.c.toFixed(4) + ", " + matrix.d.toFixed(4) + ", " + matrix.tx.toFixed(4) + ", " + matrix.ty.toFixed(4) + ")","");
		surface.style.setProperty("-ms-transform","matrix(" + matrix.a.toFixed(4) + ", " + matrix.b.toFixed(4) + ", " + matrix.c.toFixed(4) + ", " + matrix.d.toFixed(4) + ", " + matrix.tx.toFixed(4) + ", " + matrix.ty.toFixed(4) + ")","");
	}
	$s.pop();
}
jeash.Lib.jeashSetSurfaceOpacity = function(surface,alpha) {
	$s.push("jeash.Lib::jeashSetSurfaceOpacity");
	var $spos = $s.length;
	surface.style.setProperty("opacity",Std.string(alpha),"");
	$s.pop();
}
jeash.Lib.jeashSetSurfaceFont = function(surface,font,bold,size,color,align,lineHeight) {
	$s.push("jeash.Lib::jeashSetSurfaceFont");
	var $spos = $s.length;
	surface.style.setProperty("font-family",font,"");
	surface.style.setProperty("font-weight",Std.string(bold),"");
	surface.style.setProperty("color","#" + StringTools.hex(color),"");
	surface.style.setProperty("font-size",size + "px","");
	surface.style.setProperty("text-align",align,"");
	surface.style.setProperty("line-height",lineHeight + "px","");
	$s.pop();
}
jeash.Lib.jeashSetSurfaceBorder = function(surface,color,size) {
	$s.push("jeash.Lib::jeashSetSurfaceBorder");
	var $spos = $s.length;
	surface.style.setProperty("border-color","#" + StringTools.hex(color),"");
	surface.style.setProperty("border-style","solid","");
	surface.style.setProperty("border-width",size + "px","");
	surface.style.setProperty("border-collapse","collapse","");
	$s.pop();
}
jeash.Lib.jeashSetSurfacePadding = function(surface,padding,margin,display) {
	$s.push("jeash.Lib::jeashSetSurfacePadding");
	var $spos = $s.length;
	surface.style.setProperty("padding",padding + "px","");
	surface.style.setProperty("margin",margin + "px","");
	surface.style.setProperty("top",padding + 2 + "px","");
	surface.style.setProperty("right",padding + 1 + "px","");
	surface.style.setProperty("left",padding + 1 + "px","");
	surface.style.setProperty("bottom",padding + 1 + "px","");
	surface.style.setProperty("display",display?"inline":"block","");
	$s.pop();
}
jeash.Lib.jeashAppendText = function(surface,container,text,wrap,isHtml) {
	$s.push("jeash.Lib::jeashAppendText");
	var $spos = $s.length;
	var _g1 = 0, _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		surface.removeChild(surface.childNodes[i]);
	}
	if(isHtml) container.innerHTML = text; else container.appendChild(js.Lib.document.createTextNode(text));
	container.style.setProperty("position","relative","");
	container.style.setProperty("cursor","default","");
	if(!wrap) container.style.setProperty("white-space","nowrap","");
	surface.appendChild(container);
	$s.pop();
}
jeash.Lib.jeashSetTextDimensions = function(surface,width,height,align) {
	$s.push("jeash.Lib::jeashSetTextDimensions");
	var $spos = $s.length;
	surface.style.setProperty("width",width + "px","");
	surface.style.setProperty("height",height + "px","");
	surface.style.setProperty("overflow","hidden","");
	surface.style.setProperty("text-align",align,"");
	$s.pop();
}
jeash.Lib.jeashSetSurfaceAlign = function(surface,align) {
	$s.push("jeash.Lib::jeashSetSurfaceAlign");
	var $spos = $s.length;
	surface.style.setProperty("text-align",align,"");
	$s.pop();
}
jeash.Lib.jeashSurfaceHitTest = function(surface,x,y) {
	$s.push("jeash.Lib::jeashSurfaceHitTest");
	var $spos = $s.length;
	var _g1 = 0, _g = surface.childNodes.length;
	while(_g1 < _g) {
		var i = _g1++;
		var node = surface.childNodes[i];
		if(x >= node.offsetLeft && x <= node.offsetLeft + node.offsetWidth && y >= node.offsetTop && y <= node.offsetTop + node.offsetHeight) {
			$s.pop();
			return true;
		}
	}
	$s.pop();
	return false;
	$s.pop();
}
jeash.Lib.jeashCopyStyle = function(src,tgt) {
	$s.push("jeash.Lib::jeashCopyStyle");
	var $spos = $s.length;
	tgt.id = src.id;
	var _g = 0, _g1 = ["left","top","-moz-transform","-moz-transform-origin","-webkit-transform","-webkit-transform-origin","-o-transform","-o-transform-origin","opacity","display"];
	while(_g < _g1.length) {
		var prop = _g1[_g];
		++_g;
		tgt.style.setProperty(prop,src.style.getPropertyValue(prop),"");
	}
	$s.pop();
}
jeash.Lib.jeashDrawToSurface = function(surface,tgt,matrix,alpha) {
	$s.push("jeash.Lib::jeashDrawToSurface");
	var $spos = $s.length;
	if(alpha == null) alpha = 1.0;
	var srcCtx = surface.getContext("2d");
	var tgtCtx = tgt.getContext("2d");
	if(alpha != 1.0) tgtCtx.globalAlpha = alpha;
	if(surface.width > 0 && surface.height > 0) {
		if(matrix != null) {
			tgtCtx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) tgtCtx.translate(matrix.tx,matrix.ty); else tgtCtx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			tgtCtx.drawImage(surface,0,0);
			tgtCtx.restore();
		} else tgtCtx.drawImage(surface,0,0);
	}
	$s.pop();
}
jeash.Lib.jeashDisableRightClick = function() {
	$s.push("jeash.Lib::jeashDisableRightClick");
	var $spos = $s.length;
	if(jeash.Lib.mMe != null) try {
		jeash.Lib.mMe.__scr.oncontextmenu = function() {
			$s.push("jeash.Lib::jeashDisableRightClick@381");
			var $spos = $s.length;
			$s.pop();
			return false;
			$s.pop();
		};
	} catch( e ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
		jeash.Lib.trace("Disable right click not supported in this browser.");
	}
	$s.pop();
}
jeash.Lib.jeashEnableRightClick = function() {
	$s.push("jeash.Lib::jeashEnableRightClick");
	var $spos = $s.length;
	if(jeash.Lib.mMe != null) try {
		jeash.Lib.mMe.__scr.oncontextmenu = null;
	} catch( e ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
	}
	$s.pop();
}
jeash.Lib.jeashEnableFullScreen = function() {
	$s.push("jeash.Lib::jeashEnableFullScreen");
	var $spos = $s.length;
	if(jeash.Lib.mMe != null) {
		var origWidth = jeash.Lib.mMe.__scr.style.getPropertyValue("width");
		var origHeight = jeash.Lib.mMe.__scr.style.getPropertyValue("height");
		jeash.Lib.mMe.__scr.style.setProperty("width","100%","");
		jeash.Lib.mMe.__scr.style.setProperty("height","100%","");
		jeash.Lib.jeashDisableFullScreen = function() {
			$s.push("jeash.Lib::jeashEnableFullScreen@406");
			var $spos = $s.length;
			jeash.Lib.mMe.__scr.style.setProperty("width",origWidth,"");
			jeash.Lib.mMe.__scr.style.setProperty("height",origHeight,"");
			$s.pop();
		};
	}
	$s.pop();
}
jeash.Lib.jeashDisableFullScreen = function() {
	$s.push("jeash.Lib::jeashDisableFullScreen");
	var $spos = $s.length;
	$s.pop();
}
jeash.Lib.jeashFullScreenWidth = function() {
	$s.push("jeash.Lib::jeashFullScreenWidth");
	var $spos = $s.length;
	var window = js.Lib.window;
	var $tmp = window.innerWidth;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashFullScreenHeight = function() {
	$s.push("jeash.Lib::jeashFullScreenHeight");
	var $spos = $s.length;
	var window = js.Lib.window;
	var $tmp = window.innerHeight;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashSetCursor = function(type) {
	$s.push("jeash.Lib::jeashSetCursor");
	var $spos = $s.length;
	if(jeash.Lib.mMe != null) jeash.Lib.mMe.__scr.style.cursor = (function($this) {
		var $r;
		switch( (type)[1] ) {
		case 0:
			$r = "pointer";
			break;
		case 1:
			$r = "text";
			break;
		default:
			$r = "default";
		}
		return $r;
	}(this));
	$s.pop();
}
jeash.Lib.jeashSetSurfaceVisible = function(surface,visible) {
	$s.push("jeash.Lib::jeashSetSurfaceVisible");
	var $spos = $s.length;
	if(visible) surface.style.setProperty("display","block",""); else surface.style.setProperty("display","none","");
	$s.pop();
}
jeash.Lib.jeashSetSurfaceId = function(surface,name) {
	$s.push("jeash.Lib::jeashSetSurfaceId");
	var $spos = $s.length;
	surface.id = name;
	$s.pop();
}
jeash.Lib.jeashDrawSurfaceRect = function(surface,tgt,x,y,rect) {
	$s.push("jeash.Lib::jeashDrawSurfaceRect");
	var $spos = $s.length;
	var tgtCtx = tgt.getContext("2d");
	tgt.width = rect.width;
	tgt.height = rect.height;
	tgtCtx.drawImage(surface,rect.x,rect.y,rect.width,rect.height,0,0,rect.width,rect.height);
	tgt.style.left = x + "px";
	tgt.style.top = y + "px";
	$s.pop();
}
jeash.Lib.jeashSetSurfaceScale = function(surface,scale) {
	$s.push("jeash.Lib::jeashSetSurfaceScale");
	var $spos = $s.length;
	surface.style.setProperty("-moz-transform","scale(" + scale + ")","");
	surface.style.setProperty("-webkit-transform","scale(" + scale + ")","");
	surface.style.setProperty("-o-transform","scale(" + scale + ")","");
	surface.style.setProperty("-ms-transform","scale(" + scale + ")","");
	$s.pop();
}
jeash.Lib.jeashSetSurfaceRotation = function(surface,rotate) {
	$s.push("jeash.Lib::jeashSetSurfaceRotation");
	var $spos = $s.length;
	surface.style.setProperty("-moz-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-webkit-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-o-transform","rotate(" + rotate + "deg)","");
	surface.style.setProperty("-ms-transform","rotate(" + rotate + "deg)","");
	$s.pop();
}
jeash.Lib.Run = function(tgt,width,height) {
	$s.push("jeash.Lib::Run");
	var $spos = $s.length;
	jeash.Lib.mMe = new jeash.Lib(tgt.id,width,height);
	jeash.Lib.jeashGetCanvas().width = width;
	jeash.Lib.jeashGetCanvas().height = height;
	if(!StringTools.startsWith(jeash.Lib.context,"swf")) {
		var _g1 = 0, _g = tgt.attributes.length;
		while(_g1 < _g) {
			var i = _g1++;
			var attr = tgt.attributes.item(i);
			if(StringTools.startsWith(attr.name,"data-")) switch(attr.name) {
			case "data-" + "framerate":
				jeash.Lib.jeashGetStage().jeashSetFrameRate(Std.parseFloat(attr.value));
				break;
			default:
			}
		}
		var _g = 0, _g1 = ["touchstart","touchmove","touchend"];
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			tgt.addEventListener(type,($_=jeash.Lib.jeashGetStage(),$_.jeashProcessStageEvent.$bind($_)),true);
		}
		var _g = 0, _g1 = ["resize","mouseup","mouseover","mouseout","mousemove","mousedown","mousewheel","dblclick","click"];
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			tgt.addEventListener(type,($_=jeash.Lib.jeashGetStage(),$_.jeashProcessStageEvent.$bind($_)),true);
		}
		var _g = 0, _g1 = ["keyup","keypress","keydown","resize"];
		while(_g < _g1.length) {
			var type = _g1[_g];
			++_g;
			var window = js.Lib.window;
			window.addEventListener(type,($_=jeash.Lib.jeashGetStage(),$_.jeashProcessStageEvent.$bind($_)),false);
		}
		jeash.Lib.jeashGetStage().jeashSetBackgroundColour(tgt.style.backgroundColor != null && tgt.style.backgroundColor != ""?jeash.Lib.jeashParseColor(tgt.style.backgroundColor,function(res,pos,cur) {
			$s.push("jeash.Lib::Run@504");
			var $spos = $s.length;
			var $tmp = (function($this) {
				var $r;
				switch(pos) {
				case 0:
					$r = res | cur << 16;
					break;
				case 1:
					$r = res | cur << 8;
					break;
				case 2:
					$r = res | cur;
					break;
				}
				return $r;
			}(this));
			$s.pop();
			return $tmp;
			$s.pop();
		}):16777215);
		jeash.Lib.jeashGetCurrent().jeashGetGraphics().beginFill(jeash.Lib.jeashGetStage().jeashGetBackgroundColour());
		jeash.Lib.jeashGetCurrent().jeashGetGraphics().drawRect(0,0,width,height);
		jeash.Lib.jeashGetCurrent().jeashGetGraphics().jeashSurface.id = "Root MovieClip";
		jeash.Lib.mMe.jeashTraceTextField = new jeash.text.TextField();
		jeash.Lib.mMe.jeashTraceTextField.jeashSetWidth(jeash.Lib.jeashGetStage().jeashGetStageWidth());
		jeash.Lib.mMe.jeashTraceTextField.SetWordWrap(true);
		jeash.Lib.jeashGetCurrent().addChild(jeash.Lib.mMe.jeashTraceTextField);
		jeash.Lib.jeashGetStage().jeashUpdateNextWake();
	}
	var $tmp = jeash.Lib.mMe;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashParseColor = function(str,cb) {
	$s.push("jeash.Lib::jeashParseColor");
	var $spos = $s.length;
	var re = new EReg("rgb\\(([0-9]*), ?([0-9]*), ?([0-9]*)\\)","");
	var hex = new EReg("#([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])([0-9a-zA-Z][0-9a-zA-Z])","");
	if(re.match(str)) {
		var col = 0;
		var _g = 1;
		while(_g < 4) {
			var pos = _g++;
			var v = Std.parseInt(re.matched(pos));
			col = cb(col,pos - 1,v);
		}
		$s.pop();
		return col;
	} else if(hex.match(str)) {
		var col = 0;
		var _g = 1;
		while(_g < 4) {
			var pos = _g++;
			var v = "0x" + hex.matched(pos) & 255;
			v = cb(col,pos - 1,v);
		}
		$s.pop();
		return col;
	} else throw "Cannot parse color '" + str + "'.";
	$s.pop();
}
jeash.Lib.jeashGetWidth = function() {
	$s.push("jeash.Lib::jeashGetWidth");
	var $spos = $s.length;
	var tgt = js.Lib.document.getElementById("haxe:jeash");
	var $tmp = tgt.clientWidth > 0?tgt.clientWidth:500;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashGetHeight = function() {
	$s.push("jeash.Lib::jeashGetHeight");
	var $spos = $s.length;
	var tgt = js.Lib.document.getElementById("haxe:jeash");
	var $tmp = tgt.clientHeight > 0?tgt.clientHeight:500;
	$s.pop();
	return $tmp;
	$s.pop();
}
jeash.Lib.jeashBootstrap = function() {
	$s.push("jeash.Lib::jeashBootstrap");
	var $spos = $s.length;
	var tgt = js.Lib.document.getElementById("haxe:jeash");
	var lib = jeash.Lib.Run(tgt,jeash.Lib.jeashGetWidth(),jeash.Lib.jeashGetHeight());
	$s.pop();
	return lib;
	$s.pop();
}
jeash.Lib.prototype = {
	mKilled: null
	,mRequestedWidth: null
	,mRequestedHeight: null
	,mResizePending: null
	,__scr: null
	,mArgs: null
	,jeashTraceTextField: null
	,__class__: jeash.Lib
}
if(!jeash._Lib) jeash._Lib = {}
jeash._Lib.CursorType = $hxClasses["jeash._Lib.CursorType"] = { __ename__ : ["jeash","_Lib","CursorType"], __constructs__ : ["Pointer","Text","Default"] }
jeash._Lib.CursorType.Pointer = ["Pointer",0];
jeash._Lib.CursorType.Pointer.toString = $estr;
jeash._Lib.CursorType.Pointer.__enum__ = jeash._Lib.CursorType;
jeash._Lib.CursorType.Text = ["Text",1];
jeash._Lib.CursorType.Text.toString = $estr;
jeash._Lib.CursorType.Text.__enum__ = jeash._Lib.CursorType;
jeash._Lib.CursorType.Default = ["Default",2];
jeash._Lib.CursorType.Default.toString = $estr;
jeash._Lib.CursorType.Default.__enum__ = jeash._Lib.CursorType;
haxe.io.Eof = $hxClasses["haxe.io.Eof"] = function() {
	$s.push("haxe.io.Eof::new");
	var $spos = $s.length;
	$s.pop();
}
haxe.io.Eof.__name__ = ["haxe","io","Eof"];
haxe.io.Eof.prototype = {
	toString: function() {
		$s.push("haxe.io.Eof::toString");
		var $spos = $s.length;
		$s.pop();
		return "Eof";
		$s.pop();
	}
	,__class__: haxe.io.Eof
}
jeash.text.TextFieldAutoSize = $hxClasses["jeash.text.TextFieldAutoSize"] = function() {
	$s.push("jeash.text.TextFieldAutoSize::new");
	var $spos = $s.length;
	$s.pop();
}
jeash.text.TextFieldAutoSize.__name__ = ["jeash","text","TextFieldAutoSize"];
jeash.text.TextFieldAutoSize.prototype = {
	__class__: jeash.text.TextFieldAutoSize
}
jeash.display.IGraphicsStroke = $hxClasses["jeash.display.IGraphicsStroke"] = function() { }
jeash.display.IGraphicsStroke.__name__ = ["jeash","display","IGraphicsStroke"];
jeash.display.IGraphicsStroke.prototype = {
	__class__: jeash.display.IGraphicsStroke
}
jeash.display.GraphicsStroke = $hxClasses["jeash.display.GraphicsStroke"] = function(thickness,pixelHinting,scaleMode,caps,joints,miterLimit,fill) {
	$s.push("jeash.display.GraphicsStroke::new");
	var $spos = $s.length;
	if(miterLimit == null) miterLimit = 3;
	if(pixelHinting == null) pixelHinting = false;
	if(thickness == null) thickness = 0.;
	this.caps = caps != null?caps:null;
	this.fill = fill;
	this.joints = joints != null?joints:null;
	this.miterLimit = miterLimit;
	this.pixelHinting = pixelHinting;
	this.scaleMode = scaleMode != null?scaleMode:null;
	this.thickness = thickness;
	this.jeashGraphicsDataType = jeash.display.GraphicsDataType.STROKE;
	$s.pop();
}
jeash.display.GraphicsStroke.__name__ = ["jeash","display","GraphicsStroke"];
jeash.display.GraphicsStroke.__interfaces__ = [jeash.display.IGraphicsStroke,jeash.display.IGraphicsData];
jeash.display.GraphicsStroke.prototype = {
	caps: null
	,fill: null
	,joints: null
	,miterLimit: null
	,pixelHinting: null
	,scaleMode: null
	,thickness: null
	,jeashGraphicsDataType: null
	,__class__: jeash.display.GraphicsStroke
}
jeash.display.Shape = $hxClasses["jeash.display.Shape"] = function() {
	$s.push("jeash.display.Shape::new");
	var $spos = $s.length;
	jeash.Lib.jeashGetCanvas();
	this.jeashGraphics = new jeash.display.Graphics();
	if(this.jeashGraphics != null) this.jeashGraphics.owner = this;
	jeash.display.DisplayObject.call(this);
	this.name = "Shape " + jeash.display.DisplayObject.mNameID++;
	$s.pop();
}
jeash.display.Shape.__name__ = ["jeash","display","Shape"];
jeash.display.Shape.__super__ = jeash.display.DisplayObject;
jeash.display.Shape.prototype = $extend(jeash.display.DisplayObject.prototype,{
	jeashGraphics: null
	,graphics: null
	,jeashGetGraphics: function() {
		$s.push("jeash.display.Shape::jeashGetGraphics");
		var $spos = $s.length;
		var $tmp = this.jeashGraphics;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.display.Shape::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,__class__: jeash.display.Shape
	,__properties__: $extend(jeash.display.DisplayObject.prototype.__properties__,{get_graphics:"jeashGetGraphics"})
});
if(!jeash.utils) jeash.utils = {}
jeash.utils.ByteArray = $hxClasses["jeash.utils.ByteArray"] = function() {
	$s.push("jeash.utils.ByteArray::new");
	var $spos = $s.length;
	this.position = 0;
	this.data = [];
	this.TWOeN23 = Math.pow(2,-23);
	this.pow = Math.pow;
	this.LN2 = Math.log(2);
	this.abs = Math.abs;
	this.log = Math.log;
	this.floor = Math.floor;
	this.bigEndian = false;
	$s.pop();
}
jeash.utils.ByteArray.__name__ = ["jeash","utils","ByteArray"];
jeash.utils.ByteArray.prototype = {
	data: null
	,bigEndian: null
	,bytesAvailable: null
	,endian: null
	,objectEncoding: null
	,position: null
	,length: null
	,TWOeN23: null
	,pow: null
	,LN2: null
	,abs: null
	,log: null
	,floor: null
	,GetBytesAvailable: function() {
		$s.push("jeash.utils.ByteArray::GetBytesAvailable");
		var $spos = $s.length;
		var $tmp = this.GetLength() - this.position;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readString: function(len) {
		$s.push("jeash.utils.ByteArray::readString");
		var $spos = $s.length;
		var bytes = haxe.io.Bytes.alloc(len);
		this.readFullBytes(bytes,0,len);
		var $tmp = bytes.toString();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readFullBytes: function(bytes,pos,len) {
		$s.push("jeash.utils.ByteArray::readFullBytes");
		var $spos = $s.length;
		var _g1 = pos, _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			this.data[this.position++] = bytes.b[i];
		}
		$s.pop();
	}
	,read: function(nbytes) {
		$s.push("jeash.utils.ByteArray::read");
		var $spos = $s.length;
		var s = new jeash.utils.ByteArray();
		this.readBytes(s,0,nbytes);
		var $tmp = haxe.io.Bytes.ofData(s.data);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetLength: function() {
		$s.push("jeash.utils.ByteArray::GetLength");
		var $spos = $s.length;
		var $tmp = this.data.length;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readByte: function() {
		$s.push("jeash.utils.ByteArray::readByte");
		var $spos = $s.length;
		if(this.position >= this.GetLength()) throw new jeash.errors.IOError("Read error - Out of bounds");
		var $tmp = this.data[this.position++];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readBytes: function(bytes,offset,length) {
		$s.push("jeash.utils.ByteArray::readBytes");
		var $spos = $s.length;
		if(offset < 0 || length < 0 || offset + length > this.data.length) throw new jeash.errors.IOError("Read error - Out of bounds");
		if(this.data.length == 0 && length > 0) throw new jeash.errors.IOError("Read error - Out of bounds");
		if(this.data.length < length) length = this.data.length;
		var b1 = this.data;
		var b2 = bytes;
		b2.position = offset;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			b2.writeByte(b1[this.position + i]);
		}
		b2.position = offset;
		this.position += length;
		$s.pop();
	}
	,writeByte: function(value) {
		$s.push("jeash.utils.ByteArray::writeByte");
		var $spos = $s.length;
		this.data[this.position++] = value;
		$s.pop();
	}
	,writeBytes: function(bytes,offset,length) {
		$s.push("jeash.utils.ByteArray::writeBytes");
		var $spos = $s.length;
		if(offset < 0 || length < 0 || offset + length > bytes.GetLength()) throw new jeash.errors.IOError("Write error - Out of bounds");
		var b2 = bytes;
		b2.position = offset;
		var _g = 0;
		while(_g < length) {
			var i = _g++;
			this.data[this.position++] = b2.readByte();
		}
		$s.pop();
	}
	,readBoolean: function() {
		$s.push("jeash.utils.ByteArray::readBoolean");
		var $spos = $s.length;
		var $tmp = this.readByte() == 1?true:false;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeBoolean: function(value) {
		$s.push("jeash.utils.ByteArray::writeBoolean");
		var $spos = $s.length;
		this.writeByte(value?1:0);
		$s.pop();
	}
	,readDouble: function() {
		$s.push("jeash.utils.ByteArray::readDouble");
		var $spos = $s.length;
		var data = this.data, pos, b1, b2, b3, b4, b5, b6, b7, b8;
		if(this.bigEndian) {
			pos = (this.position += 8) - 8;
			b1 = data[pos] & 255;
			b2 = data[++pos] & 255;
			b3 = data[++pos] & 255;
			b4 = data[++pos] & 255;
			b5 = data[++pos] & 255;
			b6 = data[++pos] & 255;
			b7 = data[++pos] & 255;
			b8 = data[++pos] & 255;
		} else {
			pos = this.position += 8;
			b1 = data[--pos] & 255;
			b2 = data[--pos] & 255;
			b3 = data[--pos] & 255;
			b4 = data[--pos] & 255;
			b5 = data[--pos] & 255;
			b6 = data[--pos] & 255;
			b7 = data[--pos] & 255;
			b8 = data[--pos] & 255;
		}
		var sign = 1 - (b1 >> 7 << 1);
		var exp = (b1 << 4 & 2047 | b2 >> 4) - 1023;
		var sig = parseInt((((b2 & 15) << 16 | b3 << 8 | b4) * this.pow(2,32)).toString(2),2) + parseInt(((b5 >> 7) * this.pow(2,31)).toString(2),2) + parseInt(((b5 & 127) << 24 | b6 << 16 | b7 << 8 | b8).toString(2),2);
		if(sig == 0 && exp == -1023) {
			$s.pop();
			return 0.0;
		}
		var $tmp = sign * (1.0 + this.pow(2,-52) * sig) * this.pow(2,exp);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeDouble: function(x) {
		$s.push("jeash.utils.ByteArray::writeDouble");
		var $spos = $s.length;
		if(x == 0.0) {
			var _g = 0;
			while(_g < 8) {
				var _ = _g++;
				this.data[this.position++] = 0;
			}
		}
		var exp = this.floor(this.log(this.abs(x)) / this.LN2);
		var sig = this.floor(this.abs(x) / this.pow(2,exp) * this.pow(2,52));
		var sig_h = sig & 34359738367;
		var sig_l = this.floor(sig / this.pow(2,32));
		var b1 = exp + 1023 >> 4 | (exp > 0?x < 0?128:64:x < 0?128:0), b2 = exp + 1023 << 4 & 255 | sig_l >> 16 & 15, b3 = sig_l >> 8 & 255, b4 = sig_l & 255, b5 = sig_h >> 24 & 255, b6 = sig_h >> 16 & 255, b7 = sig_h >> 8 & 255, b8 = sig_h & 255;
		if(this.bigEndian) {
			this.data[this.position++] = b1;
			this.data[this.position++] = b2;
			this.data[this.position++] = b3;
			this.data[this.position++] = b4;
			this.data[this.position++] = b5;
			this.data[this.position++] = b6;
			this.data[this.position++] = b7;
			this.data[this.position++] = b8;
		} else {
			this.data[this.position++] = b8;
			this.data[this.position++] = b7;
			this.data[this.position++] = b6;
			this.data[this.position++] = b5;
			this.data[this.position++] = b4;
			this.data[this.position++] = b3;
			this.data[this.position++] = b2;
			this.data[this.position++] = b1;
		}
		$s.pop();
	}
	,readFloat: function() {
		$s.push("jeash.utils.ByteArray::readFloat");
		var $spos = $s.length;
		var data = this.data, pos, b1, b2, b3, b4;
		if(this.bigEndian) {
			pos = (this.position += 4) - 4;
			b1 = data[pos] & 255;
			b2 = data[++pos] & 255;
			b3 = data[++pos] & 255;
			b4 = data[++pos] & 255;
		} else {
			pos = this.position += 4;
			b1 = data[--pos] & 255;
			b2 = data[--pos] & 255;
			b3 = data[--pos] & 255;
			b4 = data[--pos] & 255;
		}
		var sign = 1 - (b1 >> 7 << 1);
		var exp = (b1 << 1 & 255 | b2 >> 7) - 127;
		var sig = (b2 & 127) << 16 | b3 << 8 | b4;
		if(sig == 0 && exp == -127) {
			$s.pop();
			return 0.0;
		}
		var $tmp = sign * (1 + this.TWOeN23 * sig) * this.pow(2,exp);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeFloat: function(x) {
		$s.push("jeash.utils.ByteArray::writeFloat");
		var $spos = $s.length;
		if(x == 0.0) {
			var _g = 0;
			while(_g < 4) {
				var _ = _g++;
				this.data[this.position++] = 0;
			}
		}
		var exp = this.floor(this.log(this.abs(x)) / this.LN2);
		var sig = this.floor(this.abs(x) / this.pow(2,exp) * this.pow(2,23)) & 8388607;
		var b1 = exp + 127 >> 1 | (exp > 0?x < 0?128:64:x < 0?128:0), b2 = exp + 127 << 7 & 255 | sig >> 16 & 127, b3 = sig >> 8 & 255, b4 = sig & 255;
		if(this.bigEndian) {
			this.data[this.position++] = b1;
			this.data[this.position++] = b2;
			this.data[this.position++] = b3;
			this.data[this.position++] = b4;
		} else {
			this.data[this.position++] = b4;
			this.data[this.position++] = b3;
			this.data[this.position++] = b2;
			this.data[this.position++] = b1;
		}
		$s.pop();
	}
	,readInt: function() {
		$s.push("jeash.utils.ByteArray::readInt");
		var $spos = $s.length;
		var ch1, ch2, ch3, ch4;
		if(this.bigEndian) {
			ch4 = this.readByte();
			ch3 = this.readByte();
			ch2 = this.readByte();
			ch1 = this.readByte();
		} else {
			ch1 = this.readByte();
			ch2 = this.readByte();
			ch3 = this.readByte();
			ch4 = this.readByte();
		}
		var $tmp = ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeInt: function(value) {
		$s.push("jeash.utils.ByteArray::writeInt");
		var $spos = $s.length;
		if(this.bigEndian) {
			this.writeByte(value >>> 24);
			this.writeByte(value >> 16 & 255);
			this.writeByte(value >> 8 & 255);
			this.writeByte(value & 255);
		} else {
			this.writeByte(value & 255);
			this.writeByte(value >> 8 & 255);
			this.writeByte(value >> 16 & 255);
			this.writeByte(value >>> 24);
		}
		$s.pop();
	}
	,readShort: function() {
		$s.push("jeash.utils.ByteArray::readShort");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian?ch2 | ch1 << 8:ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			var $tmp = n - 65536;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return n;
		$s.pop();
	}
	,writeShort: function(value) {
		$s.push("jeash.utils.ByteArray::writeShort");
		var $spos = $s.length;
		if(value < -32768 || value >= 32768) throw new jeash.errors.IOError("Write error - overflow");
		this.writeUnsignedShort(value & 65535);
		$s.pop();
	}
	,writeUnsignedShort: function(value) {
		$s.push("jeash.utils.ByteArray::writeUnsignedShort");
		var $spos = $s.length;
		if(value < 0 || value >= 65536) throw new jeash.errors.IOError("Write error - overflow");
		if(this.__GetEndian() == jeash.utils.Endian.BIG_ENDIAN) {
			this.writeByte(value >> 8);
			this.writeByte(value & 255);
		} else {
			this.writeByte(value & 255);
			this.writeByte(value >> 8);
		}
		$s.pop();
	}
	,readUTF: function() {
		$s.push("jeash.utils.ByteArray::readUTF");
		var $spos = $s.length;
		var len = this.readShort();
		var bytes = haxe.io.Bytes.ofData(this.data);
		var $tmp = bytes.readString(2,len);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeUTF: function(value) {
		$s.push("jeash.utils.ByteArray::writeUTF");
		var $spos = $s.length;
		var bytes = haxe.io.Bytes.ofString(value);
		this.writeShort(bytes.length);
		var _g1 = 0, _g = bytes.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.data[this.position++] = bytes.b[i];
		}
		$s.pop();
	}
	,writeUTFBytes: function(value) {
		$s.push("jeash.utils.ByteArray::writeUTFBytes");
		var $spos = $s.length;
		var bytes = haxe.io.Bytes.ofString(value);
		var _g1 = 0, _g = bytes.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.data[this.position++] = bytes.b[i];
		}
		$s.pop();
	}
	,readUTFBytes: function(len) {
		$s.push("jeash.utils.ByteArray::readUTFBytes");
		var $spos = $s.length;
		var bytes = haxe.io.Bytes.ofData(this.data);
		var $tmp = bytes.readString(0,len);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readUnsignedByte: function() {
		$s.push("jeash.utils.ByteArray::readUnsignedByte");
		var $spos = $s.length;
		var $tmp = this.readByte();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readUnsignedShort: function() {
		$s.push("jeash.utils.ByteArray::readUnsignedShort");
		var $spos = $s.length;
		var $tmp = this.readShort();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readUnsignedInt: function() {
		$s.push("jeash.utils.ByteArray::readUnsignedInt");
		var $spos = $s.length;
		var $tmp = this.readInt();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,writeUnsignedInt: function(value) {
		$s.push("jeash.utils.ByteArray::writeUnsignedInt");
		var $spos = $s.length;
		this.writeInt(value);
		$s.pop();
	}
	,__GetEndian: function() {
		$s.push("jeash.utils.ByteArray::__GetEndian");
		var $spos = $s.length;
		if(this.bigEndian == true) {
			var $tmp = jeash.utils.Endian.BIG_ENDIAN;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = jeash.utils.Endian.LITTLE_ENDIAN;
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,__SetEndian: function(endian) {
		$s.push("jeash.utils.ByteArray::__SetEndian");
		var $spos = $s.length;
		if(endian == jeash.utils.Endian.BIG_ENDIAN) this.bigEndian = true; else this.bigEndian = false;
		$s.pop();
		return endian;
		$s.pop();
	}
	,__class__: jeash.utils.ByteArray
	,__properties__: {get_length:"GetLength",set_endian:"__SetEndian",get_endian:"__GetEndian",get_bytesAvailable:"GetBytesAvailable"}
}
haxe.io.Input = $hxClasses["haxe.io.Input"] = function() { }
haxe.io.Input.__name__ = ["haxe","io","Input"];
haxe.io.Input.prototype = {
	bigEndian: null
	,readByte: function() {
		$s.push("haxe.io.Input::readByte");
		var $spos = $s.length;
		var $tmp = (function($this) {
			var $r;
			throw "Not implemented";
			return $r;
		}(this));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readBytes: function(s,pos,len) {
		$s.push("haxe.io.Input::readBytes");
		var $spos = $s.length;
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) throw haxe.io.Error.OutsideBounds;
		while(k > 0) {
			b[pos] = this.readByte();
			pos++;
			k--;
		}
		$s.pop();
		return len;
		$s.pop();
	}
	,close: function() {
		$s.push("haxe.io.Input::close");
		var $spos = $s.length;
		$s.pop();
	}
	,setEndian: function(b) {
		$s.push("haxe.io.Input::setEndian");
		var $spos = $s.length;
		this.bigEndian = b;
		$s.pop();
		return b;
		$s.pop();
	}
	,readAll: function(bufsize) {
		$s.push("haxe.io.Input::readAll");
		var $spos = $s.length;
		if(bufsize == null) bufsize = 16384;
		var buf = haxe.io.Bytes.alloc(bufsize);
		var total = new haxe.io.BytesBuffer();
		try {
			while(true) {
				var len = this.readBytes(buf,0,bufsize);
				if(len == 0) throw haxe.io.Error.Blocked;
				total.addBytes(buf,0,len);
			}
		} catch( e ) {
			if( js.Boot.__instanceof(e,haxe.io.Eof) ) {
				$e = [];
				while($s.length >= $spos) $e.unshift($s.pop());
				$s.push($e[0]);
			} else throw(e);
		}
		var $tmp = total.getBytes();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readFullBytes: function(s,pos,len) {
		$s.push("haxe.io.Input::readFullBytes");
		var $spos = $s.length;
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			pos += k;
			len -= k;
		}
		$s.pop();
	}
	,read: function(nbytes) {
		$s.push("haxe.io.Input::read");
		var $spos = $s.length;
		var s = haxe.io.Bytes.alloc(nbytes);
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) throw haxe.io.Error.Blocked;
			p += k;
			nbytes -= k;
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,readUntil: function(end) {
		$s.push("haxe.io.Input::readUntil");
		var $spos = $s.length;
		var buf = new StringBuf();
		var last;
		while((last = this.readByte()) != end) buf.b[buf.b.length] = String.fromCharCode(last);
		var $tmp = buf.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readLine: function() {
		$s.push("haxe.io.Input::readLine");
		var $spos = $s.length;
		var buf = new StringBuf();
		var last;
		var s;
		try {
			while((last = this.readByte()) != 10) buf.b[buf.b.length] = String.fromCharCode(last);
			s = buf.b.join("");
			if(s.charCodeAt(s.length - 1) == 13) s = s.substr(0,-1);
		} catch( e ) {
			if( js.Boot.__instanceof(e,haxe.io.Eof) ) {
				$e = [];
				while($s.length >= $spos) $e.unshift($s.pop());
				$s.push($e[0]);
				s = buf.b.join("");
				if(s.length == 0) throw e;
			} else throw(e);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,readFloat: function() {
		$s.push("haxe.io.Input::readFloat");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
		return 0;
		$s.pop();
	}
	,readDouble: function() {
		$s.push("haxe.io.Input::readDouble");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
		return 0;
		$s.pop();
	}
	,readInt8: function() {
		$s.push("haxe.io.Input::readInt8");
		var $spos = $s.length;
		var n = this.readByte();
		if(n >= 128) {
			var $tmp = n - 256;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return n;
		$s.pop();
	}
	,readInt16: function() {
		$s.push("haxe.io.Input::readInt16");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian?ch2 | ch1 << 8:ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			var $tmp = n - 65536;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return n;
		$s.pop();
	}
	,readUInt16: function() {
		$s.push("haxe.io.Input::readUInt16");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var $tmp = this.bigEndian?ch2 | ch1 << 8:ch1 | ch2 << 8;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readInt24: function() {
		$s.push("haxe.io.Input::readInt24");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var n = this.bigEndian?ch3 | ch2 << 8 | ch1 << 16:ch1 | ch2 << 8 | ch3 << 16;
		if((n & 8388608) != 0) {
			var $tmp = n - 16777216;
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return n;
		$s.pop();
	}
	,readUInt24: function() {
		$s.push("haxe.io.Input::readUInt24");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var $tmp = this.bigEndian?ch3 | ch2 << 8 | ch1 << 16:ch1 | ch2 << 8 | ch3 << 16;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readInt31: function() {
		$s.push("haxe.io.Input::readInt31");
		var $spos = $s.length;
		var ch1, ch2, ch3, ch4;
		if(this.bigEndian) {
			ch4 = this.readByte();
			ch3 = this.readByte();
			ch2 = this.readByte();
			ch1 = this.readByte();
		} else {
			ch1 = this.readByte();
			ch2 = this.readByte();
			ch3 = this.readByte();
			ch4 = this.readByte();
		}
		if((ch4 & 128) == 0 != ((ch4 & 64) == 0)) throw haxe.io.Error.Overflow;
		var $tmp = ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readUInt30: function() {
		$s.push("haxe.io.Input::readUInt30");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if((this.bigEndian?ch1:ch4) >= 64) throw haxe.io.Error.Overflow;
		var $tmp = this.bigEndian?ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24:ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readInt32: function() {
		$s.push("haxe.io.Input::readInt32");
		var $spos = $s.length;
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		var $tmp = this.bigEndian?(ch1 << 8 | ch2) << 16 | (ch3 << 8 | ch4):(ch4 << 8 | ch3) << 16 | (ch2 << 8 | ch1);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readString: function(len) {
		$s.push("haxe.io.Input::readString");
		var $spos = $s.length;
		var b = haxe.io.Bytes.alloc(len);
		this.readFullBytes(b,0,len);
		var $tmp = b.toString();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: haxe.io.Input
	,__properties__: {set_bigEndian:"setEndian"}
}
haxe.io.BytesInput = $hxClasses["haxe.io.BytesInput"] = function(b,pos,len) {
	$s.push("haxe.io.BytesInput::new");
	var $spos = $s.length;
	if(pos == null) pos = 0;
	if(len == null) len = b.length - pos;
	if(pos < 0 || len < 0 || pos + len > b.length) throw haxe.io.Error.OutsideBounds;
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	$s.pop();
}
haxe.io.BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe.io.BytesInput.__super__ = haxe.io.Input;
haxe.io.BytesInput.prototype = $extend(haxe.io.Input.prototype,{
	b: null
	,pos: null
	,len: null
	,readByte: function() {
		$s.push("haxe.io.BytesInput::readByte");
		var $spos = $s.length;
		if(this.len == 0) throw new haxe.io.Eof();
		this.len--;
		var $tmp = this.b[this.pos++];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readBytes: function(buf,pos,len) {
		$s.push("haxe.io.BytesInput::readBytes");
		var $spos = $s.length;
		if(pos < 0 || len < 0 || pos + len > buf.length) throw haxe.io.Error.OutsideBounds;
		if(this.len == 0 && len > 0) throw new haxe.io.Eof();
		if(this.len < len) len = this.len;
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		$s.pop();
		return len;
		$s.pop();
	}
	,__class__: haxe.io.BytesInput
});
de.polygonal.ASE = $hxClasses["de.polygonal.ASE"] = function(x,info) {
	$s.push("de.polygonal.ASE::new");
	var $spos = $s.length;
	if(x != null) this.message = "Assertation '" + x + "' failed in file" + info.fileName + "line " + info.lineNumber + ", " + info.className + "::" + info.methodName; else this.message = "Assertation failed in file" + info.fileName + "line " + info.lineNumber + ", " + info.className + "::" + info.methodName;
	$s.pop();
}
de.polygonal.ASE.__name__ = ["de","polygonal","ASE"];
de.polygonal.ASE.prototype = {
	toString: function() {
		$s.push("de.polygonal.ASE::toString");
		var $spos = $s.length;
		var $tmp = this.message;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,message: null
	,__class__: de.polygonal.ASE
}
if(!jeash.net) jeash.net = {}
jeash.net.URLRequest = $hxClasses["jeash.net.URLRequest"] = function(inURL) {
	$s.push("jeash.net.URLRequest::new");
	var $spos = $s.length;
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	$s.pop();
}
jeash.net.URLRequest.__name__ = ["jeash","net","URLRequest"];
jeash.net.URLRequest.prototype = {
	url: null
	,requestHeaders: null
	,method: null
	,data: null
	,__class__: jeash.net.URLRequest
}
if(!com.wighawag.signals) com.wighawag.signals = {}
com.wighawag.signals.ExtendedSignaler = $hxClasses["com.wighawag.signals.ExtendedSignaler"] = function(subject,rejectNullData) {
	$s.push("com.wighawag.signals.ExtendedSignaler::new");
	var $spos = $s.length;
	this.subject = subject;
	this.signaler = new hsl.haxe.DirectSignaler(subject,rejectNullData);
	$s.pop();
}
com.wighawag.signals.ExtendedSignaler.__name__ = ["com","wighawag","signals","ExtendedSignaler"];
com.wighawag.signals.ExtendedSignaler.__interfaces__ = [hsl.haxe.Signaler];
com.wighawag.signals.ExtendedSignaler.prototype = {
	signaler: null
	,isListenedTo: null
	,subject: null
	,dataAvailable: null
	,data: null
	,filter: null
	,setData: function(value) {
		$s.push("com.wighawag.signals.ExtendedSignaler::setData");
		var $spos = $s.length;
		this.data = value;
		this.dataAvailable = true;
		$s.pop();
	}
	,setFilter: function(f) {
		$s.push("com.wighawag.signals.ExtendedSignaler::setFilter");
		var $spos = $s.length;
		this.filter = f;
		$s.pop();
	}
	,addBubblingTarget: function(value) {
		$s.push("com.wighawag.signals.ExtendedSignaler::addBubblingTarget");
		var $spos = $s.length;
		this.signaler.addBubblingTarget(value);
		$s.pop();
	}
	,addNotificationTarget: function(value) {
		$s.push("com.wighawag.signals.ExtendedSignaler::addNotificationTarget");
		var $spos = $s.length;
		this.signaler.addNotificationTarget(value);
		$s.pop();
	}
	,bind: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::bind");
		var $spos = $s.length;
		var bond = this.signaler.bind(listener);
		if(this.dataAvailable) {
			if(this.filter != null) this.data = this.filter(this.data);
			listener(this.data);
		}
		$s.pop();
		return bond;
		$s.pop();
	}
	,bindAdvanced: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::bindAdvanced");
		var $spos = $s.length;
		var bond = this.signaler.bindAdvanced(listener);
		if(this.dataAvailable) {
			if(this.filter != null) this.data = this.filter(this.data);
			listener(new hsl.haxe.Signal(this.data,bond,this.subject,this.subject));
		}
		$s.pop();
		return bond;
		$s.pop();
	}
	,bindVoid: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::bindVoid");
		var $spos = $s.length;
		var bond = this.signaler.bindVoid(listener);
		if(this.dataAvailable) listener();
		$s.pop();
		return bond;
		$s.pop();
	}
	,dispatch: function(data,origin,positionInformation) {
		$s.push("com.wighawag.signals.ExtendedSignaler::dispatch");
		var $spos = $s.length;
		if(this.filter != null) data = this.filter(data);
		this.signaler.dispatch(data,origin,positionInformation);
		$s.pop();
	}
	,getIsListenedTo: function() {
		$s.push("com.wighawag.signals.ExtendedSignaler::getIsListenedTo");
		var $spos = $s.length;
		if(this.filter != null) this.data = this.filter(this.data);
		var $tmp = this.signaler.getIsListenedTo();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,removeBubblingTarget: function(value) {
		$s.push("com.wighawag.signals.ExtendedSignaler::removeBubblingTarget");
		var $spos = $s.length;
		this.signaler.removeBubblingTarget(value);
		$s.pop();
	}
	,removeNotificationTarget: function(value) {
		$s.push("com.wighawag.signals.ExtendedSignaler::removeNotificationTarget");
		var $spos = $s.length;
		this.signaler.removeNotificationTarget(value);
		$s.pop();
	}
	,unbind: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::unbind");
		var $spos = $s.length;
		this.signaler.unbind(listener);
		$s.pop();
	}
	,unbindAdvanced: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::unbindAdvanced");
		var $spos = $s.length;
		this.signaler.unbindAdvanced(listener);
		$s.pop();
	}
	,unbindVoid: function(listener) {
		$s.push("com.wighawag.signals.ExtendedSignaler::unbindVoid");
		var $spos = $s.length;
		this.signaler.unbindVoid(listener);
		$s.pop();
	}
	,__class__: com.wighawag.signals.ExtendedSignaler
	,__properties__: {get_isListenedTo:"getIsListenedTo"}
}
jeash.media.Sound = $hxClasses["jeash.media.Sound"] = function(stream,context) {
	$s.push("jeash.media.Sound::new");
	var $spos = $s.length;
	jeash.events.EventDispatcher.call(this,this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.id3 = null;
	this.isBuffering = false;
	this.length = 0;
	this.url = null;
	this.jeashSoundChannels = new IntHash();
	this.jeashSoundIdx = 0;
	if(stream != null) this.load(stream,context);
	$s.pop();
}
jeash.media.Sound.__name__ = ["jeash","media","Sound"];
jeash.media.Sound.jeashCanPlayType = function(extension) {
	$s.push("jeash.media.Sound::jeashCanPlayType");
	var $spos = $s.length;
	var audio = js.Lib.document.createElement("audio");
	var playable = function(ok) {
		$s.push("jeash.media.Sound::jeashCanPlayType@85");
		var $spos = $s.length;
		if(ok != "" && ok != "no") {
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	};
	switch(extension) {
	case "mp3":
		var $tmp = playable(audio.canPlayType("audio/mpeg"));
		$s.pop();
		return $tmp;
	case "ogg":
		var $tmp = playable(audio.canPlayType("audio/ogg; codecs=\"vorbis\""));
		$s.pop();
		return $tmp;
	case "wav":
		var $tmp = playable(audio.canPlayType("audio/wav; codecs=\"1\""));
		$s.pop();
		return $tmp;
	case "aac":
		var $tmp = playable(audio.canPlayType("audio/mp4; codecs=\"mp4a.40.2\""));
		$s.pop();
		return $tmp;
	default:
		$s.pop();
		return false;
	}
	$s.pop();
}
jeash.media.Sound.__super__ = jeash.events.EventDispatcher;
jeash.media.Sound.prototype = $extend(jeash.events.EventDispatcher.prototype,{
	bytesLoaded: null
	,bytesTotal: null
	,id3: null
	,isBuffering: null
	,length: null
	,url: null
	,jeashStreamUrl: null
	,jeashSoundChannels: null
	,jeashSoundIdx: null
	,jeashSoundCache: null
	,jeashCreateAudio: function() {
		$s.push("jeash.media.Sound::jeashCreateAudio");
		var $spos = $s.length;
		$s.pop();
	}
	,close: function() {
		$s.push("jeash.media.Sound::close");
		var $spos = $s.length;
		$s.pop();
	}
	,load: function(stream,context) {
		$s.push("jeash.media.Sound::load");
		var $spos = $s.length;
		var url = stream.url.split("?");
		var extension = url[0].substr(url[0].lastIndexOf(".") + 1);
		if(!jeash.media.Sound.jeashCanPlayType(extension.toLowerCase())) jeash.Lib.trace("Warning: '" + stream.url + "' may not play on this browser.");
		this.jeashStreamUrl = stream.url;
		this.jeashSoundCache = new jeash.net.URLLoader(stream);
		$s.pop();
	}
	,play: function(startTime,loops,sndTransform) {
		$s.push("jeash.media.Sound::play");
		var $spos = $s.length;
		if(loops == null) loops = 0;
		if(startTime == null) startTime = 0.0;
		if(this.jeashStreamUrl == null) {
			$s.pop();
			return null;
		}
		var self = this;
		var curIdx = this.jeashSoundIdx;
		var removeRef = function() {
			$s.push("jeash.media.Sound::play@150");
			var $spos = $s.length;
			self.jeashSoundChannels.remove(curIdx);
			$s.pop();
		};
		var channel = jeash.media.SoundChannel.jeashCreate(this.jeashStreamUrl,startTime,loops,sndTransform,removeRef);
		this.jeashSoundChannels.set(curIdx,channel);
		this.jeashSoundIdx++;
		var audio = channel.jeashAudio;
		this.jeashAddEventListeners(audio);
		$s.pop();
		return channel;
		$s.pop();
	}
	,jeashAddEventListeners: function(audio) {
		$s.push("jeash.media.Sound::jeashAddEventListeners");
		var $spos = $s.length;
		audio.addEventListener("canplay",this.__onSoundLoaded.$bind(this),false);
		audio.addEventListener("error",this.__onSoundLoadError.$bind(this),false);
		audio.addEventListener("abort",this.__onSoundLoadError.$bind(this),false);
		$s.pop();
	}
	,jeashRemoveEventListeners: function(audio) {
		$s.push("jeash.media.Sound::jeashRemoveEventListeners");
		var $spos = $s.length;
		audio.removeEventListener("canplay",this.__onSoundLoaded.$bind(this),false);
		audio.removeEventListener("error",this.__onSoundLoadError.$bind(this),false);
		audio.removeEventListener("abort",this.__onSoundLoadError.$bind(this),false);
		$s.pop();
	}
	,__onSoundLoaded: function(evt) {
		$s.push("jeash.media.Sound::__onSoundLoaded");
		var $spos = $s.length;
		var audio = evt.target;
		this.jeashRemoveEventListeners(audio);
		var evt1 = new jeash.events.Event(jeash.events.Event.COMPLETE);
		this.dispatchEvent(evt1);
		$s.pop();
	}
	,__onSoundLoadError: function(evt) {
		$s.push("jeash.media.Sound::__onSoundLoadError");
		var $spos = $s.length;
		var audio = evt.target;
		this.jeashRemoveEventListeners(audio);
		jeash.Lib.trace("Error loading sound '" + audio.src + "'");
		var evt1 = new jeash.events.IOErrorEvent(jeash.events.IOErrorEvent.IO_ERROR);
		this.dispatchEvent(evt1);
		$s.pop();
	}
	,__class__: jeash.media.Sound
});
com.wighawag.game.engine.core.EntityType = $hxClasses["com.wighawag.game.engine.core.EntityType"] = function() { }
com.wighawag.game.engine.core.EntityType.__name__ = ["com","wighawag","game","engine","core","EntityType"];
com.wighawag.game.engine.core.EntityType.prototype = {
	graphicalAssetName: null
	,speed: null
	,__class__: com.wighawag.game.engine.core.EntityType
}
if(!com.wighawag.remote.authentification) com.wighawag.remote.authentification = {}
com.wighawag.remote.authentification.PasswordAuthentification = $hxClasses["remote.authentification.PasswordAuthentification"] = function(url,userId,password) {
	$s.push("remote.authentification.PasswordAuthentification::new");
	var $spos = $s.length;
	this.url = url;
	this.userId = userId;
	this.password = password;
	$s.pop();
}
com.wighawag.remote.authentification.PasswordAuthentification.__name__ = ["com","wighawag","remote","authentification","PasswordAuthentification"];
com.wighawag.remote.authentification.PasswordAuthentification.prototype = {
	url: null
	,userId: null
	,password: null
	,onAuthenticated: null
	,connect: function() {
		$s.push("remote.authentification.PasswordAuthentification::connect");
		var $spos = $s.length;
		var request = new jeash.net.URLRequest(this.url);
		request.method = "POST";
		request.data = new nme.net.URLVariables("userId=" + this.userId + "&password=" + this.password + "&method=signedRequest");
		var urlLoader = new jeash.net.URLLoader();
		urlLoader.addEventListener(jeash.events.IOErrorEvent.IO_ERROR,this.onIOError.$bind(this));
		urlLoader.addEventListener(jeash.events.Event.COMPLETE,this.onComplete.$bind(this));
		urlLoader.load(request);
		this.onAuthenticated = new hsl.haxe.DirectSignaler(this);
		var $tmp = this.onAuthenticated;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,onIOError: function(event) {
		$s.push("remote.authentification.PasswordAuthentification::onIOError");
		var $spos = $s.length;
		haxe.Log.trace(event.toString(),{ fileName : "PasswordAuthentification.hx", lineNumber : 48, className : "remote.authentification.PasswordAuthentification", methodName : "onIOError"});
		this.onAuthenticated.dispatch(null,null,{ fileName : "PasswordAuthentification.hx", lineNumber : 50, className : "remote.authentification.PasswordAuthentification", methodName : "onIOError"});
		$s.pop();
	}
	,onComplete: function(e) {
		$s.push("remote.authentification.PasswordAuthentification::onComplete");
		var $spos = $s.length;
		var data = new hxjson2.JSONDecoder(e.target.data,true).getValue();
		haxe.Log.trace("getting player : " + data,{ fileName : "PasswordAuthentification.hx", lineNumber : 56, className : "remote.authentification.PasswordAuthentification", methodName : "onComplete"});
		this.onAuthenticated.dispatch(data,null,{ fileName : "PasswordAuthentification.hx", lineNumber : 57, className : "remote.authentification.PasswordAuthentification", methodName : "onComplete"});
		$s.pop();
	}
	,__class__: com.wighawag.remote.authentification.PasswordAuthentification
}
com.wighawag.game.xjump.ReviewProcessFactory = $hxClasses["com.wighawag.game.xjump.ReviewProcessFactory"] = function() { }
com.wighawag.game.xjump.ReviewProcessFactory.__name__ = ["com","wighawag","game","xjump","ReviewProcessFactory"];
com.wighawag.game.xjump.ReviewProcessFactory.prototype = {
	create: null
	,__class__: com.wighawag.game.xjump.ReviewProcessFactory
}
com.wighawag.game.xjump.ReviewTowerGameFactory = $hxClasses["com.wighawag.game.xjump.ReviewTowerGameFactory"] = function() {
	$s.push("com.wighawag.game.xjump.ReviewTowerGameFactory::new");
	var $spos = $s.length;
	$s.pop();
}
com.wighawag.game.xjump.ReviewTowerGameFactory.__name__ = ["com","wighawag","game","xjump","ReviewTowerGameFactory"];
com.wighawag.game.xjump.ReviewTowerGameFactory.__interfaces__ = [com.wighawag.game.xjump.ReviewProcessFactory];
com.wighawag.game.xjump.ReviewTowerGameFactory.prototype = {
	create: function(seedList,record) {
		$s.push("com.wighawag.game.xjump.ReviewTowerGameFactory::create");
		var $spos = $s.length;
		var tower = new com.wighawag.game.xjump.world.Tower(new com.wighawag.game.xjump.controller.ReviewKeyboardController(record));
		tower.init(seedList);
		$s.pop();
		return tower;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.ReviewTowerGameFactory
}
jeash.geom.Transform = $hxClasses["jeash.geom.Transform"] = function(inParent) {
	$s.push("jeash.geom.Transform::new");
	var $spos = $s.length;
	this.mObj = inParent;
	$s.pop();
}
jeash.geom.Transform.__name__ = ["jeash","geom","Transform"];
jeash.geom.Transform.prototype = {
	colorTransform: null
	,matrix: null
	,pixelBounds: null
	,mObj: null
	,jeashGetMatrix: function() {
		$s.push("jeash.geom.Transform::jeashGetMatrix");
		var $spos = $s.length;
		var $tmp = this.mObj.jeashGetMatrix();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMatrix: function(inMatrix) {
		$s.push("jeash.geom.Transform::jeashSetMatrix");
		var $spos = $s.length;
		var $tmp = this.mObj.jeashSetMatrix(inMatrix);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetPixelBounds: function() {
		$s.push("jeash.geom.Transform::GetPixelBounds");
		var $spos = $s.length;
		var $tmp = this.mObj.getBounds(jeash.Lib.jeashGetStage());
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetColorTransform: function() {
		$s.push("jeash.geom.Transform::GetColorTransform");
		var $spos = $s.length;
		var $tmp = new jeash.geom.ColorTransform();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetColorTransform: function(inColorTransform) {
		$s.push("jeash.geom.Transform::SetColorTransform");
		var $spos = $s.length;
		$s.pop();
		return inColorTransform;
		$s.pop();
	}
	,__class__: jeash.geom.Transform
	,__properties__: {get_pixelBounds:"GetPixelBounds",set_matrix:"jeashSetMatrix",get_matrix:"jeashGetMatrix",set_colorTransform:"SetColorTransform",get_colorTransform:"GetColorTransform"}
}
com.wighawag.game.xjump.GameManager = $hxClasses["com.wighawag.game.xjump.GameManager"] = function() { }
com.wighawag.game.xjump.GameManager.__name__ = ["com","wighawag","game","xjump","GameManager"];
com.wighawag.game.xjump.GameManager.prototype = {
	start: null
	,__class__: com.wighawag.game.xjump.GameManager
}
com.wighawag.game.xjump.TowerGameManager = $hxClasses["com.wighawag.game.xjump.TowerGameManager"] = function(playerId,secret,stage) {
	$s.push("com.wighawag.game.xjump.TowerGameManager::new");
	var $spos = $s.length;
	this._playerId = playerId;
	this._secret = secret;
	this.stage = stage;
	this.engine = new com.wighawag.game.engine.core.Engine();
	$s.pop();
}
com.wighawag.game.xjump.TowerGameManager.__name__ = ["com","wighawag","game","xjump","TowerGameManager"];
com.wighawag.game.xjump.TowerGameManager.__interfaces__ = [com.wighawag.game.xjump.GameManager];
com.wighawag.game.xjump.TowerGameManager.prototype = {
	_playerId: null
	,_secret: null
	,gameSession: null
	,engine: null
	,reviewSession: null
	,stage: null
	,start: function() {
		$s.push("com.wighawag.game.xjump.TowerGameManager::start");
		var $spos = $s.length;
		this.authenticate(this._secret == null);
		$s.pop();
	}
	,authenticate: function(passwordAuthenticationEnabled) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::authenticate");
		var $spos = $s.length;
		if(passwordAuthenticationEnabled == null) passwordAuthenticationEnabled = false;
		if(passwordAuthenticationEnabled) {
			var passwordAuthentification = new com.wighawag.remote.authentification.PasswordAuthentification("http://localhost:8080/password","test1",haxe.SHA1.encode("testpass"));
			passwordAuthentification.connect().bind(this.onAuthenticated.$bind(this));
		} else {
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,onAuthenticated: function(data) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::onAuthenticated");
		var $spos = $s.length;
		var highscoreService = null;
		if(data == null) {
			highscoreService = new com.wighawag.remote.local.LocalHighScoreService();
			haxe.Log.trace("not authenticasted ... local mode activated ",{ fileName : "TowerGameManager.hx", lineNumber : 82, className : "com.wighawag.game.xjump.TowerGameManager", methodName : "onAuthenticated"});
		} else {
			var playerId = data.playerId;
			var secretKey = data.secret;
			highscoreService = new com.wighawag.remote.RemoteHighScoreService(new com.wighawag.remote.json.JsonRpc("http://localhost:8080/json",playerId,secretKey));
		}
		this.gameSession = new com.wighawag.game.xjump.session.GameSession(highscoreService);
		this.gameSession.getReady().bind(this.getSeed.$bind(this));
		this.reviewSession = new com.wighawag.game.xjump.session.ReviewSession(highscoreService,new com.wighawag.game.xjump.ReviewTowerGameFactory());
		this.reviewSession.startReview().bind(this.onReviewComplete.$bind(this));
		$s.pop();
	}
	,onReviewComplete: function(retryDelay) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::onReviewComplete");
		var $spos = $s.length;
		var me = this;
		if(retryDelay == -1) {
			com.wighawag.log.EventSignaler.dispatchError("review complete should provide a retry delay");
			this.reviewSession.startReview().bind(this.onReviewComplete.$bind(this));
		} else if(retryDelay == 0) this.reviewSession.startReview().bind(this.onReviewComplete.$bind(this)); else haxe.Timer.delay(function() {
			$s.push("com.wighawag.game.xjump.TowerGameManager::onReviewComplete@118");
			var $spos = $s.length;
			me.reviewSession.startReview().bind(me.onReviewComplete.$bind(me));
			$s.pop();
		},retryDelay);
		$s.pop();
	}
	,getSeed: function(val) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::getSeed");
		var $spos = $s.length;
		this.gameSession.start().bind(this.startGameSession.$bind(this));
		$s.pop();
	}
	,startGameSession: function(seedList) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::startGameSession");
		var $spos = $s.length;
		var world = new com.wighawag.game.xjump.world.Tower(new com.wighawag.game.xjump.controller.PolygonalKeyBoardGameController());
		var updatableList = new Array();
		var displayObject = this.stage.getChildByName("renderer");
		if(displayObject != null) this.stage.removeChild(displayObject);
		var mc = new jeash.display.MovieClip();
		mc.name = "renderer";
		this.stage.addChild(mc);
		var renderer;
		renderer = new com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer(world,mc,600,600);
		updatableList.push(renderer);
		world.init(seedList);
		this.engine.start(world,updatableList).bind(this.onGameSessionComplete.$bind(this));
		$s.pop();
	}
	,onGameSessionComplete: function(result) {
		$s.push("com.wighawag.game.xjump.TowerGameManager::onGameSessionComplete");
		var $spos = $s.length;
		com.wighawag.log.EventSignaler.dispatchEvent("game session over : " + result.value + " " + result.time);
		this.gameSession.submitScore(result).bind(this.getSeed.$bind(this));
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.TowerGameManager
}
jeash.display.StageDisplayState = $hxClasses["jeash.display.StageDisplayState"] = { __ename__ : ["jeash","display","StageDisplayState"], __constructs__ : ["FULL_SCREEN","NORMAL"] }
jeash.display.StageDisplayState.FULL_SCREEN = ["FULL_SCREEN",0];
jeash.display.StageDisplayState.FULL_SCREEN.toString = $estr;
jeash.display.StageDisplayState.FULL_SCREEN.__enum__ = jeash.display.StageDisplayState;
jeash.display.StageDisplayState.NORMAL = ["NORMAL",1];
jeash.display.StageDisplayState.NORMAL.toString = $estr;
jeash.display.StageDisplayState.NORMAL.__enum__ = jeash.display.StageDisplayState;
var List = $hxClasses["List"] = function() {
	$s.push("List::new");
	var $spos = $s.length;
	this.length = 0;
	$s.pop();
}
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		$s.push("List::add");
		var $spos = $s.length;
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
		$s.pop();
	}
	,push: function(item) {
		$s.push("List::push");
		var $spos = $s.length;
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
		$s.pop();
	}
	,first: function() {
		$s.push("List::first");
		var $spos = $s.length;
		var $tmp = this.h == null?null:this.h[0];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,last: function() {
		$s.push("List::last");
		var $spos = $s.length;
		var $tmp = this.q == null?null:this.q[0];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,pop: function() {
		$s.push("List::pop");
		var $spos = $s.length;
		if(this.h == null) {
			$s.pop();
			return null;
		}
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		$s.pop();
		return x;
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("List::isEmpty");
		var $spos = $s.length;
		var $tmp = this.h == null;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clear: function() {
		$s.push("List::clear");
		var $spos = $s.length;
		this.h = null;
		this.q = null;
		this.length = 0;
		$s.pop();
	}
	,remove: function(v) {
		$s.push("List::remove");
		var $spos = $s.length;
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l[0] == v) {
				if(prev == null) this.h = l[1]; else prev[1] = l[1];
				if(this.q == l) this.q = prev;
				this.length--;
				$s.pop();
				return true;
			}
			prev = l;
			l = l[1];
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,iterator: function() {
		$s.push("List::iterator");
		var $spos = $s.length;
		var $tmp = { h : this.h, hasNext : function() {
			$s.push("List::iterator@155");
			var $spos = $s.length;
			var $tmp = this.h != null;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("List::iterator@158");
			var $spos = $s.length;
			if(this.h == null) {
				$s.pop();
				return null;
			}
			var x = this.h[0];
			this.h = this.h[1];
			$s.pop();
			return x;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("List::toString");
		var $spos = $s.length;
		var s = new StringBuf();
		var first = true;
		var l = this.h;
		s.b[s.b.length] = "{";
		while(l != null) {
			if(first) first = false; else s.b[s.b.length] = ", ";
			s.add(Std.string(l[0]));
			l = l[1];
		}
		s.b[s.b.length] = "}";
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,join: function(sep) {
		$s.push("List::join");
		var $spos = $s.length;
		var s = new StringBuf();
		var first = true;
		var l = this.h;
		while(l != null) {
			if(first) first = false; else s.b[s.b.length] = sep == null?"null":sep;
			s.add(l[0]);
			l = l[1];
		}
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,filter: function(f) {
		$s.push("List::filter");
		var $spos = $s.length;
		var l2 = new List();
		var l = this.h;
		while(l != null) {
			var v = l[0];
			l = l[1];
			if(f(v)) l2.add(v);
		}
		$s.pop();
		return l2;
		$s.pop();
	}
	,map: function(f) {
		$s.push("List::map");
		var $spos = $s.length;
		var b = new List();
		var l = this.h;
		while(l != null) {
			var v = l[0];
			l = l[1];
			b.add(f(v));
		}
		$s.pop();
		return b;
		$s.pop();
	}
	,__class__: List
}
com.wighawag.game.xjump.controller.ReviewKeyboardController = $hxClasses["com.wighawag.game.xjump.controller.ReviewKeyboardController"] = function(recording) {
	$s.push("com.wighawag.game.xjump.controller.ReviewKeyboardController::new");
	var $spos = $s.length;
	this.reset();
	var data = ((function($this) {
		var $r;
		if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
		$r = de.polygonal.core.io.Base64._instance;
		return $r;
	}(this)))._decodeStr(recording,false);
	var json = new hxjson2.JSONDecoder(data,true).getValue();
	this.record = new de.polygonal.ds.IntHashTable(256);
	var fields = Reflect.fields(json);
	var _g = 0;
	while(_g < fields.length) {
		var update = fields[_g];
		++_g;
		var array = Reflect.field(json,update);
		var keyCodeSet = new de.polygonal.ds.IntHashSet(4);
		var _g1 = 0;
		while(_g1 < array.length) {
			var a = array[_g1];
			++_g1;
			keyCodeSet.set(a);
		}
		this.record.set(Std.parseInt(update),keyCodeSet);
	}
	$s.pop();
}
com.wighawag.game.xjump.controller.ReviewKeyboardController.__name__ = ["com","wighawag","game","xjump","controller","ReviewKeyboardController"];
com.wighawag.game.xjump.controller.ReviewKeyboardController.__interfaces__ = [com.wighawag.game.xjump.controller.KeyBoardGameController];
com.wighawag.game.xjump.controller.ReviewKeyboardController.prototype = {
	numUpdates: null
	,record: null
	,reset: function() {
		$s.push("com.wighawag.game.xjump.controller.ReviewKeyboardController::reset");
		var $spos = $s.length;
		this.numUpdates = 0;
		$s.pop();
	}
	,update: function(millisecondsStep) {
		$s.push("com.wighawag.game.xjump.controller.ReviewKeyboardController::update");
		var $spos = $s.length;
		this.numUpdates++;
		$s.pop();
	}
	,isKeyDown: function(keyCode) {
		$s.push("com.wighawag.game.xjump.controller.ReviewKeyboardController::isKeyDown");
		var $spos = $s.length;
		if(this.record._h.hasKey(this.numUpdates)) {
			var keySet = this.record.get(this.numUpdates);
			var $tmp = keySet.has(keyCode);
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,getRecord: function() {
		$s.push("com.wighawag.game.xjump.controller.ReviewKeyboardController::getRecord");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.controller.ReviewKeyboardController
}
jeash.display.GraphicsFillType = $hxClasses["jeash.display.GraphicsFillType"] = { __ename__ : ["jeash","display","GraphicsFillType"], __constructs__ : ["SOLID_FILL","GRADIENT_FILL"] }
jeash.display.GraphicsFillType.SOLID_FILL = ["SOLID_FILL",0];
jeash.display.GraphicsFillType.SOLID_FILL.toString = $estr;
jeash.display.GraphicsFillType.SOLID_FILL.__enum__ = jeash.display.GraphicsFillType;
jeash.display.GraphicsFillType.GRADIENT_FILL = ["GRADIENT_FILL",1];
jeash.display.GraphicsFillType.GRADIENT_FILL.toString = $estr;
jeash.display.GraphicsFillType.GRADIENT_FILL.__enum__ = jeash.display.GraphicsFillType;
var IntIter = $hxClasses["IntIter"] = function(min,max) {
	$s.push("IntIter::new");
	var $spos = $s.length;
	this.min = min;
	this.max = max;
	$s.pop();
}
IntIter.__name__ = ["IntIter"];
IntIter.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		$s.push("IntIter::hasNext");
		var $spos = $s.length;
		var $tmp = this.min < this.max;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("IntIter::next");
		var $spos = $s.length;
		var $tmp = this.min++;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: IntIter
}
de.polygonal.core.fmt.StringUtil = $hxClasses["de.polygonal.core.fmt.StringUtil"] = function() { }
de.polygonal.core.fmt.StringUtil.__name__ = ["de","polygonal","core","fmt","StringUtil"];
de.polygonal.core.fmt.StringUtil.isWhite = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::isWhite");
	var $spos = $s.length;
	var $tmp = new EReg("\\S","").match(x) == false;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.reverse = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::reverse");
	var $spos = $s.length;
	var t = "";
	var i = x.length;
	while(--i >= 0) t += x.charAt(i);
	$s.pop();
	return t;
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.ellipsis = function(x,maxCharCount,inverse) {
	$s.push("de.polygonal.core.fmt.StringUtil::ellipsis");
	var $spos = $s.length;
	if(true != maxCharCount > 2) throw new de.polygonal.ASE("maxCharCount > 2",{ fileName : "StringUtil.hx", lineNumber : 64, className : "de.polygonal.core.fmt.StringUtil", methodName : "ellipsis"}); else null;
	var k = x.length;
	if(k > maxCharCount) {
		if(inverse) {
			var $tmp = "..." + x.substr(k + 3 - maxCharCount);
			$s.pop();
			return $tmp;
		} else {
			var $tmp = x.substr(0,maxCharCount - 3) + "...";
			$s.pop();
			return $tmp;
		}
	} else {
		$s.pop();
		return x;
	}
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.fill0 = function(x,n) {
	$s.push("de.polygonal.core.fmt.StringUtil::fill0");
	var $spos = $s.length;
	var s = "";
	var _g1 = 0, _g = n - x.length;
	while(_g1 < _g) {
		var i = _g1++;
		s += "0";
	}
	var $tmp = s + x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.parseBin = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::parseBin");
	var $spos = $s.length;
	var b = 0;
	var j = 0;
	var i = x.length;
	while(i-- > 0) {
		var s = x.charAt(i);
		if(s == "0") j++; else if(s == "1") {
			b += 1 << j;
			j++;
		}
	}
	$s.pop();
	return b;
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.parseHex = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::parseHex");
	var $spos = $s.length;
	var h = 0;
	var j = 0;
	var i = x.length;
	while(i-- > 0) {
		var c = x.charCodeAt(i);
		if(c == 88 || c == 120) break;
		if(c >= 48 && c <= 57) {
			h += (c - 48) * (1 << j);
			j += 4;
		} else if(c >= 65 && c <= 70) {
			h += (c - 70 + 15) * (1 << j);
			j += 4;
		} else if(c >= 97 && c <= 102) {
			h += (c - 102 + 15) * (1 << j);
			j += 4;
		}
	}
	$s.pop();
	return h;
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.getUnqualifiedClassName = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::getUnqualifiedClassName");
	var $spos = $s.length;
	if(Std["is"](x,Class)) {
		var s = Type.getClassName(x);
		var $tmp = s.substr(s.lastIndexOf(".") + 1);
		$s.pop();
		return $tmp;
	} else if(Type.getClass(x) != null) {
		var $tmp = de.polygonal.core.fmt.StringUtil.getUnqualifiedClassName(Type.getClass(x));
		$s.pop();
		return $tmp;
	} else {
		$s.pop();
		return "";
	}
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.getPackageName = function(x) {
	$s.push("de.polygonal.core.fmt.StringUtil::getPackageName");
	var $spos = $s.length;
	if(Std["is"](x,String)) {
		var s = x;
		var i = s.lastIndexOf(".");
		if(i != -1) {
			var $tmp = s.substr(0,i);
			$s.pop();
			return $tmp;
		} else {
			$s.pop();
			return "";
		}
	} else if(Std["is"](x,Class)) {
		var s = Type.getClassName(x);
		var i = s.lastIndexOf(".");
		if(i != -1) {
			var $tmp = s.substr(0,i);
			$s.pop();
			return $tmp;
		} else {
			$s.pop();
			return "";
		}
	} else if(Type.getClass(x) != null) {
		var $tmp = de.polygonal.core.fmt.StringUtil.getPackageName(Type.getClass(x));
		$s.pop();
		return $tmp;
	} else throw "invalid argument";
	$s.pop();
}
de.polygonal.core.fmt.StringUtil.prototype = {
	__class__: de.polygonal.core.fmt.StringUtil
}
jeash.geom.ColorTransform = $hxClasses["jeash.geom.ColorTransform"] = function(inRedMultiplier,inGreenMultiplier,inBlueMultiplier,inAlphaMultiplier,inRedOffset,inGreenOffset,inBlueOffset,inAlphaOffset) {
	$s.push("jeash.geom.ColorTransform::new");
	var $spos = $s.length;
	this.redMultiplier = inRedMultiplier == null?1.0:inRedMultiplier;
	this.greenMultiplier = inGreenMultiplier == null?1.0:inGreenMultiplier;
	this.blueMultiplier = inBlueMultiplier == null?1.0:inBlueMultiplier;
	this.alphaMultiplier = inAlphaMultiplier == null?1.0:inAlphaMultiplier;
	this.redOffset = inRedOffset == null?0.0:inRedOffset;
	this.greenOffset = inGreenOffset == null?0.0:inGreenOffset;
	this.blueOffset = inBlueOffset == null?0.0:inBlueOffset;
	this.alphaOffset = inAlphaOffset == null?0.0:inAlphaOffset;
	this.color = 0;
	$s.pop();
}
jeash.geom.ColorTransform.__name__ = ["jeash","geom","ColorTransform"];
jeash.geom.ColorTransform.prototype = {
	alphaMultiplier: null
	,alphaOffset: null
	,blueMultiplier: null
	,blueOffset: null
	,color: null
	,greenMultiplier: null
	,greenOffset: null
	,redMultiplier: null
	,redOffset: null
	,concat: function(second) {
		$s.push("jeash.geom.ColorTransform::concat");
		var $spos = $s.length;
		throw "Not implemented";
		$s.pop();
	}
	,__class__: jeash.geom.ColorTransform
}
jeash.display.StageScaleMode = $hxClasses["jeash.display.StageScaleMode"] = { __ename__ : ["jeash","display","StageScaleMode"], __constructs__ : ["SHOW_ALL","NO_SCALE","NO_BORDER","EXACT_FIT"] }
jeash.display.StageScaleMode.SHOW_ALL = ["SHOW_ALL",0];
jeash.display.StageScaleMode.SHOW_ALL.toString = $estr;
jeash.display.StageScaleMode.SHOW_ALL.__enum__ = jeash.display.StageScaleMode;
jeash.display.StageScaleMode.NO_SCALE = ["NO_SCALE",1];
jeash.display.StageScaleMode.NO_SCALE.toString = $estr;
jeash.display.StageScaleMode.NO_SCALE.__enum__ = jeash.display.StageScaleMode;
jeash.display.StageScaleMode.NO_BORDER = ["NO_BORDER",2];
jeash.display.StageScaleMode.NO_BORDER.toString = $estr;
jeash.display.StageScaleMode.NO_BORDER.__enum__ = jeash.display.StageScaleMode;
jeash.display.StageScaleMode.EXACT_FIT = ["EXACT_FIT",3];
jeash.display.StageScaleMode.EXACT_FIT.toString = $estr;
jeash.display.StageScaleMode.EXACT_FIT.__enum__ = jeash.display.StageScaleMode;
if(!jeash.ui) jeash.ui = {}
jeash.ui.Keyboard = $hxClasses["jeash.ui.Keyboard"] = function() { }
jeash.ui.Keyboard.__name__ = ["jeash","ui","Keyboard"];
jeash.ui.Keyboard.jeashConvertWebkitCode = function(code) {
	$s.push("jeash.ui.Keyboard::jeashConvertWebkitCode");
	var $spos = $s.length;
	switch(code.toLowerCase()) {
	case "backspace":
		var $tmp = jeash.ui.Keyboard.BACKSPACE;
		$s.pop();
		return $tmp;
	case "tab":
		var $tmp = jeash.ui.Keyboard.TAB;
		$s.pop();
		return $tmp;
	case "enter":
		var $tmp = jeash.ui.Keyboard.ENTER;
		$s.pop();
		return $tmp;
	case "shift":
		var $tmp = jeash.ui.Keyboard.SHIFT;
		$s.pop();
		return $tmp;
	case "control":
		var $tmp = jeash.ui.Keyboard.CONTROL;
		$s.pop();
		return $tmp;
	case "capslock":
		var $tmp = jeash.ui.Keyboard.CAPS_LOCK;
		$s.pop();
		return $tmp;
	case "escape":
		var $tmp = jeash.ui.Keyboard.ESCAPE;
		$s.pop();
		return $tmp;
	case "space":
		var $tmp = jeash.ui.Keyboard.SPACE;
		$s.pop();
		return $tmp;
	case "pageup":
		var $tmp = jeash.ui.Keyboard.PAGE_UP;
		$s.pop();
		return $tmp;
	case "pagedown":
		var $tmp = jeash.ui.Keyboard.PAGE_DOWN;
		$s.pop();
		return $tmp;
	case "end":
		var $tmp = jeash.ui.Keyboard.END;
		$s.pop();
		return $tmp;
	case "home":
		var $tmp = jeash.ui.Keyboard.HOME;
		$s.pop();
		return $tmp;
	case "left":
		var $tmp = jeash.ui.Keyboard.LEFT;
		$s.pop();
		return $tmp;
	case "right":
		var $tmp = jeash.ui.Keyboard.RIGHT;
		$s.pop();
		return $tmp;
	case "up":
		var $tmp = jeash.ui.Keyboard.UP;
		$s.pop();
		return $tmp;
	case "down":
		var $tmp = jeash.ui.Keyboard.DOWN;
		$s.pop();
		return $tmp;
	case "insert":
		var $tmp = jeash.ui.Keyboard.INSERT;
		$s.pop();
		return $tmp;
	case "delete":
		var $tmp = jeash.ui.Keyboard.DELETE;
		$s.pop();
		return $tmp;
	case "numlock":
		var $tmp = jeash.ui.Keyboard.NUMLOCK;
		$s.pop();
		return $tmp;
	case "break":
		var $tmp = jeash.ui.Keyboard.BREAK;
		$s.pop();
		return $tmp;
	}
	if(code.indexOf("U+") == 0) {
		var $tmp = Std.parseInt("0x" + code.substr(3));
		$s.pop();
		return $tmp;
	}
	throw "Unrecognised key code: " + code;
	$s.pop();
	return 0;
	$s.pop();
}
jeash.ui.Keyboard.jeashConvertMozillaCode = function(code) {
	$s.push("jeash.ui.Keyboard::jeashConvertMozillaCode");
	var $spos = $s.length;
	switch(code) {
	case jeash.ui.Keyboard.DOM_VK_BACK_SPACE:
		var $tmp = jeash.ui.Keyboard.BACKSPACE;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_TAB:
		var $tmp = jeash.ui.Keyboard.TAB;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_RETURN:
		var $tmp = jeash.ui.Keyboard.ENTER;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_ENTER:
		var $tmp = jeash.ui.Keyboard.ENTER;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_SHIFT:
		var $tmp = jeash.ui.Keyboard.SHIFT;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_CONTROL:
		var $tmp = jeash.ui.Keyboard.CONTROL;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_CAPS_LOCK:
		var $tmp = jeash.ui.Keyboard.CAPS_LOCK;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_ESCAPE:
		var $tmp = jeash.ui.Keyboard.ESCAPE;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_SPACE:
		var $tmp = jeash.ui.Keyboard.SPACE;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_PAGE_UP:
		var $tmp = jeash.ui.Keyboard.PAGE_UP;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_PAGE_DOWN:
		var $tmp = jeash.ui.Keyboard.PAGE_DOWN;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_END:
		var $tmp = jeash.ui.Keyboard.END;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_HOME:
		var $tmp = jeash.ui.Keyboard.HOME;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_LEFT:
		var $tmp = jeash.ui.Keyboard.LEFT;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_RIGHT:
		var $tmp = jeash.ui.Keyboard.RIGHT;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_UP:
		var $tmp = jeash.ui.Keyboard.UP;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_DOWN:
		var $tmp = jeash.ui.Keyboard.DOWN;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_INSERT:
		var $tmp = jeash.ui.Keyboard.INSERT;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_DELETE:
		var $tmp = jeash.ui.Keyboard.DELETE;
		$s.pop();
		return $tmp;
	case jeash.ui.Keyboard.DOM_VK_NUM_LOCK:
		var $tmp = jeash.ui.Keyboard.NUMLOCK;
		$s.pop();
		return $tmp;
	default:
		$s.pop();
		return code;
	}
	$s.pop();
}
jeash.ui.Keyboard.capsLock = null;
jeash.ui.Keyboard.numLock = null;
jeash.ui.Keyboard.isAccessible = function() {
	$s.push("jeash.ui.Keyboard::isAccessible");
	var $spos = $s.length;
	$s.pop();
	return false;
	$s.pop();
}
jeash.ui.Keyboard.prototype = {
	__class__: jeash.ui.Keyboard
}
hsl.haxe._DirectSignaler.RegularBond = $hxClasses["hsl.haxe._DirectSignaler.RegularBond"] = function(listener) {
	$s.push("hsl.haxe._DirectSignaler.RegularBond::new");
	var $spos = $s.length;
	hsl.haxe._DirectSignaler.LinkedBond.call(this);
	this.listener = listener;
	$s.pop();
}
hsl.haxe._DirectSignaler.RegularBond.__name__ = ["hsl","haxe","_DirectSignaler","RegularBond"];
hsl.haxe._DirectSignaler.RegularBond.__super__ = hsl.haxe._DirectSignaler.LinkedBond;
hsl.haxe._DirectSignaler.RegularBond.prototype = $extend(hsl.haxe._DirectSignaler.LinkedBond.prototype,{
	listener: null
	,callListener: function(data,currentTarget,origin,propagationStatus) {
		$s.push("hsl.haxe._DirectSignaler.RegularBond::callListener");
		var $spos = $s.length;
		if(false == this.halted) {
			this.listener(data);
			if(this.willDestroyOnUse) if(false == this.destroyed) {
				this.previous.next = this.next;
				this.next.previous = this.previous;
				this.destroyed = true;
			}
		}
		$s.pop();
		return propagationStatus;
		$s.pop();
	}
	,determineEquals: function(value) {
		$s.push("hsl.haxe._DirectSignaler.RegularBond::determineEquals");
		var $spos = $s.length;
		var $tmp = Std["is"](value,hsl.haxe._DirectSignaler.RegularBond) && Reflect.compareMethods(value.listener,this.listener);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hsl.haxe._DirectSignaler.RegularBond
});
hsl.haxe._DirectSignaler.NiladicBond = $hxClasses["hsl.haxe._DirectSignaler.NiladicBond"] = function(listener) {
	$s.push("hsl.haxe._DirectSignaler.NiladicBond::new");
	var $spos = $s.length;
	hsl.haxe._DirectSignaler.LinkedBond.call(this);
	this.listener = listener;
	$s.pop();
}
hsl.haxe._DirectSignaler.NiladicBond.__name__ = ["hsl","haxe","_DirectSignaler","NiladicBond"];
hsl.haxe._DirectSignaler.NiladicBond.__super__ = hsl.haxe._DirectSignaler.LinkedBond;
hsl.haxe._DirectSignaler.NiladicBond.prototype = $extend(hsl.haxe._DirectSignaler.LinkedBond.prototype,{
	listener: null
	,callListener: function(data,currentTarget,origin,propagationStatus) {
		$s.push("hsl.haxe._DirectSignaler.NiladicBond::callListener");
		var $spos = $s.length;
		if(false == this.halted) {
			this.listener();
			if(this.willDestroyOnUse) if(false == this.destroyed) {
				this.previous.next = this.next;
				this.next.previous = this.previous;
				this.destroyed = true;
			}
		}
		$s.pop();
		return propagationStatus;
		$s.pop();
	}
	,determineEquals: function(value) {
		$s.push("hsl.haxe._DirectSignaler.NiladicBond::determineEquals");
		var $spos = $s.length;
		var $tmp = Std["is"](value,hsl.haxe._DirectSignaler.NiladicBond) && Reflect.compareMethods(value.listener,this.listener);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hsl.haxe._DirectSignaler.NiladicBond
});
hsl.haxe._DirectSignaler.AdvancedBond = $hxClasses["hsl.haxe._DirectSignaler.AdvancedBond"] = function(listener) {
	$s.push("hsl.haxe._DirectSignaler.AdvancedBond::new");
	var $spos = $s.length;
	hsl.haxe._DirectSignaler.LinkedBond.call(this);
	this.listener = listener;
	$s.pop();
}
hsl.haxe._DirectSignaler.AdvancedBond.__name__ = ["hsl","haxe","_DirectSignaler","AdvancedBond"];
hsl.haxe._DirectSignaler.AdvancedBond.__super__ = hsl.haxe._DirectSignaler.LinkedBond;
hsl.haxe._DirectSignaler.AdvancedBond.prototype = $extend(hsl.haxe._DirectSignaler.LinkedBond.prototype,{
	listener: null
	,callListener: function(data,currentTarget,origin,propagationStatus) {
		$s.push("hsl.haxe._DirectSignaler.AdvancedBond::callListener");
		var $spos = $s.length;
		if(this.halted == false) {
			var signal = new hsl.haxe.Signal(data,this,currentTarget,origin);
			this.listener(signal);
			if(this.willDestroyOnUse) if(false == this.destroyed) {
				this.previous.next = this.next;
				this.next.previous = this.previous;
				this.destroyed = true;
			}
			if(signal.immediatePropagationStopped) {
				$s.pop();
				return 1;
			} else if(signal.propagationStopped) {
				$s.pop();
				return 2;
			}
		}
		$s.pop();
		return propagationStatus;
		$s.pop();
	}
	,determineEquals: function(value) {
		$s.push("hsl.haxe._DirectSignaler.AdvancedBond::determineEquals");
		var $spos = $s.length;
		var $tmp = Std["is"](value,hsl.haxe._DirectSignaler.AdvancedBond) && Reflect.compareMethods(value.listener,this.listener);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hsl.haxe._DirectSignaler.AdvancedBond
});
hsl.haxe._DirectSignaler.PropagationStatus = $hxClasses["hsl.haxe._DirectSignaler.PropagationStatus"] = function() { }
hsl.haxe._DirectSignaler.PropagationStatus.__name__ = ["hsl","haxe","_DirectSignaler","PropagationStatus"];
hsl.haxe._DirectSignaler.PropagationStatus.prototype = {
	__class__: hsl.haxe._DirectSignaler.PropagationStatus
}
de.polygonal.core.math.Vec2 = $hxClasses["de.polygonal.core.math.Vec2"] = function(x,y) {
	$s.push("de.polygonal.core.math.Vec2::new");
	var $spos = $s.length;
	if(y == null) y = .0;
	if(x == null) x = .0;
	this.x = x;
	this.y = y;
	$s.pop();
}
de.polygonal.core.math.Vec2.__name__ = ["de","polygonal","core","math","Vec2"];
de.polygonal.core.math.Vec2.prototype = {
	x: null
	,y: null
	,zero: function() {
		$s.push("de.polygonal.core.math.Vec2::zero");
		var $spos = $s.length;
		this.x = this.y = 0;
		$s.pop();
		return this;
		$s.pop();
	}
	,perp: function() {
		$s.push("de.polygonal.core.math.Vec2::perp");
		var $spos = $s.length;
		var t = this.y;
		this.y = this.x;
		this.x = -t;
		$s.pop();
		return this;
		$s.pop();
	}
	,flip: function() {
		$s.push("de.polygonal.core.math.Vec2::flip");
		var $spos = $s.length;
		this.x = -this.x;
		this.y = -this.y;
		$s.pop();
		return this;
		$s.pop();
	}
	,unit: function() {
		$s.push("de.polygonal.core.math.Vec2::unit");
		var $spos = $s.length;
		var t = Math.sqrt(this.x * this.x + this.y * this.y);
		this.x /= t;
		this.y /= t;
		$s.pop();
		return t;
		$s.pop();
	}
	,fastUnit: function() {
		$s.push("de.polygonal.core.math.Vec2::fastUnit");
		var $spos = $s.length;
		var t = 1 / Math.sqrt(this.x * this.x + this.y * this.y);
		this.x *= t;
		this.y *= t;
		$s.pop();
		return t;
		$s.pop();
	}
	,lengthSqr: function() {
		$s.push("de.polygonal.core.math.Vec2::lengthSqr");
		var $spos = $s.length;
		var $tmp = this.x * this.x + this.y * this.y;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,length: function() {
		$s.push("de.polygonal.core.math.Vec2::length");
		var $spos = $s.length;
		var $tmp = Math.sqrt(this.x * this.x + this.y * this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,fastLength: function() {
		$s.push("de.polygonal.core.math.Vec2::fastLength");
		var $spos = $s.length;
		var $tmp = 1 / (1 / Math.sqrt(this.x * this.x + this.y * this.y));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clamp: function(max) {
		$s.push("de.polygonal.core.math.Vec2::clamp");
		var $spos = $s.length;
		var tx = this.x;
		var ty = this.y;
		var len = tx * tx + ty * ty;
		if(len > max * max) {
			len = Math.sqrt(len);
			this.x = tx / len * max;
			this.y = ty / len * max;
		}
		$s.pop();
	}
	,set: function(other) {
		$s.push("de.polygonal.core.math.Vec2::set");
		var $spos = $s.length;
		this.x = other.x;
		this.y = other.y;
		$s.pop();
		return this;
		$s.pop();
	}
	,clone: function() {
		$s.push("de.polygonal.core.math.Vec2::clone");
		var $spos = $s.length;
		var $tmp = new de.polygonal.core.math.Vec2(this.x,this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.core.math.Vec2::toString");
		var $spos = $s.length;
		var $tmp = de.polygonal.core.fmt.Sprintf.format("{Vec2: x=%.3f, y=%.3f}",[this.x,this.y]);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.core.math.Vec2
}
com.wighawag.remote.service.Response = $hxClasses["remote.service.Response"] = function() {
	$s.push("remote.service.Response::new");
	var $spos = $s.length;
	this.successSignaler = new hsl.haxe.DirectSignaler(this);
	this.errorSignaler = new hsl.haxe.DirectSignaler(this);
	$s.pop();
}
com.wighawag.remote.service.Response.__name__ = ["com","wighawag","remote","service","Response"];
com.wighawag.remote.service.Response.prototype = {
	successSignaler: null
	,errorSignaler: null
	,errorListenedTo: null
	,successListenedTo: null
	,onSuccess: function(f) {
		$s.push("remote.service.Response::onSuccess");
		var $spos = $s.length;
		this.successListenedTo = true;
		this.successSignaler.bind(f);
		$s.pop();
		return this;
		$s.pop();
	}
	,onError: function(f) {
		$s.push("remote.service.Response::onError");
		var $spos = $s.length;
		this.errorListenedTo = true;
		this.errorSignaler.bind(f);
		$s.pop();
		return this;
		$s.pop();
	}
	,processError: function(error) {
		$s.push("remote.service.Response::processError");
		var $spos = $s.length;
		if(!this.errorListenedTo) com.wighawag.log.EventSignaler.dispatchError(error.text);
		this.errorSignaler.dispatch(error,null,{ fileName : "Response.hx", lineNumber : 44, className : "remote.service.Response", methodName : "processError"});
		$s.pop();
	}
	,processSuccess: function(success) {
		$s.push("remote.service.Response::processSuccess");
		var $spos = $s.length;
		this.successSignaler.dispatch(success,null,{ fileName : "Response.hx", lineNumber : 49, className : "remote.service.Response", methodName : "processSuccess"});
		$s.pop();
	}
	,__class__: com.wighawag.remote.service.Response
}
jeash.events.FocusEvent = $hxClasses["jeash.events.FocusEvent"] = function(type,bubbles,cancelable,inObject,inShiftKey,inKeyCode) {
	$s.push("jeash.events.FocusEvent::new");
	var $spos = $s.length;
	jeash.events.Event.call(this,type,bubbles,cancelable);
	this.keyCode = inKeyCode;
	this.shiftKey = inShiftKey == null?false:inShiftKey;
	this.target = inObject;
	$s.pop();
}
jeash.events.FocusEvent.__name__ = ["jeash","events","FocusEvent"];
jeash.events.FocusEvent.__super__ = jeash.events.Event;
jeash.events.FocusEvent.prototype = $extend(jeash.events.Event.prototype,{
	keyCode: null
	,shiftKey: null
	,relatedObject: null
	,__class__: jeash.events.FocusEvent
});
com.wighawag.game.engine.core.World = $hxClasses["com.wighawag.game.engine.core.World"] = function() { }
com.wighawag.game.engine.core.World.__name__ = ["com","wighawag","game","engine","core","World"];
com.wighawag.game.engine.core.World.__interfaces__ = [com.wighawag.game.engine.core.Renderable,com.wighawag.game.engine.core.Process];
com.wighawag.game.engine.core.World.prototype = {
	reset: null
	,__class__: com.wighawag.game.engine.core.World
}
jeash.net.URLLoader = $hxClasses["jeash.net.URLLoader"] = function(request) {
	$s.push("jeash.net.URLLoader::new");
	var $spos = $s.length;
	jeash.events.EventDispatcher.call(this);
	this.bytesLoaded = 0;
	this.bytesTotal = 0;
	this.dataFormat = jeash.net.URLLoaderDataFormat.TEXT;
	if(request != null) this.load(request);
	$s.pop();
}
jeash.net.URLLoader.__name__ = ["jeash","net","URLLoader"];
jeash.net.URLLoader.__super__ = jeash.events.EventDispatcher;
jeash.net.URLLoader.prototype = $extend(jeash.events.EventDispatcher.prototype,{
	http: null
	,bytesLoaded: null
	,bytesTotal: null
	,data: null
	,dataFormat: null
	,close: function() {
		$s.push("jeash.net.URLLoader::close");
		var $spos = $s.length;
		$s.pop();
	}
	,load: function(request) {
		$s.push("jeash.net.URLLoader::load");
		var $spos = $s.length;
		this.http = new jeash.net._URLLoader.Http(request.url);
		this.http.onData = this.onData.$bind(this);
		this.http.onError = this.onError.$bind(this);
		var _g = 0, _g1 = request.requestHeaders;
		while(_g < _g1.length) {
			var header = _g1[_g];
			++_g;
			this.http.setHeader(header.name,header.value);
		}
		this.http.requestUrl(jeash.net._URLLoader.HttpType.STREAM(this.dataFormat == jeash.net.URLLoaderDataFormat.TEXT?jeash.net._URLLoader.DataFormat.TEXT:jeash.net._URLLoader.DataFormat.BINARY));
		$s.pop();
	}
	,onData: function(_) {
		$s.push("jeash.net.URLLoader::onData");
		var $spos = $s.length;
		var content = this.http.getData();
		switch( (this.dataFormat)[1] ) {
		case 0:
			this.data = new jeash.utils.ByteArray();
			var _g1 = 0, _g = content.length;
			while(_g1 < _g) {
				var i = _g1++;
				var c = content["cca"](i) & 255;
				this.data.writeByte(c);
			}
			this.data.position = 0;
			break;
		case 1:
			this.data = content;
			break;
		case 2:
			throw "Not complete";
			break;
		}
		var evt = new jeash.events.Event(jeash.events.Event.COMPLETE);
		this.dispatchEvent(evt);
		$s.pop();
	}
	,onError: function(msg) {
		$s.push("jeash.net.URLLoader::onError");
		var $spos = $s.length;
		jeash.Lib.trace(msg);
		var evt = new jeash.events.IOErrorEvent(jeash.events.IOErrorEvent.IO_ERROR);
		this.dispatchEvent(evt);
		$s.pop();
	}
	,__class__: jeash.net.URLLoader
});
if(!jeash.net._URLLoader) jeash.net._URLLoader = {}
jeash.net._URLLoader.HttpType = $hxClasses["jeash.net._URLLoader.HttpType"] = { __ename__ : ["jeash","net","_URLLoader","HttpType"], __constructs__ : ["IMAGE","VIDEO","AUDIO","STREAM"] }
jeash.net._URLLoader.HttpType.IMAGE = ["IMAGE",0];
jeash.net._URLLoader.HttpType.IMAGE.toString = $estr;
jeash.net._URLLoader.HttpType.IMAGE.__enum__ = jeash.net._URLLoader.HttpType;
jeash.net._URLLoader.HttpType.VIDEO = ["VIDEO",1];
jeash.net._URLLoader.HttpType.VIDEO.toString = $estr;
jeash.net._URLLoader.HttpType.VIDEO.__enum__ = jeash.net._URLLoader.HttpType;
jeash.net._URLLoader.HttpType.AUDIO = ["AUDIO",2];
jeash.net._URLLoader.HttpType.AUDIO.toString = $estr;
jeash.net._URLLoader.HttpType.AUDIO.__enum__ = jeash.net._URLLoader.HttpType;
jeash.net._URLLoader.HttpType.STREAM = function(format) { var $x = ["STREAM",3,format]; $x.__enum__ = jeash.net._URLLoader.HttpType; $x.toString = $estr; return $x; }
jeash.net._URLLoader.DataFormat = $hxClasses["jeash.net._URLLoader.DataFormat"] = { __ename__ : ["jeash","net","_URLLoader","DataFormat"], __constructs__ : ["BINARY","TEXT"] }
jeash.net._URLLoader.DataFormat.BINARY = ["BINARY",0];
jeash.net._URLLoader.DataFormat.BINARY.toString = $estr;
jeash.net._URLLoader.DataFormat.BINARY.__enum__ = jeash.net._URLLoader.DataFormat;
jeash.net._URLLoader.DataFormat.TEXT = ["TEXT",1];
jeash.net._URLLoader.DataFormat.TEXT.toString = $estr;
jeash.net._URLLoader.DataFormat.TEXT.__enum__ = jeash.net._URLLoader.DataFormat;
haxe.Http = $hxClasses["haxe.Http"] = function(url) {
	$s.push("haxe.Http::new");
	var $spos = $s.length;
	this.url = url;
	this.headers = new Hash();
	this.params = new Hash();
	this.async = true;
	$s.pop();
}
haxe.Http.__name__ = ["haxe","Http"];
haxe.Http.requestUrl = function(url) {
	$s.push("haxe.Http::requestUrl");
	var $spos = $s.length;
	var h = new haxe.Http(url);
	h.async = false;
	var r = null;
	h.onData = function(d) {
		$s.push("haxe.Http::requestUrl@641");
		var $spos = $s.length;
		r = d;
		$s.pop();
	};
	h.onError = function(e) {
		$s.push("haxe.Http::requestUrl@644");
		var $spos = $s.length;
		throw e;
		$s.pop();
	};
	h.request(false);
	$s.pop();
	return r;
	$s.pop();
}
haxe.Http.prototype = {
	url: null
	,async: null
	,postData: null
	,headers: null
	,params: null
	,setHeader: function(header,value) {
		$s.push("haxe.Http::setHeader");
		var $spos = $s.length;
		this.headers.set(header,value);
		$s.pop();
	}
	,setParameter: function(param,value) {
		$s.push("haxe.Http::setParameter");
		var $spos = $s.length;
		this.params.set(param,value);
		$s.pop();
	}
	,setPostData: function(data) {
		$s.push("haxe.Http::setPostData");
		var $spos = $s.length;
		this.postData = data;
		$s.pop();
	}
	,request: function(post) {
		$s.push("haxe.Http::request");
		var $spos = $s.length;
		var me = this;
		var r = new js.XMLHttpRequest();
		var onreadystatechange = function() {
			$s.push("haxe.Http::request@108");
			var $spos = $s.length;
			if(r.readyState != 4) {
				$s.pop();
				return;
			}
			var s = (function($this) {
				var $r;
				try {
					$r = r.status;
				} catch( e ) {
					$r = (function($this) {
						var $r;
						$e = [];
						while($s.length >= $spos) $e.unshift($s.pop());
						$s.push($e[0]);
						$r = null;
						return $r;
					}($this));
				}
				return $r;
			}(this));
			if(s == undefined) s = null;
			if(s != null) me.onStatus(s);
			if(s != null && s >= 200 && s < 400) me.onData(r.responseText); else switch(s) {
			case null: case undefined:
				me.onError("Failed to connect or resolve host");
				break;
			case 12029:
				me.onError("Failed to connect to host");
				break;
			case 12007:
				me.onError("Unknown host");
				break;
			default:
				me.onError("Http Error #" + r.status);
			}
			$s.pop();
		};
		if(this.async) r.onreadystatechange = onreadystatechange;
		var uri = this.postData;
		if(uri != null) post = true; else {
			var $it0 = this.params.keys();
			while( $it0.hasNext() ) {
				var p = $it0.next();
				if(uri == null) uri = ""; else uri += "&";
				uri += StringTools.urlEncode(p) + "=" + StringTools.urlEncode(this.params.get(p));
			}
		}
		try {
			if(post) r.open("POST",this.url,this.async); else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
				uri = null;
			} else r.open("GET",this.url,this.async);
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			this.onError(e.toString());
			$s.pop();
			return;
		}
		if(this.headers.get("Content-Type") == null && post && this.postData == null) r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		var $it1 = this.headers.keys();
		while( $it1.hasNext() ) {
			var h = $it1.next();
			r.setRequestHeader(h,this.headers.get(h));
		}
		r.send(uri);
		if(!this.async) onreadystatechange();
		$s.pop();
	}
	,onData: function(data) {
		$s.push("haxe.Http::onData");
		var $spos = $s.length;
		$s.pop();
	}
	,onError: function(msg) {
		$s.push("haxe.Http::onError");
		var $spos = $s.length;
		$s.pop();
	}
	,onStatus: function(status) {
		$s.push("haxe.Http::onStatus");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: haxe.Http
}
jeash.net._URLLoader.Http = $hxClasses["jeash.net._URLLoader.Http"] = function(url) {
	$s.push("jeash.net._URLLoader.Http::new");
	var $spos = $s.length;
	haxe.Http.call(this,url);
	$s.pop();
}
jeash.net._URLLoader.Http.__name__ = ["jeash","net","_URLLoader","Http"];
jeash.net._URLLoader.Http.__super__ = haxe.Http;
jeash.net._URLLoader.Http.prototype = $extend(haxe.Http.prototype,{
	registerEvents: function(subject) {
		$s.push("jeash.net._URLLoader.Http::registerEvents");
		var $spos = $s.length;
		subject.onload = this.onData.$bind(this);
		subject.onerror = this.onError.$bind(this);
		$s.pop();
	}
	,requestUrl: function(type) {
		$s.push("jeash.net._URLLoader.Http::requestUrl");
		var $spos = $s.length;
		var self = this;
		var $e = (type);
		switch( $e[1] ) {
		case 3:
			var dataFormat = $e[2];
			var xmlHttpRequest = new XMLHttpRequest();
			switch( (dataFormat)[1] ) {
			case 0:
				xmlHttpRequest.overrideMimeType("text/plain; charset=x-user-defined");
				break;
			default:
			}
			this.registerEvents(xmlHttpRequest);
			var uri = null;
			var $it0 = this.params.keys();
			while( $it0.hasNext() ) {
				var p = $it0.next();
				uri = StringTools.urlDecode(p) + "=" + StringTools.urlEncode(this.params.get(p));
			}
			try {
				if(uri != null) {
					var question = this.url.split("?").length <= 1;
					xmlHttpRequest.open("GET",this.url + (question?"?":"&") + uri,true);
					uri = null;
				} else xmlHttpRequest.open("GET",this.url,true);
			} catch( e ) {
				$e = [];
				while($s.length >= $spos) $e.unshift($s.pop());
				$s.push($e[0]);
				throw e.toString();
			}
			xmlHttpRequest.send(uri);
			this.getData = function() {
				$s.push("jeash.net._URLLoader.Http::requestUrl@172");
				var $spos = $s.length;
				var $tmp = xmlHttpRequest.responseText;
				$s.pop();
				return $tmp;
				$s.pop();
			};
			break;
		case 0:
			var image = js.Lib.document.createElement("img");
			this.registerEvents(image);
			image.src = this.url;
			image.style.display = "none";
			js.Lib.document.body.appendChild(image);
			this.getData = function() {
				$s.push("jeash.net._URLLoader.Http::requestUrl@183");
				var $spos = $s.length;
				$s.pop();
				return image;
				$s.pop();
			};
			break;
		case 2:
			var audio = js.Lib.document.createElement("audio");
			this.registerEvents(audio);
			audio.src = this.url;
			js.Lib.document.body.appendChild(audio);
			this.getData = function() {
				$s.push("jeash.net._URLLoader.Http::requestUrl@194");
				var $spos = $s.length;
				$s.pop();
				return audio;
				$s.pop();
			};
			break;
		case 1:
			var video = js.Lib.document.createElement("video");
			this.registerEvents(video);
			video.src = this.url;
			video.style.display = "none";
			js.Lib.document.body.appendChild(video);
			this.getData = function() {
				$s.push("jeash.net._URLLoader.Http::requestUrl@206");
				var $spos = $s.length;
				$s.pop();
				return video;
				$s.pop();
			};
			break;
		}
		$s.pop();
	}
	,getData: function() {
		$s.push("jeash.net._URLLoader.Http::getData");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: jeash.net._URLLoader.Http
});
de.polygonal.ds.IntHashTable = $hxClasses["de.polygonal.ds.IntHashTable"] = function(slotCount,capacity,isResizable,maxSize) {
	$s.push("de.polygonal.ds.IntHashTable::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(isResizable == null) isResizable = true;
	if(capacity == null) capacity = -1;
	if(capacity == -1) capacity = slotCount;
	this._isResizable = isResizable;
	this._h = new de.polygonal.ds.IntIntHashTable(slotCount,capacity,isResizable,maxSize);
	this._vals = de.polygonal.ds.ArrayUtil.alloc(capacity);
	this.maxSize = maxSize == -1?2147483647:maxSize;
	this._next = de.polygonal.ds.ArrayUtil.alloc(capacity);
	this._keys = de.polygonal.ds.ArrayUtil.alloc(capacity);
	de.polygonal.ds.ArrayUtil.fill(this._keys,-2147483648,capacity);
	var _g1 = 0, _g = capacity - 1;
	while(_g1 < _g) {
		var i = _g1++;
		this._next[i] = i + 1;
	}
	this._next[capacity - 1] = -1;
	this._free = 0;
	this._key0 = 0;
	this._i0 = 0;
	this._sizeLevel = 0;
	this._iterator = null;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.IntHashTable.__name__ = ["de","polygonal","ds","IntHashTable"];
de.polygonal.ds.IntHashTable.__interfaces__ = [de.polygonal.ds.Map];
de.polygonal.ds.IntHashTable.prototype = {
	key: null
	,maxSize: null
	,reuseIterator: null
	,_h: null
	,_vals: null
	,_next: null
	,_keys: null
	,_free: null
	,_key0: null
	,_i0: null
	,_sizeLevel: null
	,_isResizable: null
	,_iterator: null
	,loadFactor: null
	,_loadFactorGetter: function() {
		$s.push("de.polygonal.ds.IntHashTable::_loadFactorGetter");
		var $spos = $s.length;
		var $tmp = this._h._loadFactorGetter();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,slotCount: null
	,_slotCountGetter: function() {
		$s.push("de.polygonal.ds.IntHashTable::_slotCountGetter");
		var $spos = $s.length;
		var $tmp = this._h._mask + 1;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,capacity: null
	,_capacityGetter: function() {
		$s.push("de.polygonal.ds.IntHashTable::_capacityGetter");
		var $spos = $s.length;
		var $tmp = this._h._capacity;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getCollisionCount: function() {
		$s.push("de.polygonal.ds.IntHashTable::getCollisionCount");
		var $spos = $s.length;
		var $tmp = this._h.getCollisionCount();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getFront: function(key) {
		$s.push("de.polygonal.ds.IntHashTable::getFront");
		var $spos = $s.length;
		if(this._key0 == key) {
			var $tmp = this._vals[this._i0];
			$s.pop();
			return $tmp;
		} else {
			var i = this._h.getFront(key);
			if(i == -2147483648) {
				$s.pop();
				return null;
			} else {
				this._key0 = key;
				var $tmp = this._vals[this._i0 = i];
				$s.pop();
				return $tmp;
			}
		}
		$s.pop();
	}
	,setIfAbsent: function(key,val) {
		$s.push("de.polygonal.ds.IntHashTable::setIfAbsent");
		var $spos = $s.length;
		if(true != (key != -2147483648)) throw new de.polygonal.ASE("key 0x80000000 is reserved",{ fileName : "IntHashTable.hx", lineNumber : 252, className : "de.polygonal.ds.IntHashTable", methodName : "setIfAbsent"}); else null;
		if(this._h._size == this._h._capacity) {
			if(this._h.setIfAbsent(key,this._free)) {
				this._key0 = -2147483648;
				this._expand(this._h._capacity >> 1);
				this._vals[this._free] = val;
				this._keys[this._free] = key;
				this._free = this._next[this._free];
				$s.pop();
				return true;
			} else {
				$s.pop();
				return false;
			}
		} else if(this._h.setIfAbsent(key,this._free)) {
			this._key0 = -2147483648;
			this._vals[this._free] = val;
			this._keys[this._free] = key;
			this._free = this._next[this._free];
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,rehash: function(slotCount) {
		$s.push("de.polygonal.ds.IntHashTable::rehash");
		var $spos = $s.length;
		this._h.rehash(slotCount);
		$s.pop();
	}
	,remap: function(key,val) {
		$s.push("de.polygonal.ds.IntHashTable::remap");
		var $spos = $s.length;
		var i = this._h.get(key);
		if(i != -2147483648) {
			this._vals[i] = val;
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,toKeyArray: function() {
		$s.push("de.polygonal.ds.IntHashTable::toKeyArray");
		var $spos = $s.length;
		var $tmp = this._h.toKeyArray();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toKeyDA: function() {
		$s.push("de.polygonal.ds.IntHashTable::toKeyDA");
		var $spos = $s.length;
		var $tmp = this._h.toKeyDA();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.IntHashTable::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{IntHashTable, size/capacity: %d/%d, load factor: %.2f}",[this._h._size,this._h._capacity,this._h._loadFactorGetter()]);
		if(this._h._size == 0) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var max = 0.;
		var $it0 = this.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			max = max > key?max:key;
		}
		var i = 1;
		while(max != 0) {
			i++;
			max = Std["int"](max / 10);
		}
		var $it1 = this.keys();
		while( $it1.hasNext() ) {
			var key = $it1.next();
			s += de.polygonal.core.fmt.Sprintf.format("  %- " + i + "d -> %s\n",[key,Std.string(this._vals[this._h.getFront(key)])]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,has: function(val) {
		$s.push("de.polygonal.ds.IntHashTable::has");
		var $spos = $s.length;
		var exists = false;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != -2147483648) {
				if(this._vals[i] == val) {
					exists = true;
					break;
				}
			}
		}
		$s.pop();
		return exists;
		$s.pop();
	}
	,hasKey: function(key) {
		$s.push("de.polygonal.ds.IntHashTable::hasKey");
		var $spos = $s.length;
		var $tmp = this._h.hasKey(key);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,count: function(key) {
		$s.push("de.polygonal.ds.IntHashTable::count");
		var $spos = $s.length;
		var $tmp = this._h.count(key);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,get: function(key) {
		$s.push("de.polygonal.ds.IntHashTable::get");
		var $spos = $s.length;
		var i = this._h.get(key);
		if(i == -2147483648) {
			$s.pop();
			return null;
		} else {
			var $tmp = this._vals[i];
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,set: function(key,val) {
		$s.push("de.polygonal.ds.IntHashTable::set");
		var $spos = $s.length;
		if(true != (key != -2147483648)) throw new de.polygonal.ASE("key 0x80000000 is reserved",{ fileName : "IntHashTable.hx", lineNumber : 464, className : "de.polygonal.ds.IntHashTable", methodName : "set"}); else null;
		if(true != this._h._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "IntHashTable.hx", lineNumber : 465, className : "de.polygonal.ds.IntHashTable", methodName : "set"}); else null;
		this._key0 = -2147483648;
		if(this._h._size == this._h._capacity) this._expand(this._h._capacity);
		this._h.set(key,this._free);
		this._vals[this._free] = val;
		this._keys[this._free] = key;
		this._free = this._next[this._free];
		$s.pop();
		return true;
		$s.pop();
	}
	,clr: function(key) {
		$s.push("de.polygonal.ds.IntHashTable::clr");
		var $spos = $s.length;
		var i = this._h.get(key);
		if(i == -2147483648) {
			$s.pop();
			return false;
		} else {
			this._key0 = -2147483648;
			this._vals[i] = null;
			this._keys[i] = -2147483648;
			this._next[i] = this._free;
			this._free = i;
			var shrink = false;
			if(this._sizeLevel > 0) {
				if(this._h._size - 1 == this._h._capacity >> 2) {
					if(this._isResizable) shrink = true;
				}
			}
			this._h.clr(key);
			if(shrink) this._shrink();
			$s.pop();
			return true;
		}
		$s.pop();
	}
	,toValSet: function() {
		$s.push("de.polygonal.ds.IntHashTable::toValSet");
		var $spos = $s.length;
		var s = new de.polygonal.ds.ListSet();
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != -2147483648) s.set(this._vals[i]);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,toKeySet: function() {
		$s.push("de.polygonal.ds.IntHashTable::toKeySet");
		var $spos = $s.length;
		var $tmp = this._h.toKeySet();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,keys: function() {
		$s.push("de.polygonal.ds.IntHashTable::keys");
		var $spos = $s.length;
		var $tmp = this._h.keys();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.IntHashTable::free");
		var $spos = $s.length;
		var _g1 = 0, _g = this._h._size;
		while(_g1 < _g) {
			var i = _g1++;
			this._vals[i] = null;
		}
		this._vals = null;
		this._keys = null;
		this._next = null;
		this._h.free();
		this._h = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(val) {
		$s.push("de.polygonal.ds.IntHashTable::contains");
		var $spos = $s.length;
		var $tmp = this.has(val);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.IntHashTable::remove");
		var $spos = $s.length;
		var found = false;
		var tmp = new Array();
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != -2147483648) {
				if(this._vals[i] == x) {
					tmp.push(this._keys[i]);
					found = true;
				}
			}
		}
		if(found) {
			var _g = 0;
			while(_g < tmp.length) {
				var key = tmp[_g];
				++_g;
				this.clr(key);
			}
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.IntHashTable::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		this._h.clear(purge);
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			this._keys[i] = -2147483648;
		}
		if(purge) {
			while(this._sizeLevel > 0) this._shrink();
			var _g1 = 0, _g = this._h._capacity;
			while(_g1 < _g) {
				var i = _g1++;
				this._vals[i] = null;
				this._keys[i] = -2147483648;
			}
		}
		var _g1 = 0, _g = this._h._capacity - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[this._h._capacity - 1] = -1;
		this._free = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.IntHashTable::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.IntHashTableIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.IntHashTableIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.IntHashTable::isEmpty");
		var $spos = $s.length;
		var $tmp = this._h._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.IntHashTable::size");
		var $spos = $s.length;
		var $tmp = this._h._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.IntHashTable::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._h._size);
		var j = 0;
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != -2147483648) a[j++] = this._vals[i];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.IntHashTable::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._h._size);
		var _g1 = 0, _g = this._h._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._keys[i] != -2147483648) a.set(a._size,this._vals[i]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.IntHashTable::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var c = Type.createEmptyInstance(de.polygonal.ds.IntHashTable);
		c.key = de.polygonal.ds.HashKey._counter++;
		c.maxSize = this.maxSize;
		c._h = this._h.clone(false);
		if(assign) {
			c._vals = new Array();
			de.polygonal.ds.ArrayUtil.copy(this._vals,c._vals,null,null);
		} else {
			var tmp = de.polygonal.ds.ArrayUtil.alloc(this._h._capacity);
			if(copier != null) {
				var _g1 = 0, _g = this._h._capacity;
				while(_g1 < _g) {
					var i = _g1++;
					if(this._keys[i] != -2147483648) tmp[i] = copier(this._vals[i]);
				}
			} else {
				var c1 = null;
				var _g1 = 0, _g = this._h._capacity;
				while(_g1 < _g) {
					var i = _g1++;
					if(this._keys[i] != -2147483648) {
						if(true != Std["is"](this._vals[i],de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[this._vals[i]]),{ fileName : "IntHashTable.hx", lineNumber : 764, className : "de.polygonal.ds.IntHashTable", methodName : "clone"}); else null;
						c1 = this._vals[i];
						tmp[i] = c1.clone();
					}
				}
			}
			c._vals = tmp;
		}
		c._sizeLevel = this._sizeLevel;
		c._free = this._free;
		c._key0 = this._key0;
		c._i0 = this._i0;
		c._next = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._next,c._next,null,null);
		c._keys = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._keys,c._keys,null,null);
		$s.pop();
		return c;
		$s.pop();
	}
	,_expand: function(oldSize) {
		$s.push("de.polygonal.ds.IntHashTable::_expand");
		var $spos = $s.length;
		var newSize = oldSize << 1;
		var tmp = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._next,tmp,0,oldSize);
		this._next = tmp;
		var tmp1 = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._keys,tmp1,0,oldSize);
		this._keys = tmp1;
		var _g = oldSize;
		while(_g < newSize) {
			var i = _g++;
			this._keys[i] = -2147483648;
		}
		var _g1 = oldSize - 1, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = oldSize;
		var tmp2 = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._vals,tmp2,0,oldSize);
		this._vals = tmp2;
		this._sizeLevel++;
		$s.pop();
	}
	,_shrink: function() {
		$s.push("de.polygonal.ds.IntHashTable::_shrink");
		var $spos = $s.length;
		this._sizeLevel--;
		var oldSize = this._h._capacity << 1;
		var newSize = this._h._capacity;
		this._next = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var _g1 = 0, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = 0;
		var tmpKeys = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.fill(tmpKeys,-2147483648,newSize);
		var tmpVals = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var $it0 = this._h.iterator();
		while( $it0.hasNext() ) {
			var i = $it0.next();
			tmpKeys[this._free] = this._keys[i];
			tmpVals[this._free] = this._vals[i];
			this._free = this._next[this._free];
		}
		this._keys = tmpKeys;
		this._vals = tmpVals;
		var _g1 = 0, _g = this._free;
		while(_g1 < _g) {
			var i = _g1++;
			this._h.remap(this._keys[i],i);
		}
		$s.pop();
	}
	,_invalidate: function() {
		$s.push("de.polygonal.ds.IntHashTable::_invalidate");
		var $spos = $s.length;
		this._key0 = -2147483648;
		$s.pop();
	}
	,__getNext: function(i) {
		$s.push("de.polygonal.ds.IntHashTable::__getNext");
		var $spos = $s.length;
		var $tmp = this._next[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setNext: function(i,x) {
		$s.push("de.polygonal.ds.IntHashTable::__setNext");
		var $spos = $s.length;
		this._next[i] = x;
		$s.pop();
	}
	,__getKey: function(i) {
		$s.push("de.polygonal.ds.IntHashTable::__getKey");
		var $spos = $s.length;
		var $tmp = this._keys[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setKey: function(i,x) {
		$s.push("de.polygonal.ds.IntHashTable::__setKey");
		var $spos = $s.length;
		this._keys[i] = x;
		$s.pop();
	}
	,__clrKey: function(i) {
		$s.push("de.polygonal.ds.IntHashTable::__clrKey");
		var $spos = $s.length;
		this._keys[i] = -2147483648;
		$s.pop();
	}
	,__hasKey: function(i) {
		$s.push("de.polygonal.ds.IntHashTable::__hasKey");
		var $spos = $s.length;
		var $tmp = this._keys[i] != -2147483648;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntHashTable
	,__properties__: {get_capacity:"_capacityGetter",get_slotCount:"_slotCountGetter",get_loadFactor:"_loadFactorGetter"}
}
de.polygonal.ds.IntHashTableIterator = $hxClasses["de.polygonal.ds.IntHashTableIterator"] = function(f) {
	$s.push("de.polygonal.ds.IntHashTableIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._vals = this._f._vals;
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		this;
	}
	$s.pop();
}
de.polygonal.ds.IntHashTableIterator.__name__ = ["de","polygonal","ds","IntHashTableIterator"];
de.polygonal.ds.IntHashTableIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.IntHashTableIterator.prototype = {
	_f: null
	,_vals: null
	,_keys: null
	,_i: null
	,_s: null
	,reset: function() {
		$s.push("de.polygonal.ds.IntHashTableIterator::reset");
		var $spos = $s.length;
		this._vals = this._f._vals;
		this._keys = this._f._keys;
		this._i = -1;
		this._s = this._f._h._capacity;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.IntHashTableIterator::hasNext");
		var $spos = $s.length;
		while(++this._i < this._s) if(this._keys[this._i] != -2147483648) {
			$s.pop();
			return true;
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.IntHashTableIterator::next");
		var $spos = $s.length;
		var $tmp = this._vals[this._i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.IntHashTableIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,__vals: function(f) {
		$s.push("de.polygonal.ds.IntHashTableIterator::__vals");
		var $spos = $s.length;
		var $tmp = f._vals;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__keys: function(f) {
		$s.push("de.polygonal.ds.IntHashTableIterator::__keys");
		var $spos = $s.length;
		var $tmp = f._keys;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntHashTableIterator
}
var Xml = $hxClasses["Xml"] = function() {
	$s.push("Xml::new");
	var $spos = $s.length;
	$s.pop();
}
Xml.__name__ = ["Xml"];
Xml.Element = null;
Xml.PCData = null;
Xml.CData = null;
Xml.Comment = null;
Xml.DocType = null;
Xml.Prolog = null;
Xml.Document = null;
Xml.parse = function(str) {
	$s.push("Xml::parse");
	var $spos = $s.length;
	var rules = [Xml.enode,Xml.epcdata,Xml.eend,Xml.ecdata,Xml.edoctype,Xml.ecomment,Xml.eprolog];
	var nrules = rules.length;
	var current = Xml.createDocument();
	var stack = new List();
	while(str.length > 0) {
		var i = 0;
		try {
			while(i < nrules) {
				var r = rules[i];
				if(r.match(str)) {
					switch(i) {
					case 0:
						var x = Xml.createElement(r.matched(1));
						current.addChild(x);
						str = r.matchedRight();
						while(Xml.eattribute.match(str)) {
							x.set(Xml.eattribute.matched(1),Xml.eattribute.matched(3));
							str = Xml.eattribute.matchedRight();
						}
						if(!Xml.eclose.match(str)) {
							i = nrules;
							throw "__break__";
						}
						if(Xml.eclose.matched(1) == ">") {
							stack.push(current);
							current = x;
						}
						str = Xml.eclose.matchedRight();
						break;
					case 1:
						var x = Xml.createPCData(r.matched(0));
						current.addChild(x);
						str = r.matchedRight();
						break;
					case 2:
						if(current._children != null && current._children.length == 0) {
							var e = Xml.createPCData("");
							current.addChild(e);
						}
						if(r.matched(1) != current._nodeName || stack.isEmpty()) {
							i = nrules;
							throw "__break__";
						}
						current = stack.pop();
						str = r.matchedRight();
						break;
					case 3:
						str = r.matchedRight();
						if(!Xml.ecdata_end.match(str)) throw "End of CDATA section not found";
						var x = Xml.createCData(Xml.ecdata_end.matchedLeft());
						current.addChild(x);
						str = Xml.ecdata_end.matchedRight();
						break;
					case 4:
						var pos = 0;
						var count = 0;
						var old = str;
						try {
							while(true) {
								if(!Xml.edoctype_elt.match(str)) throw "End of DOCTYPE section not found";
								var p = Xml.edoctype_elt.matchedPos();
								pos += p.pos + p.len;
								str = Xml.edoctype_elt.matchedRight();
								switch(Xml.edoctype_elt.matched(0)) {
								case "[":
									count++;
									break;
								case "]":
									count--;
									if(count < 0) throw "Invalid ] found in DOCTYPE declaration";
									break;
								default:
									if(count == 0) throw "__break__";
								}
							}
						} catch( e ) { if( e != "__break__" ) throw e; }
						var x = Xml.createDocType(old.substr(10,pos - 11));
						current.addChild(x);
						break;
					case 5:
						if(!Xml.ecomment_end.match(str)) throw "Unclosed Comment";
						var p = Xml.ecomment_end.matchedPos();
						var x = Xml.createComment(str.substr(4,p.pos + p.len - 7));
						current.addChild(x);
						str = Xml.ecomment_end.matchedRight();
						break;
					case 6:
						var prolog = r.matched(0);
						var x = Xml.createProlog(prolog.substr(2,prolog.length - 4));
						current.addChild(x);
						str = r.matchedRight();
						break;
					}
					throw "__break__";
				}
				i += 1;
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		if(i == nrules) {
			if(str.length > 10) throw "Xml parse error : Unexpected " + str.substr(0,10) + "..."; else throw "Xml parse error : Unexpected " + str;
		}
	}
	if(!stack.isEmpty()) throw "Xml parse error : Unclosed " + stack.last().getNodeName();
	$s.pop();
	return current;
	$s.pop();
}
Xml.createElement = function(name) {
	$s.push("Xml::createElement");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.Element;
	r._children = new Array();
	r._attributes = new Hash();
	r.setNodeName(name);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createPCData = function(data) {
	$s.push("Xml::createPCData");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.PCData;
	r.setNodeValue(data);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createCData = function(data) {
	$s.push("Xml::createCData");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.CData;
	r.setNodeValue(data);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createComment = function(data) {
	$s.push("Xml::createComment");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.Comment;
	r.setNodeValue(data);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createDocType = function(data) {
	$s.push("Xml::createDocType");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.DocType;
	r.setNodeValue(data);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createProlog = function(data) {
	$s.push("Xml::createProlog");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.Prolog;
	r.setNodeValue(data);
	$s.pop();
	return r;
	$s.pop();
}
Xml.createDocument = function() {
	$s.push("Xml::createDocument");
	var $spos = $s.length;
	var r = new Xml();
	r.nodeType = Xml.Document;
	r._children = new Array();
	$s.pop();
	return r;
	$s.pop();
}
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,_nodeName: null
	,_nodeValue: null
	,_attributes: null
	,_children: null
	,_parent: null
	,getNodeName: function() {
		$s.push("Xml::getNodeName");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		var $tmp = this._nodeName;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setNodeName: function(n) {
		$s.push("Xml::setNodeName");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		var $tmp = this._nodeName = n;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getNodeValue: function() {
		$s.push("Xml::getNodeValue");
		var $spos = $s.length;
		if(this.nodeType == Xml.Element || this.nodeType == Xml.Document) throw "bad nodeType";
		var $tmp = this._nodeValue;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setNodeValue: function(v) {
		$s.push("Xml::setNodeValue");
		var $spos = $s.length;
		if(this.nodeType == Xml.Element || this.nodeType == Xml.Document) throw "bad nodeType";
		var $tmp = this._nodeValue = v;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getParent: function() {
		$s.push("Xml::getParent");
		var $spos = $s.length;
		var $tmp = this._parent;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,get: function(att) {
		$s.push("Xml::get");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		var $tmp = this._attributes.get(att);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(att,value) {
		$s.push("Xml::set");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		this._attributes.set(att,value);
		$s.pop();
	}
	,remove: function(att) {
		$s.push("Xml::remove");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		this._attributes.remove(att);
		$s.pop();
	}
	,exists: function(att) {
		$s.push("Xml::exists");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		var $tmp = this._attributes.exists(att);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,attributes: function() {
		$s.push("Xml::attributes");
		var $spos = $s.length;
		if(this.nodeType != Xml.Element) throw "bad nodeType";
		var $tmp = this._attributes.keys();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,iterator: function() {
		$s.push("Xml::iterator");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var $tmp = { cur : 0, x : this._children, hasNext : function() {
			$s.push("Xml::iterator@281");
			var $spos = $s.length;
			var $tmp = this.cur < this.x.length;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("Xml::iterator@284");
			var $spos = $s.length;
			var $tmp = this.x[this.cur++];
			$s.pop();
			return $tmp;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,elements: function() {
		$s.push("Xml::elements");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var $tmp = { cur : 0, x : this._children, hasNext : function() {
			$s.push("Xml::elements@295");
			var $spos = $s.length;
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				if(this.x[k].nodeType == Xml.Element) break;
				k += 1;
			}
			this.cur = k;
			var $tmp = k < l;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("Xml::elements@306");
			var $spos = $s.length;
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				var n = this.x[k];
				k += 1;
				if(n.nodeType == Xml.Element) {
					this.cur = k;
					$s.pop();
					return n;
				}
			}
			$s.pop();
			return null;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,elementsNamed: function(name) {
		$s.push("Xml::elementsNamed");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var $tmp = { cur : 0, x : this._children, hasNext : function() {
			$s.push("Xml::elementsNamed@327");
			var $spos = $s.length;
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				var n = this.x[k];
				if(n.nodeType == Xml.Element && n._nodeName == name) break;
				k++;
			}
			this.cur = k;
			var $tmp = k < l;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("Xml::elementsNamed@339");
			var $spos = $s.length;
			var k = this.cur;
			var l = this.x.length;
			while(k < l) {
				var n = this.x[k];
				k++;
				if(n.nodeType == Xml.Element && n._nodeName == name) {
					this.cur = k;
					$s.pop();
					return n;
				}
			}
			$s.pop();
			return null;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,firstChild: function() {
		$s.push("Xml::firstChild");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var $tmp = this._children[0];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,firstElement: function() {
		$s.push("Xml::firstElement");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var cur = 0;
		var l = this._children.length;
		while(cur < l) {
			var n = this._children[cur];
			if(n.nodeType == Xml.Element) {
				$s.pop();
				return n;
			}
			cur++;
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,addChild: function(x) {
		$s.push("Xml::addChild");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		if(x._parent != null) x._parent._children.remove(x);
		x._parent = this;
		this._children.push(x);
		$s.pop();
	}
	,removeChild: function(x) {
		$s.push("Xml::removeChild");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		var b = this._children.remove(x);
		if(b) x._parent = null;
		$s.pop();
		return b;
		$s.pop();
	}
	,insertChild: function(x,pos) {
		$s.push("Xml::insertChild");
		var $spos = $s.length;
		if(this._children == null) throw "bad nodetype";
		if(x._parent != null) x._parent._children.remove(x);
		x._parent = this;
		this._children.insert(pos,x);
		$s.pop();
	}
	,toString: function() {
		$s.push("Xml::toString");
		var $spos = $s.length;
		if(this.nodeType == Xml.PCData) {
			var $tmp = this._nodeValue;
			$s.pop();
			return $tmp;
		}
		if(this.nodeType == Xml.CData) {
			var $tmp = "<![CDATA[" + this._nodeValue + "]]>";
			$s.pop();
			return $tmp;
		}
		if(this.nodeType == Xml.Comment) {
			var $tmp = "<!--" + this._nodeValue + "-->";
			$s.pop();
			return $tmp;
		}
		if(this.nodeType == Xml.DocType) {
			var $tmp = "<!DOCTYPE " + this._nodeValue + ">";
			$s.pop();
			return $tmp;
		}
		if(this.nodeType == Xml.Prolog) {
			var $tmp = "<?" + this._nodeValue + "?>";
			$s.pop();
			return $tmp;
		}
		var s = new StringBuf();
		if(this.nodeType == Xml.Element) {
			s.b[s.b.length] = "<";
			s.add(this._nodeName);
			var $it0 = this._attributes.keys();
			while( $it0.hasNext() ) {
				var k = $it0.next();
				s.b[s.b.length] = " ";
				s.b[s.b.length] = k == null?"null":k;
				s.b[s.b.length] = "=\"";
				s.add(this._attributes.get(k));
				s.b[s.b.length] = "\"";
			}
			if(this._children.length == 0) {
				s.b[s.b.length] = "/>";
				var $tmp = s.b.join("");
				$s.pop();
				return $tmp;
			}
			s.b[s.b.length] = ">";
		}
		var $it1 = this.iterator();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			s.add(x.toString());
		}
		if(this.nodeType == Xml.Element) {
			s.b[s.b.length] = "</";
			s.add(this._nodeName);
			s.b[s.b.length] = ">";
		}
		var $tmp = s.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: Xml
	,__properties__: {get_parent:"getParent",set_nodeValue:"setNodeValue",get_nodeValue:"getNodeValue",set_nodeName:"setNodeName",get_nodeName:"getNodeName"}
}
jeash.display.Bitmap = $hxClasses["jeash.display.Bitmap"] = function(inBitmapData,inPixelSnapping,inSmoothing) {
	$s.push("jeash.display.Bitmap::new");
	var $spos = $s.length;
	jeash.display.DisplayObject.call(this);
	this.pixelSnapping = inPixelSnapping;
	this.smoothing = inSmoothing;
	this.name = "Bitmap " + jeash.display.DisplayObject.mNameID++;
	this.jeashGraphics = new jeash.display.Graphics();
	if(inBitmapData != null) this.jeashSetBitmapData(inBitmapData);
	this.jeashGraphics.jeashSurface.id = this.name;
	$s.pop();
}
jeash.display.Bitmap.__name__ = ["jeash","display","Bitmap"];
jeash.display.Bitmap.__super__ = jeash.display.DisplayObject;
jeash.display.Bitmap.prototype = $extend(jeash.display.DisplayObject.prototype,{
	bitmapData: null
	,pixelSnapping: null
	,smoothing: null
	,jeashGraphics: null
	,jeashCurrentLease: null
	,jeashSetBitmapData: function(inBitmapData) {
		$s.push("jeash.display.Bitmap::jeashSetBitmapData");
		var $spos = $s.length;
		this.jeashInvalidateBounds();
		this.bitmapData = inBitmapData;
		$s.pop();
		return inBitmapData;
		$s.pop();
	}
	,jeashGetGraphics: function() {
		$s.push("jeash.display.Bitmap::jeashGetGraphics");
		var $spos = $s.length;
		var $tmp = this.jeashGraphics;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,BuildBounds: function() {
		$s.push("jeash.display.Bitmap::BuildBounds");
		var $spos = $s.length;
		jeash.display.DisplayObject.prototype.BuildBounds.call(this);
		if(this.bitmapData != null) {
			var r = new jeash.geom.Rectangle(0,0,this.bitmapData.getWidth(),this.bitmapData.getHeight());
			if(r.width != 0 || r.height != 0) {
				if(this.mBoundsRect.width == 0 && this.mBoundsRect.height == 0) this.mBoundsRect = r.clone(); else this.mBoundsRect.extendBounds(r);
			}
		}
		$s.pop();
	}
	,jeashApplyFilters: function(surface) {
		$s.push("jeash.display.Bitmap::jeashApplyFilters");
		var $spos = $s.length;
		if(this.jeashFilters != null) {
			var _g = 0, _g1 = this.jeashFilters;
			while(_g < _g1.length) {
				var filter = _g1[_g];
				++_g;
				filter.jeashApplyFilter(this.jeashGraphics.jeashSurface);
			}
		}
		$s.pop();
	}
	,jeashRender: function(parentMatrix,inMask) {
		$s.push("jeash.display.Bitmap::jeashRender");
		var $spos = $s.length;
		if(this.bitmapData == null) {
			$s.pop();
			return;
		}
		if(this.mMtxDirty || this.mMtxChainDirty) this.jeashValidateMatrix();
		var m = this.mFullMatrix.clone();
		var imageDataLease = this.bitmapData.jeashLease;
		if(imageDataLease != null && (this.jeashCurrentLease == null || imageDataLease.seed != this.jeashCurrentLease.seed || imageDataLease.time != this.jeashCurrentLease.time)) {
			var srcCanvas = this.bitmapData.mTextureBuffer;
			this.jeashGraphics.jeashSurface.width = srcCanvas.width;
			this.jeashGraphics.jeashSurface.height = srcCanvas.height;
			this.jeashGraphics.clear();
			jeash.Lib.jeashDrawToSurface(srcCanvas,this.jeashGraphics.jeashSurface);
			this.jeashCurrentLease = imageDataLease.clone();
			this.jeashApplyFilters(this.jeashGraphics.jeashSurface);
		} else if(inMask != null) this.jeashApplyFilters(this.jeashGraphics.jeashSurface);
		if(inMask != null) jeash.Lib.jeashDrawToSurface(this.jeashGraphics.jeashSurface,inMask,m,(this.parent != null?this.parent.alpha:1) * this.alpha); else {
			jeash.Lib.jeashSetSurfaceTransform(this.jeashGraphics.jeashSurface,m);
			jeash.Lib.jeashSetSurfaceOpacity(this.jeashGraphics.jeashSurface,(this.parent != null?this.parent.alpha:1) * this.alpha);
		}
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.display.Bitmap::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		if(!this.jeashGetVisible()) {
			$s.pop();
			return null;
		} else if(this.bitmapData != null) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.jeashGetWidth() || local.y > this.jeashGetHeight()) {
				$s.pop();
				return null;
			} else {
				var $tmp = this;
				$s.pop();
				return $tmp;
			}
		} else {
			var $tmp = jeash.display.DisplayObject.prototype.jeashGetObjectUnderPoint.call(this,point);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,__class__: jeash.display.Bitmap
	,__properties__: $extend(jeash.display.DisplayObject.prototype.__properties__,{set_bitmapData:"jeashSetBitmapData"})
});
haxe.SHA1 = $hxClasses["haxe.SHA1"] = function() { }
haxe.SHA1.__name__ = ["haxe","SHA1"];
haxe.SHA1.newInt32 = function(left,right) {
	$s.push("haxe.SHA1::newInt32");
	var $spos = $s.length;
	var result = left | 0;
	result = result << 16;
	var $tmp = result + (right | 0) | 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.encode = function(s) {
	$s.push("haxe.SHA1::encode");
	var $spos = $s.length;
	var x = haxe.SHA1.str2blks_SHA1(s);
	var w = new Array();
	var a = haxe.SHA1.newInt32(26437,8961);
	var b = haxe.SHA1.newInt32(61389,43913);
	var c = haxe.SHA1.newInt32(39098,56574);
	var d = haxe.SHA1.newInt32(4146,21622);
	var e = haxe.SHA1.newInt32(50130,57840);
	var i = 0;
	while(i < x.length) {
		var olda = a;
		var oldb = b;
		var oldc = c;
		var oldd = d;
		var olde = e;
		var j = 0;
		while(j < 80) {
			if(j < 16) w[j] = x[i + j]; else w[j] = haxe.SHA1.rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16],1);
			var t = haxe.SHA1.add(haxe.SHA1.add(haxe.SHA1.rol(a,5),haxe.SHA1.ft(j | 0,b,c,d)),haxe.SHA1.add(haxe.SHA1.add(e,w[j]),haxe.SHA1.kt(j | 0)));
			e = d;
			d = c;
			c = haxe.SHA1.rol(b,30);
			b = a;
			a = t;
			j++;
		}
		a = haxe.SHA1.add(a,olda);
		b = haxe.SHA1.add(b,oldb);
		c = haxe.SHA1.add(c,oldc);
		d = haxe.SHA1.add(d,oldd);
		e = haxe.SHA1.add(e,olde);
		i += 16;
	}
	var $tmp = haxe.SHA1.hex(a) + haxe.SHA1.hex(b) + haxe.SHA1.hex(c) + haxe.SHA1.hex(d) + haxe.SHA1.hex(e);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.hex = function(num) {
	$s.push("haxe.SHA1::hex");
	var $spos = $s.length;
	var str = "";
	var j = 7;
	while(j >= 0) {
		str += haxe.SHA1.hex_chr.charAt(haxe.Int32.toInt(num >> j * 4 & (15 | 0)));
		j--;
	}
	$s.pop();
	return str;
	$s.pop();
}
haxe.SHA1.str2blks_SHA1 = function(s) {
	$s.push("haxe.SHA1::str2blks_SHA1");
	var $spos = $s.length;
	var nblk = (s.length + 8 >> 6) + 1;
	var blks = new Array();
	var _g1 = 0, _g = nblk * 16;
	while(_g1 < _g) {
		var i = _g1++;
		blks[i] = 0 | 0;
	}
	var _g1 = 0, _g = s.length;
	while(_g1 < _g) {
		var i = _g1++;
		var p = i >> 2;
		var c = s.charCodeAt(i) | 0;
		blks[p] = blks[p] | c << 24 - i % 4 * 8;
	}
	var i = s.length;
	var p = i >> 2;
	blks[p] = blks[p] | (128 | 0) << 24 - i % 4 * 8;
	blks[nblk * 16 - 1] = s.length * 8 | 0;
	$s.pop();
	return blks;
	$s.pop();
}
haxe.SHA1.add = function(x,y) {
	$s.push("haxe.SHA1::add");
	var $spos = $s.length;
	var lsw = (x & (65535 | 0)) + (y & (65535 | 0)) | 0;
	var msw = ((x >> 16) + (y >> 16) | 0) + (lsw >> 16) | 0;
	var $tmp = msw << 16 | lsw & (65535 | 0);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.rol = function(num,cnt) {
	$s.push("haxe.SHA1::rol");
	var $spos = $s.length;
	var $tmp = num << cnt | num >>> 32 - cnt;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.ft = function(t,b,c,d) {
	$s.push("haxe.SHA1::ft");
	var $spos = $s.length;
	if(t - (20 | 0) < 0) {
		var $tmp = b & c | ~b & d;
		$s.pop();
		return $tmp;
	}
	if(t - (40 | 0) < 0) {
		var $tmp = b ^ c ^ d;
		$s.pop();
		return $tmp;
	}
	if(t - (60 | 0) < 0) {
		var $tmp = b & c | b & d | c & d;
		$s.pop();
		return $tmp;
	}
	var $tmp = b ^ c ^ d;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.kt = function(t) {
	$s.push("haxe.SHA1::kt");
	var $spos = $s.length;
	if(t - (20 | 0) < 0) {
		var $tmp = haxe.SHA1.newInt32(23170,31129);
		$s.pop();
		return $tmp;
	}
	if(t - (40 | 0) < 0) {
		var $tmp = haxe.SHA1.newInt32(28377,60321);
		$s.pop();
		return $tmp;
	}
	if(t - (60 | 0) < 0) {
		var $tmp = haxe.SHA1.newInt32(36635,48348);
		$s.pop();
		return $tmp;
	}
	var $tmp = haxe.SHA1.newInt32(51810,49622);
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.SHA1.prototype = {
	__class__: haxe.SHA1
}
de.polygonal.ds.Cloneable = $hxClasses["de.polygonal.ds.Cloneable"] = function() { }
de.polygonal.ds.Cloneable.__name__ = ["de","polygonal","ds","Cloneable"];
de.polygonal.ds.Cloneable.prototype = {
	clone: null
	,__class__: de.polygonal.ds.Cloneable
}
var ApplicationMain = $hxClasses["ApplicationMain"] = function() { }
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.completed = null;
ApplicationMain.preloader = null;
ApplicationMain.total = null;
ApplicationMain.loaders = null;
ApplicationMain.urlLoaders = null;
ApplicationMain.main = function() {
	$s.push("ApplicationMain::main");
	var $spos = $s.length;
	ApplicationMain.completed = 0;
	ApplicationMain.loaders = new Hash();
	ApplicationMain.urlLoaders = new Hash();
	ApplicationMain.total = 0;
	ApplicationMain.preloader = new NMEPreloader();
	jeash.Lib.jeashGetCurrent().addChild(ApplicationMain.preloader);
	ApplicationMain.preloader.onInit();
	if(ApplicationMain.total == 0) ApplicationMain.begin(); else {
		var $it0 = ApplicationMain.loaders.keys();
		while( $it0.hasNext() ) {
			var path = $it0.next();
			var loader = ApplicationMain.loaders.get(path);
			loader.contentLoaderInfo.addEventListener("complete",ApplicationMain.loader_onComplete);
			loader.load(new jeash.net.URLRequest(path));
		}
		var $it1 = ApplicationMain.urlLoaders.keys();
		while( $it1.hasNext() ) {
			var path = $it1.next();
			var urlLoader = ApplicationMain.urlLoaders.get(path);
			urlLoader.addEventListener("complete",ApplicationMain.loader_onComplete);
			urlLoader.load(new jeash.net.URLRequest(path));
		}
	}
	$s.pop();
}
ApplicationMain.begin = function() {
	$s.push("ApplicationMain::begin");
	var $spos = $s.length;
	ApplicationMain.preloader.addEventListener(jeash.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	ApplicationMain.preloader.onLoaded();
	$s.pop();
}
ApplicationMain.getAsset = function(inName) {
	$s.push("ApplicationMain::getAsset");
	var $spos = $s.length;
	$s.pop();
	return null;
	$s.pop();
}
ApplicationMain.loader_onComplete = function(event) {
	$s.push("ApplicationMain::loader_onComplete");
	var $spos = $s.length;
	ApplicationMain.completed++;
	ApplicationMain.preloader.onUpdate(ApplicationMain.completed,ApplicationMain.total);
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
	$s.pop();
}
ApplicationMain.preloader_onComplete = function(event) {
	$s.push("ApplicationMain::preloader_onComplete");
	var $spos = $s.length;
	ApplicationMain.preloader.removeEventListener(jeash.events.Event.COMPLETE,ApplicationMain.preloader_onComplete);
	jeash.Lib.jeashGetCurrent().removeChild(ApplicationMain.preloader);
	ApplicationMain.preloader = null;
	com.wighawag.game.xjump.Application.main();
	$s.pop();
}
ApplicationMain.prototype = {
	__class__: ApplicationMain
}
haxe.StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","Lambda"] }
haxe.StackItem.CFunction = ["CFunction",0];
haxe.StackItem.CFunction.toString = $estr;
haxe.StackItem.CFunction.__enum__ = haxe.StackItem;
haxe.StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.StackItem.Lambda = function(v) { var $x = ["Lambda",4,v]; $x.__enum__ = haxe.StackItem; $x.toString = $estr; return $x; }
haxe.Stack = $hxClasses["haxe.Stack"] = function() { }
haxe.Stack.__name__ = ["haxe","Stack"];
haxe.Stack.callStack = function() {
	$s.push("haxe.Stack::callStack");
	var $spos = $s.length;
	var $tmp = haxe.Stack.makeStack("$s");
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Stack.exceptionStack = function() {
	$s.push("haxe.Stack::exceptionStack");
	var $spos = $s.length;
	var $tmp = haxe.Stack.makeStack("$e");
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Stack.toString = function(stack) {
	$s.push("haxe.Stack::toString");
	var $spos = $s.length;
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b[b.b.length] = "\nCalled from ";
		haxe.Stack.itemToString(b,s);
	}
	var $tmp = b.b.join("");
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Stack.itemToString = function(b,s) {
	$s.push("haxe.Stack::itemToString");
	var $spos = $s.length;
	var $e = (s);
	switch( $e[1] ) {
	case 0:
		b.b[b.b.length] = "a C function";
		break;
	case 1:
		var m = $e[2];
		b.b[b.b.length] = "module ";
		b.b[b.b.length] = m == null?"null":m;
		break;
	case 2:
		var line = $e[4], file = $e[3], s1 = $e[2];
		if(s1 != null) {
			haxe.Stack.itemToString(b,s1);
			b.b[b.b.length] = " (";
		}
		b.b[b.b.length] = file == null?"null":file;
		b.b[b.b.length] = " line ";
		b.b[b.b.length] = line == null?"null":line;
		if(s1 != null) b.b[b.b.length] = ")";
		break;
	case 3:
		var meth = $e[3], cname = $e[2];
		b.b[b.b.length] = cname == null?"null":cname;
		b.b[b.b.length] = ".";
		b.b[b.b.length] = meth == null?"null":meth;
		break;
	case 4:
		var n = $e[2];
		b.b[b.b.length] = "local function #";
		b.b[b.b.length] = n == null?"null":n;
		break;
	}
	$s.pop();
}
haxe.Stack.makeStack = function(s) {
	$s.push("haxe.Stack::makeStack");
	var $spos = $s.length;
	var a = (function($this) {
		var $r;
		try {
			$r = eval(s);
		} catch( e ) {
			$r = (function($this) {
				var $r;
				$e = [];
				while($s.length >= $spos) $e.unshift($s.pop());
				$s.push($e[0]);
				$r = [];
				return $r;
			}($this));
		}
		return $r;
	}(this));
	var m = new Array();
	var _g1 = 0, _g = a.length - (s == "$s"?2:0);
	while(_g1 < _g) {
		var i = _g1++;
		var d = a[i].split("::");
		m.unshift(haxe.StackItem.Method(d[0],d[1]));
	}
	$s.pop();
	return m;
	$s.pop();
}
haxe.Stack.prototype = {
	__class__: haxe.Stack
}
de.polygonal.ds.ListSet = $hxClasses["de.polygonal.ds.ListSet"] = function() {
	$s.push("de.polygonal.ds.ListSet::new");
	var $spos = $s.length;
	this._a = new de.polygonal.ds.DA();
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.ListSet.__name__ = ["de","polygonal","ds","ListSet"];
de.polygonal.ds.ListSet.__interfaces__ = [de.polygonal.ds.Set];
de.polygonal.ds.ListSet.prototype = {
	key: null
	,reuseIterator: null
	,_a: null
	,toString: function() {
		$s.push("de.polygonal.ds.ListSet::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{ListSet, size: %d}",[this.size()]);
		if(this.isEmpty()) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var _g1 = 0, _g = this.size();
		while(_g1 < _g) {
			var i = _g1++;
			s += de.polygonal.core.fmt.Sprintf.format("  %s\n",[Std.string(this._a.get(i))]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,has: function(x) {
		$s.push("de.polygonal.ds.ListSet::has");
		var $spos = $s.length;
		var $tmp = this._a.contains(x);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(x) {
		$s.push("de.polygonal.ds.ListSet::set");
		var $spos = $s.length;
		if(this._a.contains(x)) {
			$s.pop();
			return false;
		} else {
			this._a.pushBack(x);
			$s.pop();
			return true;
		}
		$s.pop();
	}
	,merge: function(x,assign,copier) {
		$s.push("de.polygonal.ds.ListSet::merge");
		var $spos = $s.length;
		if(assign) {
			var $it0 = x.iterator();
			while( $it0.hasNext() ) {
				var val = $it0.next();
				this.set(val);
			}
		} else if(copier != null) {
			var $it1 = x.iterator();
			while( $it1.hasNext() ) {
				var val = $it1.next();
				this.set(copier(val));
			}
		} else {
			var $it2 = x.iterator();
			while( $it2.hasNext() ) {
				var val = $it2.next();
				if(true != Std["is"](val,de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[val]),{ fileName : "ListSet.hx", lineNumber : 151, className : "de.polygonal.ds.ListSet", methodName : "merge"}); else null;
				this.set(val.clone());
			}
		}
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.ListSet::free");
		var $spos = $s.length;
		this._a.free();
		this._a = null;
		$s.pop();
	}
	,contains: function(x) {
		$s.push("de.polygonal.ds.ListSet::contains");
		var $spos = $s.length;
		var $tmp = this._a.contains(x);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.ListSet::remove");
		var $spos = $s.length;
		var $tmp = this._a.remove(x);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.ListSet::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		this._a.clear(purge);
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.ListSet::iterator");
		var $spos = $s.length;
		this._a.reuseIterator = this.reuseIterator;
		var $tmp = this._a.iterator();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.ListSet::isEmpty");
		var $spos = $s.length;
		var $tmp = this._a._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.ListSet::size");
		var $spos = $s.length;
		var $tmp = this._a._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.ListSet::toArray");
		var $spos = $s.length;
		var $tmp = this._a.toArray();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.ListSet::toDA");
		var $spos = $s.length;
		var $tmp = this._a.toDA();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.ListSet::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var copy = Type.createEmptyInstance(de.polygonal.ds.ListSet);
		copy.key = de.polygonal.ds.HashKey._counter++;
		copy._a = this._a.clone(assign,copier);
		$s.pop();
		return copy;
		$s.pop();
	}
	,__class__: de.polygonal.ds.ListSet
}
hxjson2.JSON = $hxClasses["hxjson2.JSON"] = function() { }
hxjson2.JSON.__name__ = ["hxjson2","JSON"];
hxjson2.JSON.encode = function(o) {
	$s.push("hxjson2.JSON::encode");
	var $spos = $s.length;
	var $tmp = new hxjson2.JSONEncoder(o).getString();
	$s.pop();
	return $tmp;
	$s.pop();
}
hxjson2.JSON.decode = function(s,strict) {
	$s.push("hxjson2.JSON::decode");
	var $spos = $s.length;
	if(strict == null) strict = true;
	var $tmp = new hxjson2.JSONDecoder(s,strict).getValue();
	$s.pop();
	return $tmp;
	$s.pop();
}
hxjson2.JSON.stringify = function(o) {
	$s.push("hxjson2.JSON::stringify");
	var $spos = $s.length;
	var $tmp = new hxjson2.JSONEncoder(o).getString();
	$s.pop();
	return $tmp;
	$s.pop();
}
hxjson2.JSON.parse = function(s,strict) {
	$s.push("hxjson2.JSON::parse");
	var $spos = $s.length;
	if(strict == null) strict = true;
	var $tmp = new hxjson2.JSONDecoder(s,strict).getValue();
	$s.pop();
	return $tmp;
	$s.pop();
}
hxjson2.JSON.prototype = {
	__class__: hxjson2.JSON
}
com.wighawag.game.xjump.Application = $hxClasses["com.wighawag.game.xjump.Application"] = function() {
	$s.push("com.wighawag.game.xjump.Application::new");
	var $spos = $s.length;
	jeash.display.Sprite.call(this);
	com.wighawag.log.EventSignaler.event.bind(function(value) {
		$s.push("com.wighawag.game.xjump.Application::new@18");
		var $spos = $s.length;
		com.wighawag.log.Logger.trace(value,{ fileName : "Application.hx", lineNumber : 18, className : "com.wighawag.game.xjump.Application", methodName : "new"});
		$s.pop();
	});
	com.wighawag.log.EventSignaler.warning.bind(function(value) {
		$s.push("com.wighawag.game.xjump.Application::new@19");
		var $spos = $s.length;
		com.wighawag.log.Logger.warning(value,{ fileName : "Application.hx", lineNumber : 19, className : "com.wighawag.game.xjump.Application", methodName : "new"});
		$s.pop();
	});
	com.wighawag.log.EventSignaler.error.bind(function(value) {
		$s.push("com.wighawag.game.xjump.Application::new@20");
		var $spos = $s.length;
		com.wighawag.log.Logger.error(value,{ fileName : "Application.hx", lineNumber : 20, className : "com.wighawag.game.xjump.Application", methodName : "new"});
		$s.pop();
	});
	com.wighawag.log.EventSignaler.criticalError.bind(function(value) {
		$s.push("com.wighawag.game.xjump.Application::new@21");
		var $spos = $s.length;
		com.wighawag.log.Logger.criticalError(value,{ fileName : "Application.hx", lineNumber : 21, className : "com.wighawag.game.xjump.Application", methodName : "new"});
		$s.pop();
	});
	$s.pop();
}
com.wighawag.game.xjump.Application.__name__ = ["com","wighawag","game","xjump","Application"];
com.wighawag.game.xjump.Application.main = function() {
	$s.push("com.wighawag.game.xjump.Application::main");
	var $spos = $s.length;
	var app = new com.wighawag.game.xjump.Application();
	app.addEventListener(jeash.events.Event.ADDED_TO_STAGE,app.onAddedToStage.$bind(app));
	jeash.Lib.jeashGetCurrent().addChild(app);
	$s.pop();
}
com.wighawag.game.xjump.Application.__super__ = jeash.display.Sprite;
com.wighawag.game.xjump.Application.prototype = $extend(jeash.display.Sprite.prototype,{
	gameManager: null
	,onRemovedFromStage: function(e) {
		$s.push("com.wighawag.game.xjump.Application::onRemovedFromStage");
		var $spos = $s.length;
		this.removeEventListener(jeash.events.Event.REMOVED_FROM_STAGE,this.onRemovedFromStage.$bind(this));
		$s.pop();
	}
	,onAddedToStage: function(event) {
		$s.push("com.wighawag.game.xjump.Application::onAddedToStage");
		var $spos = $s.length;
		this.removeEventListener(jeash.events.Event.ADDED_TO_STAGE,this.onAddedToStage.$bind(this));
		this.addEventListener(jeash.events.Event.REMOVED_FROM_STAGE,this.onRemovedFromStage.$bind(this));
		this.gameManager = new com.wighawag.game.xjump.TowerGameManager(null,null,this.GetStage());
		this.gameManager.start();
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.Application
});
com.wighawag.game.engine.world.twodimensions.core.World2D = $hxClasses["com.wighawag.game.engine.world.twodimensions.core.World2D"] = function() { }
com.wighawag.game.engine.world.twodimensions.core.World2D.__name__ = ["com","wighawag","game","engine","world","twodimensions","core","World2D"];
com.wighawag.game.engine.world.twodimensions.core.World2D.__interfaces__ = [com.wighawag.game.engine.world.twodimensions.core.Renderable2D,com.wighawag.game.engine.core.World];
com.wighawag.game.engine.world.twodimensions.core.World2D.prototype = {
	__class__: com.wighawag.game.engine.world.twodimensions.core.World2D
}
jeash.events.MouseEvent = $hxClasses["jeash.events.MouseEvent"] = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	$s.push("jeash.events.MouseEvent::new");
	var $spos = $s.length;
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	jeash.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.clickCount = clickCount;
	$s.pop();
}
jeash.events.MouseEvent.__name__ = ["jeash","events","MouseEvent"];
jeash.events.MouseEvent.jeashCreate = function(type,event,local,target) {
	$s.push("jeash.events.MouseEvent::jeashCreate");
	var $spos = $s.length;
	var jeashMouseDown = false;
	var delta = type == jeash.events.MouseEvent.MOUSE_WHEEL?(function($this) {
		var $r;
		var mouseEvent = event;
		$r = mouseEvent.wheelDelta?js.Lib.isOpera?Std["int"](mouseEvent.wheelDelta / 40):Std["int"](mouseEvent.wheelDelta / 120):mouseEvent.detail?Std["int"](-mouseEvent.detail):null;
		return $r;
	}(this)):2;
	if(type == jeash.events.MouseEvent.MOUSE_DOWN) jeashMouseDown = event.which != null?event.which == 1:event.button != null?js.Lib.isIE && event.button == 1 || event.button == 0:false; else if(type == jeash.events.MouseEvent.MOUSE_UP) {
		if(event.which != null) {
			if(event.which == 1) jeashMouseDown = false; else if(event.button != null) {
				if(js.Lib.isIE && event.button == 1 || event.button == 0) jeashMouseDown = false; else jeashMouseDown = false;
			}
		}
	}
	var pseudoEvent = new jeash.events.MouseEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,jeashMouseDown,delta);
	pseudoEvent.stageX = jeash.Lib.jeashGetCurrent().GetStage().jeashGetMouseX();
	pseudoEvent.stageY = jeash.Lib.jeashGetCurrent().GetStage().jeashGetMouseY();
	pseudoEvent.target = target;
	$s.pop();
	return pseudoEvent;
	$s.pop();
}
jeash.events.MouseEvent.__super__ = jeash.events.Event;
jeash.events.MouseEvent.prototype = $extend(jeash.events.Event.prototype,{
	altKey: null
	,buttonDown: null
	,ctrlKey: null
	,delta: null
	,localX: null
	,localY: null
	,relatedObject: null
	,shiftKey: null
	,stageX: null
	,stageY: null
	,commandKey: null
	,clickCount: null
	,jeashCreateSimilar: function(type,related,targ) {
		$s.push("jeash.events.MouseEvent::jeashCreateSimilar");
		var $spos = $s.length;
		var result = new jeash.events.MouseEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey,this.clickCount);
		if(targ != null) result.target = targ;
		var $tmp = result;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,updateAfterEvent: function() {
		$s.push("jeash.events.MouseEvent::updateAfterEvent");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: jeash.events.MouseEvent
});
jeash.events.EventPhase = $hxClasses["jeash.events.EventPhase"] = function() { }
jeash.events.EventPhase.__name__ = ["jeash","events","EventPhase"];
jeash.events.EventPhase.prototype = {
	__class__: jeash.events.EventPhase
}
jeash.display.SpreadMethod = $hxClasses["jeash.display.SpreadMethod"] = { __ename__ : ["jeash","display","SpreadMethod"], __constructs__ : ["REPEAT","REFLECT","PAD"] }
jeash.display.SpreadMethod.REPEAT = ["REPEAT",0];
jeash.display.SpreadMethod.REPEAT.toString = $estr;
jeash.display.SpreadMethod.REPEAT.__enum__ = jeash.display.SpreadMethod;
jeash.display.SpreadMethod.REFLECT = ["REFLECT",1];
jeash.display.SpreadMethod.REFLECT.toString = $estr;
jeash.display.SpreadMethod.REFLECT.__enum__ = jeash.display.SpreadMethod;
jeash.display.SpreadMethod.PAD = ["PAD",2];
jeash.display.SpreadMethod.PAD.toString = $estr;
jeash.display.SpreadMethod.PAD.__enum__ = jeash.display.SpreadMethod;
de.polygonal.core.math.Limits = $hxClasses["de.polygonal.core.math.Limits"] = function() { }
de.polygonal.core.math.Limits.__name__ = ["de","polygonal","core","math","Limits"];
de.polygonal.core.math.Limits.prototype = {
	__class__: de.polygonal.core.math.Limits
}
jeash.display.GraphicsSolidFill = $hxClasses["jeash.display.GraphicsSolidFill"] = function(color,alpha) {
	$s.push("jeash.display.GraphicsSolidFill::new");
	var $spos = $s.length;
	if(alpha == null) alpha = 1;
	if(color == null) color = 0;
	this.alpha = alpha;
	this.color = color;
	this.jeashGraphicsDataType = jeash.display.GraphicsDataType.SOLID;
	this.jeashGraphicsFillType = jeash.display.GraphicsFillType.SOLID_FILL;
	$s.pop();
}
jeash.display.GraphicsSolidFill.__name__ = ["jeash","display","GraphicsSolidFill"];
jeash.display.GraphicsSolidFill.__interfaces__ = [jeash.display.IGraphicsFill,jeash.display.IGraphicsData];
jeash.display.GraphicsSolidFill.prototype = {
	alpha: null
	,color: null
	,jeashGraphicsDataType: null
	,jeashGraphicsFillType: null
	,__class__: jeash.display.GraphicsSolidFill
}
com.wighawag.game.engine.core.Engine = $hxClasses["com.wighawag.game.engine.core.Engine"] = function() {
	$s.push("com.wighawag.game.engine.core.Engine::new");
	var $spos = $s.length;
	$s.pop();
}
com.wighawag.game.engine.core.Engine.__name__ = ["com","wighawag","game","engine","core","Engine"];
com.wighawag.game.engine.core.Engine.prototype = {
	timer: null
	,lastMilisecondTime: null
	,updatableList: null
	,process: null
	,interval: null
	,onComplete: null
	,start: function(process,updatableList,overrideUpdateInterval) {
		$s.push("com.wighawag.game.engine.core.Engine::start");
		var $spos = $s.length;
		if(overrideUpdateInterval == null) overrideUpdateInterval = -1;
		this.onComplete = new hsl.haxe.DirectSignaler(this);
		this.process = process;
		this.updatableList = updatableList;
		this.interval = process.updateInterval;
		if(overrideUpdateInterval != -1) this.interval = overrideUpdateInterval;
		this.timer = new haxe.Timer(this.interval);
		this.timer.run = this.update.$bind(this);
		var $tmp = this.onComplete;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,update: function() {
		$s.push("com.wighawag.game.engine.core.Engine::update");
		var $spos = $s.length;
		var newMilisecondTime = Std["int"](haxe.Timer.stamp() * 1000);
		var milisecondsStep = newMilisecondTime - this.lastMilisecondTime;
		this.lastMilisecondTime = newMilisecondTime;
		this.process.update(milisecondsStep);
		if(this.process.done) {
			this.timer.stop();
			var result = this.process.getResult();
			this.onComplete.dispatch(result,null,{ fileName : "Engine.hx", lineNumber : 56, className : "com.wighawag.game.engine.core.Engine", methodName : "update"});
		} else {
			var _g = 0, _g1 = this.updatableList;
			while(_g < _g1.length) {
				var updatable = _g1[_g];
				++_g;
				updatable.update(milisecondsStep);
			}
		}
		$s.pop();
	}
	,__class__: com.wighawag.game.engine.core.Engine
}
jeash.geom.Rectangle = $hxClasses["jeash.geom.Rectangle"] = function(inX,inY,inWidth,inHeight) {
	$s.push("jeash.geom.Rectangle::new");
	var $spos = $s.length;
	this.x = inX == null?0:inX;
	this.y = inY == null?0:inY;
	this.width = inWidth == null?0:inWidth;
	this.height = inHeight == null?0:inHeight;
	$s.pop();
}
jeash.geom.Rectangle.__name__ = ["jeash","geom","Rectangle"];
jeash.geom.Rectangle.prototype = {
	x: null
	,y: null
	,width: null
	,height: null
	,left: null
	,get_left: function() {
		$s.push("jeash.geom.Rectangle::get_left");
		var $spos = $s.length;
		var $tmp = this.x;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_left: function(l) {
		$s.push("jeash.geom.Rectangle::set_left");
		var $spos = $s.length;
		this.width -= l - this.x;
		this.x = l;
		$s.pop();
		return l;
		$s.pop();
	}
	,right: null
	,get_right: function() {
		$s.push("jeash.geom.Rectangle::get_right");
		var $spos = $s.length;
		var $tmp = this.x + this.width;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_right: function(r) {
		$s.push("jeash.geom.Rectangle::set_right");
		var $spos = $s.length;
		this.width = r - this.x;
		$s.pop();
		return r;
		$s.pop();
	}
	,top: null
	,get_top: function() {
		$s.push("jeash.geom.Rectangle::get_top");
		var $spos = $s.length;
		var $tmp = this.y;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_top: function(t) {
		$s.push("jeash.geom.Rectangle::set_top");
		var $spos = $s.length;
		this.height -= t - this.y;
		this.y = t;
		$s.pop();
		return t;
		$s.pop();
	}
	,bottom: null
	,get_bottom: function() {
		$s.push("jeash.geom.Rectangle::get_bottom");
		var $spos = $s.length;
		var $tmp = this.y + this.height;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_bottom: function(b) {
		$s.push("jeash.geom.Rectangle::set_bottom");
		var $spos = $s.length;
		this.height = b - this.y;
		$s.pop();
		return b;
		$s.pop();
	}
	,topLeft: null
	,get_topLeft: function() {
		$s.push("jeash.geom.Rectangle::get_topLeft");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(this.x,this.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_topLeft: function(p) {
		$s.push("jeash.geom.Rectangle::set_topLeft");
		var $spos = $s.length;
		this.x = p.x;
		this.y = p.y;
		var $tmp = p.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,size: null
	,get_size: function() {
		$s.push("jeash.geom.Rectangle::get_size");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(this.width,this.height);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_size: function(p) {
		$s.push("jeash.geom.Rectangle::set_size");
		var $spos = $s.length;
		this.width = p.x;
		this.height = p.y;
		var $tmp = p.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,bottomRight: null
	,get_bottomRight: function() {
		$s.push("jeash.geom.Rectangle::get_bottomRight");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Point(this.x + this.width,this.y + this.height);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set_bottomRight: function(p) {
		$s.push("jeash.geom.Rectangle::set_bottomRight");
		var $spos = $s.length;
		this.width = p.x - this.x;
		this.height = p.y - this.y;
		var $tmp = p.clone();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clone: function() {
		$s.push("jeash.geom.Rectangle::clone");
		var $spos = $s.length;
		var $tmp = new jeash.geom.Rectangle(this.x,this.y,this.width,this.height);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,contains: function(inX,inY) {
		$s.push("jeash.geom.Rectangle::contains");
		var $spos = $s.length;
		var $tmp = inX >= this.x && inY >= this.y && inX < this.get_right() && inY < this.get_bottom();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,containsPoint: function(point) {
		$s.push("jeash.geom.Rectangle::containsPoint");
		var $spos = $s.length;
		var $tmp = this.contains(point.x,point.y);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,containsRect: function(rect) {
		$s.push("jeash.geom.Rectangle::containsRect");
		var $spos = $s.length;
		var $tmp = this.contains(rect.x,rect.y) && this.containsPoint(rect.get_bottomRight());
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,equals: function(toCompare) {
		$s.push("jeash.geom.Rectangle::equals");
		var $spos = $s.length;
		var $tmp = this.x == toCompare.x && this.y == toCompare.y && this.width == toCompare.width && this.height == toCompare.height;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,inflate: function(dx,dy) {
		$s.push("jeash.geom.Rectangle::inflate");
		var $spos = $s.length;
		this.x -= dx;
		this.width += dx * 2;
		this.y -= dy;
		this.height += dy * 2;
		$s.pop();
	}
	,inflatePoint: function(point) {
		$s.push("jeash.geom.Rectangle::inflatePoint");
		var $spos = $s.length;
		this.inflate(point.x,point.y);
		$s.pop();
	}
	,intersection: function(toIntersect) {
		$s.push("jeash.geom.Rectangle::intersection");
		var $spos = $s.length;
		var x0 = this.x < toIntersect.x?toIntersect.x:this.x;
		var x1 = this.get_right() > toIntersect.get_right()?toIntersect.get_right():this.get_right();
		if(x1 <= x0) {
			var $tmp = new jeash.geom.Rectangle();
			$s.pop();
			return $tmp;
		}
		var y0 = this.y < toIntersect.y?toIntersect.y:this.y;
		var y1 = this.get_bottom() > toIntersect.get_bottom()?toIntersect.get_bottom():this.get_bottom();
		if(y1 <= y0) {
			var $tmp = new jeash.geom.Rectangle();
			$s.pop();
			return $tmp;
		}
		var $tmp = new jeash.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,intersects: function(toIntersect) {
		$s.push("jeash.geom.Rectangle::intersects");
		var $spos = $s.length;
		var x0 = this.x < toIntersect.x?toIntersect.x:this.x;
		var x1 = this.get_right() > toIntersect.get_right()?toIntersect.get_right():this.get_right();
		if(x1 <= x0) {
			$s.pop();
			return false;
		}
		var y0 = this.y < toIntersect.y?toIntersect.y:this.y;
		var y1 = this.get_bottom() > toIntersect.get_bottom()?toIntersect.get_bottom():this.get_bottom();
		var $tmp = y1 > y0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,union: function(toUnion) {
		$s.push("jeash.geom.Rectangle::union");
		var $spos = $s.length;
		var x0 = this.x > toUnion.x?toUnion.x:this.x;
		var x1 = this.get_right() < toUnion.get_right()?toUnion.get_right():this.get_right();
		var y0 = this.y > toUnion.y?toUnion.y:this.y;
		var y1 = this.get_bottom() < toUnion.get_bottom()?toUnion.get_bottom():this.get_bottom();
		var $tmp = new jeash.geom.Rectangle(x0,y0,x1 - x0,y1 - y0);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("jeash.geom.Rectangle::isEmpty");
		var $spos = $s.length;
		var $tmp = this.width == 0 && this.height == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,offset: function(dx,dy) {
		$s.push("jeash.geom.Rectangle::offset");
		var $spos = $s.length;
		this.x += dx;
		this.y += dy;
		$s.pop();
	}
	,offsetPoint: function(point) {
		$s.push("jeash.geom.Rectangle::offsetPoint");
		var $spos = $s.length;
		this.x += point.x;
		this.y += point.y;
		$s.pop();
	}
	,setEmpty: function() {
		$s.push("jeash.geom.Rectangle::setEmpty");
		var $spos = $s.length;
		this.x = this.y = this.width = this.height = 0;
		$s.pop();
	}
	,transform: function(m) {
		$s.push("jeash.geom.Rectangle::transform");
		var $spos = $s.length;
		var tx0 = m.a * this.x + m.c * this.y;
		var tx1 = tx0;
		var ty0 = m.b * this.x + m.d * this.y;
		var ty1 = tx0;
		var tx = m.a * (this.x + this.width) + m.c * this.y;
		var ty = m.b * (this.x + this.width) + m.d * this.y;
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * (this.x + this.width) + m.c * (this.y + this.height);
		ty = m.b * (this.x + this.width) + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		tx = m.a * this.x + m.c * (this.y + this.height);
		ty = m.b * this.x + m.d * (this.y + this.height);
		if(tx < tx0) tx0 = tx;
		if(ty < ty0) ty0 = ty;
		if(tx > tx1) tx1 = tx;
		if(ty > ty1) ty1 = ty;
		var $tmp = new jeash.geom.Rectangle(tx0 + m.tx,ty0 + m.ty,tx1 - tx0,ty1 - ty0);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,extendBounds: function(r) {
		$s.push("jeash.geom.Rectangle::extendBounds");
		var $spos = $s.length;
		var dx = this.x - r.x;
		if(dx > 0) {
			this.x -= dx;
			this.width += dx;
		}
		var dy = this.y - r.y;
		if(dy > 0) {
			this.y -= dy;
			this.height += dy;
		}
		if(r.get_right() > this.get_right()) this.set_right(r.get_right());
		if(r.get_bottom() > this.get_bottom()) this.set_bottom(r.get_bottom());
		$s.pop();
	}
	,__class__: jeash.geom.Rectangle
	,__properties__: {set_bottomRight:"set_bottomRight",get_bottomRight:"get_bottomRight",set_size:"set_size",get_size:"get_size",set_topLeft:"set_topLeft",get_topLeft:"get_topLeft",set_bottom:"set_bottom",get_bottom:"get_bottom",set_top:"set_top",get_top:"get_top",set_right:"set_right",get_right:"get_right",set_left:"set_left",get_left:"get_left"}
}
jeash.display.MovieClip = $hxClasses["jeash.display.MovieClip"] = function() {
	$s.push("jeash.display.MovieClip::new");
	var $spos = $s.length;
	jeash.display.Sprite.call(this);
	this.enabled = true;
	this.mCurrentFrame = 0;
	this.mTotalFrames = 0;
	this.name = "MovieClip " + jeash.display.DisplayObject.mNameID++;
	$s.pop();
}
jeash.display.MovieClip.__name__ = ["jeash","display","MovieClip"];
jeash.display.MovieClip.__super__ = jeash.display.Sprite;
jeash.display.MovieClip.prototype = $extend(jeash.display.Sprite.prototype,{
	enabled: null
	,currentFrame: null
	,framesLoaded: null
	,totalFrames: null
	,mCurrentFrame: null
	,mTotalFrames: null
	,GetTotalFrames: function() {
		$s.push("jeash.display.MovieClip::GetTotalFrames");
		var $spos = $s.length;
		var $tmp = this.mTotalFrames;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetCurrentFrame: function() {
		$s.push("jeash.display.MovieClip::GetCurrentFrame");
		var $spos = $s.length;
		var $tmp = this.mCurrentFrame;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,gotoAndPlay: function(frame,scene) {
		$s.push("jeash.display.MovieClip::gotoAndPlay");
		var $spos = $s.length;
		$s.pop();
	}
	,gotoAndStop: function(frame,scene) {
		$s.push("jeash.display.MovieClip::gotoAndStop");
		var $spos = $s.length;
		$s.pop();
	}
	,play: function() {
		$s.push("jeash.display.MovieClip::play");
		var $spos = $s.length;
		$s.pop();
	}
	,stop: function() {
		$s.push("jeash.display.MovieClip::stop");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: jeash.display.MovieClip
	,__properties__: $extend(jeash.display.Sprite.prototype.__properties__,{get_totalFrames:"GetTotalFrames",get_framesLoaded:"GetTotalFrames",get_currentFrame:"GetCurrentFrame"})
});
if(!jeash.filters) jeash.filters = {}
jeash.filters.BitmapFilter = $hxClasses["jeash.filters.BitmapFilter"] = function(inType) {
	$s.push("jeash.filters.BitmapFilter::new");
	var $spos = $s.length;
	this.mType = inType;
	$s.pop();
}
jeash.filters.BitmapFilter.__name__ = ["jeash","filters","BitmapFilter"];
jeash.filters.BitmapFilter.prototype = {
	mType: null
	,clone: function() {
		$s.push("jeash.filters.BitmapFilter::clone");
		var $spos = $s.length;
		throw "Implement in subclass. BitmapFilter::clone";
		$s.pop();
		return null;
		$s.pop();
	}
	,jeashPreFilter: function(surface) {
		$s.push("jeash.filters.BitmapFilter::jeashPreFilter");
		var $spos = $s.length;
		$s.pop();
	}
	,jeashApplyFilter: function(surface) {
		$s.push("jeash.filters.BitmapFilter::jeashApplyFilter");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: jeash.filters.BitmapFilter
}
com.wighawag.game.engine.core.Update = $hxClasses["com.wighawag.game.engine.core.Update"] = function() { }
com.wighawag.game.engine.core.Update.__name__ = ["com","wighawag","game","engine","core","Update"];
com.wighawag.game.engine.core.Update.prototype = {
	entities: null
	,__class__: com.wighawag.game.engine.core.Update
}
jeash.text.TextField = $hxClasses["jeash.text.TextField"] = function() {
	$s.push("jeash.text.TextField::new");
	var $spos = $s.length;
	jeash.display.InteractiveObject.call(this);
	this.mWidth = 40;
	this.mHeight = 20;
	this.mHTMLMode = false;
	this.multiline = false;
	this.jeashGraphics = new jeash.display.Graphics();
	this.jeashGraphics.jeashExtentBuffer = 0;
	this.mCaretGfx = new jeash.display.Graphics();
	this.mFace = jeash.text.TextField.mDefaultFont;
	this.mAlign = jeash.text.TextFormatAlign.LEFT;
	this.mParagraphs = new Array();
	this.mSelStart = -1;
	this.mSelEnd = -1;
	this.mScrollH = 0;
	this.mScrollV = 1;
	this.mType = jeash.text.TextFieldType.DYNAMIC;
	this.SetAutoSize(jeash.text.TextFieldAutoSize.NONE);
	this.mTextHeight = 12;
	this.mMaxHeight = this.mTextHeight;
	this.mHTMLText = " ";
	this.mText = " ";
	this.mTextColour = 0;
	this.tabEnabled = false;
	this.mTryFreeType = true;
	this.selectable = true;
	this.mInsertPos = 0;
	this.jeashInputEnabled = false;
	this.mDownChar = 0;
	this.mSelectDrag = -1;
	this.mLineInfo = [];
	this.jeashSetDefaultTextFormat(new jeash.text.TextFormat());
	this.name = "TextField " + jeash.display.DisplayObject.mNameID++;
	this.jeashGraphics.jeashSurface.id = this.name;
	this.SetBorderColor(0);
	this.SetBorder(false);
	this.SetBackgroundColor(16777215);
	this.SetBackground(false);
	this.jeashCaretVisible = false;
	this.jeashCaretTimer = new haxe.Timer(jeash.text.TextField.CARET_BLINK_SPEED);
	$s.pop();
}
jeash.text.TextField.__name__ = ["jeash","text","TextField"];
jeash.text.TextField.__super__ = jeash.display.InteractiveObject;
jeash.text.TextField.prototype = $extend(jeash.display.InteractiveObject.prototype,{
	htmlText: null
	,text: null
	,textColor: null
	,textWidth: null
	,textHeight: null
	,defaultTextFormat: null
	,mHTMLText: null
	,mText: null
	,mTextColour: null
	,mType: null
	,autoSize: null
	,selectable: null
	,multiline: null
	,embedFonts: null
	,borderColor: null
	,background: null
	,backgroundColor: null
	,caretPos: null
	,displayAsPassword: null
	,border: null
	,wordWrap: null
	,maxChars: null
	,restrict: null
	,type: null
	,antiAliasType: null
	,sharpness: null
	,gridFitType: null
	,length: null
	,mTextHeight: null
	,mFace: null
	,mDownChar: null
	,selectionBeginIndex: null
	,selectionEndIndex: null
	,caretIndex: null
	,mParagraphs: null
	,mTryFreeType: null
	,mLineInfo: null
	,mAlign: null
	,mHTMLMode: null
	,mSelStart: null
	,mSelEnd: null
	,mInsertPos: null
	,mSelectDrag: null
	,jeashInputEnabled: null
	,mWidth: null
	,mHeight: null
	,mSelectionAnchored: null
	,mSelectionAnchor: null
	,mScrollH: null
	,mScrollV: null
	,jeashGraphics: null
	,mCaretGfx: null
	,jeashCaretTimer: null
	,jeashCaretVisible: null
	,jeashClearSelection: function() {
		$s.push("jeash.text.TextField::jeashClearSelection");
		var $spos = $s.length;
		this.mSelStart = this.mSelEnd = -1;
		this.mSelectionAnchored = false;
		this.Rebuild();
		$s.pop();
	}
	,jeashDeleteSelection: function() {
		$s.push("jeash.text.TextField::jeashDeleteSelection");
		var $spos = $s.length;
		if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) {
			this.mText = this.mText.substr(0,this.mSelStart) + this.mText.substr(this.mSelEnd);
			this.mInsertPos = this.mSelStart;
			this.mSelStart = this.mSelEnd = -1;
			this.mSelectionAnchored = false;
		}
		$s.pop();
	}
	,jeashOnMoveKeyStart: function(inShift) {
		$s.push("jeash.text.TextField::jeashOnMoveKeyStart");
		var $spos = $s.length;
		if(inShift && this.selectable) {
			if(!this.mSelectionAnchored) {
				this.mSelectionAnchored = true;
				this.mSelectionAnchor = this.mInsertPos;
				if(jeash.text.TextField.sSelectionOwner != this) {
					if(jeash.text.TextField.sSelectionOwner != null) jeash.text.TextField.sSelectionOwner.jeashClearSelection();
					jeash.text.TextField.sSelectionOwner = this;
				}
			}
		} else this.jeashClearSelection();
		$s.pop();
	}
	,jeashOnMoveKeyEnd: function() {
		$s.push("jeash.text.TextField::jeashOnMoveKeyEnd");
		var $spos = $s.length;
		if(this.mSelectionAnchored) {
			if(this.mInsertPos < this.mSelectionAnchor) {
				this.mSelStart = this.mInsertPos;
				this.mSelEnd = this.mSelectionAnchor;
			} else {
				this.mSelStart = this.mSelectionAnchor;
				this.mSelEnd = this.mInsertPos;
			}
		}
		$s.pop();
	}
	,jeashOnKey: function(inKey) {
		$s.push("jeash.text.TextField::jeashOnKey");
		var $spos = $s.length;
		if(inKey.type != jeash.events.KeyboardEvent.KEY_DOWN) {
			$s.pop();
			return;
		}
		var key = inKey.keyCode;
		var ascii = inKey.charCode;
		var shift = inKey.shiftKey;
		if(this.jeashInputEnabled) {
			if(key == jeash.ui.Keyboard.LEFT) {
				this.jeashOnMoveKeyStart(shift);
				this.mInsertPos--;
				this.jeashOnMoveKeyEnd();
			} else if(key == jeash.ui.Keyboard.RIGHT) {
				this.jeashOnMoveKeyStart(shift);
				this.mInsertPos++;
				this.jeashOnMoveKeyEnd();
			} else if(key == jeash.ui.Keyboard.HOME) {
				this.jeashOnMoveKeyStart(shift);
				this.mInsertPos = 0;
				this.jeashOnMoveKeyEnd();
			} else if(key == jeash.ui.Keyboard.END) {
				this.jeashOnMoveKeyStart(shift);
				this.mInsertPos = this.mText.length;
				this.jeashOnMoveKeyEnd();
			} else if(key == jeash.ui.Keyboard.ENTER) {
				if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) this.jeashDeleteSelection();
				this.mText = this.mText.substr(0,this.mInsertPos) + "\n" + this.mText.substr(this.mInsertPos);
				this.mInsertPos++;
			} else if(key == jeash.ui.Keyboard.SPACE) {
				if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) this.jeashDeleteSelection();
				this.mText = this.mText.substr(0,this.mInsertPos) + " " + this.mText.substr(this.mInsertPos);
				this.mInsertPos++;
			} else if(key == jeash.ui.Keyboard.TAB) {
				if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) this.jeashDeleteSelection();
				this.mText = this.mText.substr(0,this.mInsertPos) + "\t" + this.mText.substr(this.mInsertPos);
			} else if(key == jeash.ui.Keyboard.DELETE || key == jeash.ui.Keyboard.BACKSPACE) {
				if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) this.jeashDeleteSelection(); else {
					var l = this.mText.length;
					if(key == jeash.ui.Keyboard.BACKSPACE && this.mInsertPos > 0) this.mInsertPos--;
					if(this.mInsertPos > l) {
						if(l > 0) this.mText = this.mText.substr(0,l - 1);
					} else if(this.mInsertPos == 0 && key == jeash.ui.Keyboard.BACKSPACE) {
					} else this.mText = this.mText.substr(0,this.mInsertPos) + this.mText.substr(this.mInsertPos + 1);
				}
			} else if(ascii >= 48 && ascii < 128) {
				if(this.mSelEnd > this.mSelStart && this.mSelStart >= 0) this.jeashDeleteSelection();
				this.mText = this.mText.substr(0,this.mInsertPos) + String.fromCharCode(ascii) + this.mText.substr(this.mInsertPos);
				this.mInsertPos++;
			}
			if(this.mInsertPos < 0) this.mInsertPos = 0;
			var l = this.mText.length;
			if(this.mInsertPos > l) this.mInsertPos = l;
			this.RebuildText();
		}
		$s.pop();
	}
	,jeashCaretTimerCallback: function() {
		$s.push("jeash.text.TextField::jeashCaretTimerCallback");
		var $spos = $s.length;
		if(this.jeashGetVisible() && this.jeashInputEnabled && this.GetStage().jeashGetFocus() == this) {
			this.jeashCaretVisible = !this.jeashCaretVisible;
			jeash.Lib.jeashSetSurfaceVisible(this.mCaretGfx.jeashSurface,this.jeashCaretVisible);
		}
		$s.pop();
	}
	,jeashOnMouseDown: function(event) {
		$s.push("jeash.text.TextField::jeashOnMouseDown");
		var $spos = $s.length;
		if(this.tabEnabled || this.selectable) {
			if(jeash.text.TextField.sSelectionOwner != null) jeash.text.TextField.sSelectionOwner.jeashClearSelection();
			jeash.text.TextField.sSelectionOwner = this;
			this.mSelectDrag = this.getCharIndexAtPoint(event.localX,event.localY);
			if(this.tabEnabled) this.mInsertPos = this.mSelectDrag;
			this.mSelStart = this.mSelEnd = -1;
			this.RebuildText();
		}
		$s.pop();
	}
	,jeashOnMouseDrag: function(event) {
		$s.push("jeash.text.TextField::jeashOnMouseDrag");
		var $spos = $s.length;
		if((this.tabEnabled || this.selectable) && this.mSelectDrag >= 0) {
			var idx = this.getCharIndexAtPoint(event.localX,event.localY) + 1;
			if(jeash.text.TextField.sSelectionOwner != this) {
				if(jeash.text.TextField.sSelectionOwner != null) jeash.text.TextField.sSelectionOwner.jeashClearSelection();
				jeash.text.TextField.sSelectionOwner = this;
			}
			if(idx < this.mSelectDrag) {
				this.mSelStart = idx;
				this.mSelEnd = this.mSelectDrag;
			} else if(idx > this.mSelectDrag) {
				this.mSelStart = this.mSelectDrag;
				this.mSelEnd = idx;
			} else this.mSelStart = this.mSelEnd = -1;
			if(this.tabEnabled) this.mInsertPos = idx;
			this.RebuildText();
		}
		$s.pop();
	}
	,jeashOnMouseUp: function(event) {
		$s.push("jeash.text.TextField::jeashOnMouseUp");
		var $spos = $s.length;
		this.mSelectDrag = -1;
		$s.pop();
	}
	,jeashOnMouseOver: function(_) {
		$s.push("jeash.text.TextField::jeashOnMouseOver");
		var $spos = $s.length;
		jeash.Lib.jeashSetCursor(jeash._Lib.CursorType.Text);
		$s.pop();
	}
	,jeashOnMouseOut: function(_) {
		$s.push("jeash.text.TextField::jeashOnMouseOut");
		var $spos = $s.length;
		jeash.Lib.jeashSetCursor(jeash._Lib.CursorType.Default);
		$s.pop();
	}
	,jeashGetWidth: function() {
		$s.push("jeash.text.TextField::jeashGetWidth");
		var $spos = $s.length;
		var $tmp = this.mWidth;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetHeight: function() {
		$s.push("jeash.text.TextField::jeashGetHeight");
		var $spos = $s.length;
		var $tmp = this.mHeight;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetWidth: function(inWidth) {
		$s.push("jeash.text.TextField::jeashSetWidth");
		var $spos = $s.length;
		if(inWidth != this.mWidth) {
			this.mWidth = inWidth;
			this.jeashGraphics.jeashSurface.width = Math.round(inWidth);
			this.Rebuild();
		}
		var $tmp = this.mWidth;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetHeight: function(inHeight) {
		$s.push("jeash.text.TextField::jeashSetHeight");
		var $spos = $s.length;
		if(inHeight != this.mHeight) {
			this.mHeight = inHeight;
			this.jeashGraphics.jeashSurface.height = Math.round(inHeight);
			this.Rebuild();
		}
		var $tmp = this.mHeight;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetType: function() {
		$s.push("jeash.text.TextField::GetType");
		var $spos = $s.length;
		var $tmp = this.mType;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetType: function(inType) {
		$s.push("jeash.text.TextField::SetType");
		var $spos = $s.length;
		this.mType = inType;
		this.jeashInputEnabled = this.mType == jeash.text.TextFieldType.INPUT;
		if(this.jeashInputEnabled && this.mHTMLMode) this.ConvertHTMLToText(true);
		this.tabEnabled = this.GetType() == jeash.text.TextFieldType.INPUT;
		this.Rebuild();
		$s.pop();
		return inType;
		$s.pop();
	}
	,GetCaret: function() {
		$s.push("jeash.text.TextField::GetCaret");
		var $spos = $s.length;
		var $tmp = this.mInsertPos;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetGraphics: function() {
		$s.push("jeash.text.TextField::jeashGetGraphics");
		var $spos = $s.length;
		var $tmp = this.jeashGraphics;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getLineIndexAtPoint: function(inX,inY) {
		$s.push("jeash.text.TextField::getLineIndexAtPoint");
		var $spos = $s.length;
		if(this.mLineInfo.length < 1) {
			$s.pop();
			return -1;
		}
		if(inY <= 0) {
			$s.pop();
			return 0;
		}
		var _g1 = 0, _g = this.mLineInfo.length;
		while(_g1 < _g) {
			var l = _g1++;
			if(this.mLineInfo[l].mY0 > inY) {
				var $tmp = l == 0?0:l - 1;
				$s.pop();
				return $tmp;
			}
		}
		var $tmp = this.mLineInfo.length - 1;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getCharIndexAtPoint: function(inX,inY) {
		$s.push("jeash.text.TextField::getCharIndexAtPoint");
		var $spos = $s.length;
		var li = this.getLineIndexAtPoint(inX,inY);
		if(li < 0) {
			$s.pop();
			return -1;
		}
		var line = this.mLineInfo[li];
		var idx = line.mIndex;
		var _g = 0, _g1 = line.mX;
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			if(x > inX) {
				$s.pop();
				return idx;
			}
			idx++;
		}
		$s.pop();
		return idx;
		$s.pop();
	}
	,getCharBoundaries: function(a) {
		$s.push("jeash.text.TextField::getCharBoundaries");
		var $spos = $s.length;
		$s.pop();
		return null;
		$s.pop();
	}
	,mMaxWidth: null
	,mMaxHeight: null
	,mLimitRenderX: null
	,RenderRow: function(inRow,inY,inCharIdx,inAlign,inInsert) {
		$s.push("jeash.text.TextField::RenderRow");
		var $spos = $s.length;
		var h = 0;
		var w = 0;
		var _g = 0;
		while(_g < inRow.length) {
			var chr = inRow[_g];
			++_g;
			if(chr.fh > h) h = chr.fh;
			w += chr.adv;
		}
		if(w > this.mMaxWidth) this.mMaxWidth = w;
		var full_height = Std["int"](h * 1.2);
		var align_x = 0;
		var insert_x = 0;
		if(inInsert != null) {
			if(this.autoSize != jeash.text.TextFieldAutoSize.NONE) {
				this.mScrollH = 0;
				insert_x = inInsert;
			} else {
				insert_x = inInsert - this.mScrollH;
				if(insert_x < 0) this.mScrollH -= (this.mLimitRenderX * 3 >> 2) - insert_x; else if(insert_x > this.mLimitRenderX) this.mScrollH += insert_x - (this.mLimitRenderX * 3 >> 2);
				if(this.mScrollH < 0) this.mScrollH = 0;
			}
		}
		if(this.autoSize == jeash.text.TextFieldAutoSize.NONE && w <= this.mLimitRenderX) {
			if(inAlign == jeash.text.TextFormatAlign.CENTER) align_x = this.mLimitRenderX - w >> 1; else if(inAlign == jeash.text.TextFormatAlign.RIGHT) align_x = this.mLimitRenderX - w;
		}
		var x_list = new Array();
		this.mLineInfo.push({ mY0 : inY, mIndex : inCharIdx - 1, mX : x_list});
		var cache_sel_font = null;
		var cache_normal_font = null;
		var x = align_x - this.mScrollH;
		var x0 = x;
		var _g = 0;
		while(_g < inRow.length) {
			var chr = inRow[_g];
			++_g;
			var adv = chr.adv;
			if(x + adv > this.mLimitRenderX) break;
			x_list.push(x);
			if(x >= 0) {
				var font = chr.font;
				if(chr.sel) {
					this.jeashGraphics.lineStyle();
					this.jeashGraphics.beginFill(2105440);
					this.jeashGraphics.drawRect(x,inY,adv,full_height);
					this.jeashGraphics.endFill();
					if(cache_normal_font == chr.font) font = cache_sel_font; else {
						font = jeash.text.FontInstance.CreateSolid(chr.font.GetFace(),chr.fh,16777215,1.0);
						cache_sel_font = font;
						cache_normal_font = chr.font;
					}
				}
				font.RenderChar(this.jeashGraphics,chr.chr,x,Std["int"](inY + (h - chr.fh)));
			}
			x += adv;
		}
		x += this.mScrollH;
		if(inInsert != null) {
			this.mCaretGfx.lineStyle(1,this.mTextColour);
			this.mCaretGfx.moveTo(inInsert + align_x - this.mScrollH,inY);
			this.mCaretGfx.lineTo(inInsert + align_x - this.mScrollH,inY + full_height);
		}
		$s.pop();
		return full_height;
		$s.pop();
	}
	,Rebuild: function() {
		$s.push("jeash.text.TextField::Rebuild");
		var $spos = $s.length;
		this.mLineInfo = [];
		this.jeashGraphics.clear();
		this.mCaretGfx.clear();
		if(this.background) {
			this.jeashGraphics.beginFill(this.backgroundColor);
			this.jeashGraphics.drawRect(-2,-2,this.jeashGetWidth() + 4,this.jeashGetHeight() + 4);
			this.jeashGraphics.endFill();
		}
		this.jeashGraphics.lineStyle(this.mTextColour);
		var insert_x = null;
		this.mMaxWidth = 0;
		var wrap = this.mLimitRenderX = this.wordWrap && !this.jeashInputEnabled?Std["int"](this.jeashGetWidth()):999999;
		var char_idx = 0;
		var h = 0;
		var s0 = this.mSelStart;
		var s1 = this.mSelEnd;
		var _g = 0, _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var row = [];
			var row_width = 0;
			var last_word_break = 0;
			var last_word_break_width = 0;
			var last_word_char_idx = 0;
			var start_idx = char_idx;
			var tx = 0;
			var _g2 = 0, _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				var text = span.text;
				var font = span.font;
				var fh = font.jeashGetHeight();
				last_word_break = row.length;
				last_word_break_width = row_width;
				last_word_char_idx = char_idx;
				var _g5 = 0, _g4 = text.length;
				while(_g5 < _g4) {
					var ch = _g5++;
					if(char_idx == this.mInsertPos && this.jeashInputEnabled) insert_x = tx;
					var g = text.charCodeAt(ch);
					var adv = font.jeashGetAdvance(g);
					if(g == 32) {
						last_word_break = row.length;
						last_word_break_width = tx;
						last_word_char_idx = char_idx;
					}
					if(tx + adv > wrap) {
						if(last_word_break > 0) {
							var row_end = row.splice(last_word_break,row.length - last_word_break);
							h += this.RenderRow(row,h,start_idx,paragraph.align);
							row = row_end;
							tx -= last_word_break_width;
							start_idx = last_word_char_idx;
							last_word_break = 0;
							last_word_break_width = 0;
							last_word_char_idx = 0;
							if(row_end.length > 0 && row_end[0].chr == 32) {
								row_end.shift();
								start_idx++;
							}
						} else {
							h += this.RenderRow(row,h,char_idx,paragraph.align);
							row = [];
							tx = 0;
							start_idx = char_idx;
						}
					}
					row.push({ font : font, chr : g, x : tx, fh : fh, sel : char_idx >= s0 && char_idx < s1, adv : adv});
					tx += adv;
					char_idx++;
				}
			}
			if(row.length > 0) {
				h += this.RenderRow(row,h,start_idx,paragraph.align,insert_x);
				insert_x = null;
			}
		}
		var w = this.mMaxWidth;
		if(h < this.mTextHeight) h = this.mTextHeight;
		this.mMaxHeight = h;
		switch(this.autoSize) {
		case jeash.text.TextFieldAutoSize.LEFT:
			this.jeashSetWidth(w);
			this.jeashSetHeight(h);
			break;
		case jeash.text.TextFieldAutoSize.RIGHT:
			var x0 = this.jeashGetX() + this.jeashGetWidth();
			this.jeashSetWidth(w);
			this.jeashSetHeight(h);
			this.jeashSetX(x0 - w);
			break;
		case jeash.text.TextFieldAutoSize.CENTER:
			var x0 = this.jeashGetX() + this.jeashGetWidth() / 2;
			this.jeashSetWidth(w);
			this.jeashSetHeight(h);
			this.jeashSetX(x0 - w / 2);
			break;
		default:
			if(this.wordWrap) this.jeashSetHeight(h);
		}
		if(char_idx == 0 && this.jeashInputEnabled) {
			var x = 0;
			if(this.mAlign == jeash.text.TextFormatAlign.CENTER) x = Std["int"](this.jeashGetWidth() / 2); else if(this.mAlign == jeash.text.TextFormatAlign.RIGHT) x = Std["int"](this.jeashGetWidth()) - 1;
			this.mCaretGfx.lineStyle(1,this.mTextColour);
			this.mCaretGfx.moveTo(x,0);
			this.mCaretGfx.lineTo(x,this.mTextHeight);
		}
		if(this.border) {
			this.jeashGraphics.endFill();
			this.jeashGraphics.lineStyle(1,this.borderColor);
			this.jeashGraphics.drawRect(-2,-2,this.jeashGetWidth() + 4,this.jeashGetHeight() + 4);
		}
		this.mCaretGfx.jeashRender();
		jeash.Lib.jeashSetSurfaceTransform(this.mCaretGfx.jeashSurface,this.mFullMatrix.clone());
		$s.pop();
	}
	,GetBackgroundRect: function() {
		$s.push("jeash.text.TextField::GetBackgroundRect");
		var $spos = $s.length;
		if(this.border) {
			var $tmp = new jeash.geom.Rectangle(-2,-2,this.jeashGetWidth() + 4,this.jeashGetHeight() + 4);
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new jeash.geom.Rectangle(0,0,this.jeashGetWidth(),this.jeashGetHeight());
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,GetTextWidth: function() {
		$s.push("jeash.text.TextField::GetTextWidth");
		var $spos = $s.length;
		var $tmp = this.mMaxWidth;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetTextHeight: function() {
		$s.push("jeash.text.TextField::GetTextHeight");
		var $spos = $s.length;
		var $tmp = this.mMaxHeight;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetTextColour: function() {
		$s.push("jeash.text.TextField::GetTextColour");
		var $spos = $s.length;
		var $tmp = this.mTextColour;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetTextColour: function(inCol) {
		$s.push("jeash.text.TextField::SetTextColour");
		var $spos = $s.length;
		this.mTextColour = inCol;
		this.RebuildText();
		$s.pop();
		return inCol;
		$s.pop();
	}
	,GetText: function() {
		$s.push("jeash.text.TextField::GetText");
		var $spos = $s.length;
		if(this.mHTMLMode) this.ConvertHTMLToText(false);
		var $tmp = this.mText;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetText: function(inText) {
		$s.push("jeash.text.TextField::SetText");
		var $spos = $s.length;
		this.mText = inText;
		this.mHTMLText = inText;
		this.mHTMLMode = false;
		this.RebuildText();
		var $tmp = this.mText;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,ConvertHTMLToText: function(inUnSetHTML) {
		$s.push("jeash.text.TextField::ConvertHTMLToText");
		var $spos = $s.length;
		this.mText = "";
		var _g = 0, _g1 = this.mParagraphs;
		while(_g < _g1.length) {
			var paragraph = _g1[_g];
			++_g;
			var _g2 = 0, _g3 = paragraph.spans;
			while(_g2 < _g3.length) {
				var span = _g3[_g2];
				++_g2;
				this.mText += span.text;
			}
		}
		if(inUnSetHTML) {
			this.mHTMLMode = false;
			this.RebuildText();
		}
		$s.pop();
	}
	,SetAutoSize: function(inAutoSize) {
		$s.push("jeash.text.TextField::SetAutoSize");
		var $spos = $s.length;
		this.autoSize = inAutoSize;
		this.Rebuild();
		$s.pop();
		return inAutoSize;
		$s.pop();
	}
	,SetWordWrap: function(inWordWrap) {
		$s.push("jeash.text.TextField::SetWordWrap");
		var $spos = $s.length;
		this.wordWrap = inWordWrap;
		this.Rebuild();
		var $tmp = this.wordWrap;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetBorder: function(inBorder) {
		$s.push("jeash.text.TextField::SetBorder");
		var $spos = $s.length;
		this.border = inBorder;
		this.Rebuild();
		$s.pop();
		return inBorder;
		$s.pop();
	}
	,SetBorderColor: function(inBorderCol) {
		$s.push("jeash.text.TextField::SetBorderColor");
		var $spos = $s.length;
		this.borderColor = inBorderCol;
		this.Rebuild();
		$s.pop();
		return inBorderCol;
		$s.pop();
	}
	,SetBackgroundColor: function(inCol) {
		$s.push("jeash.text.TextField::SetBackgroundColor");
		var $spos = $s.length;
		this.backgroundColor = inCol;
		this.Rebuild();
		$s.pop();
		return inCol;
		$s.pop();
	}
	,SetBackground: function(inBack) {
		$s.push("jeash.text.TextField::SetBackground");
		var $spos = $s.length;
		this.background = inBack;
		this.Rebuild();
		$s.pop();
		return inBack;
		$s.pop();
	}
	,GetHTMLText: function() {
		$s.push("jeash.text.TextField::GetHTMLText");
		var $spos = $s.length;
		var $tmp = this.mHTMLText;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,DecodeColour: function(col) {
		$s.push("jeash.text.TextField::DecodeColour");
		var $spos = $s.length;
		var $tmp = Std.parseInt("0x" + col.substr(1));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,AddXML: function(x,a) {
		$s.push("jeash.text.TextField::AddXML");
		var $spos = $s.length;
		var type = x.nodeType;
		if(type == Xml.Document || type == Xml.Element) {
			if(type == Xml.Element) {
				a = { face : a.face, height : a.height, colour : a.colour, align : a.align};
				switch(x.getNodeName()) {
				case "p":
					var l = this.mParagraphs.length;
					var align = x.get("align");
					if(align != null) a.align = Type.createEnum(jeash.text.TextFormatAlign,align);
					if(l > 0 && this.mParagraphs[l - 1].spans.length > 0 && this.multiline) this.mParagraphs.push({ align : a.align, spans : []});
					break;
				case "font":
					var face = x.get("face");
					if(face != null) a.face = face;
					var height = x.get("size");
					if(height != null) a.height = Std["int"](Std.parseFloat(height));
					var col = x.get("color");
					if(col != null) a.colour = this.DecodeColour(col);
					break;
				case "br":
					var l = this.mParagraphs.length;
					if(l > 0 && this.mParagraphs[l - 1].spans.length > 0 && this.multiline) this.mParagraphs.push({ align : a.align, spans : []});
					break;
				}
			}
			var $it0 = x.iterator();
			while( $it0.hasNext() ) {
				var child = $it0.next();
				this.AddXML(child,a);
			}
		} else {
			var text = x.getNodeValue();
			var font = jeash.text.FontInstance.CreateSolid(a.face,a.height,a.colour,1.0);
			if(font != null && text != "") {
				var span = { text : text, font : font};
				var l = this.mParagraphs.length;
				if(this.mParagraphs.length < 1) this.mParagraphs.push({ align : a.align, spans : [span]}); else this.mParagraphs[l - 1].spans.push(span);
			}
		}
		$s.pop();
	}
	,RebuildText: function() {
		$s.push("jeash.text.TextField::RebuildText");
		var $spos = $s.length;
		this.mParagraphs = [];
		if(this.mHTMLMode) {
			var xml = Xml.parse(this.mHTMLText);
			var a = { face : this.mFace, height : this.mTextHeight, colour : this.mTextColour, align : this.mAlign};
			this.AddXML(xml,a);
		} else {
			var font = jeash.text.FontInstance.CreateSolid(this.mFace,this.mTextHeight,this.mTextColour,1.0);
			var paras = this.mText.split("\n");
			var _g = 0;
			while(_g < paras.length) {
				var paragraph = paras[_g];
				++_g;
				this.mParagraphs.push({ align : this.mAlign, spans : [{ font : font, text : paragraph + "\n"}]});
			}
		}
		this.Rebuild();
		$s.pop();
	}
	,SetHTMLText: function(inHTMLText) {
		$s.push("jeash.text.TextField::SetHTMLText");
		var $spos = $s.length;
		this.mParagraphs = new Array();
		this.mHTMLText = inHTMLText;
		this.mHTMLMode = true;
		this.RebuildText();
		if(this.jeashInputEnabled) this.ConvertHTMLToText(true);
		var $tmp = this.mHTMLText;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setSelection: function(beginIndex,endIndex) {
		$s.push("jeash.text.TextField::setSelection");
		var $spos = $s.length;
		$s.pop();
	}
	,jeashGetDefaultTextFormat: function() {
		$s.push("jeash.text.TextField::jeashGetDefaultTextFormat");
		var $spos = $s.length;
		var $tmp = this.defaultTextFormat;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetDefaultTextFormat: function(inFmt) {
		$s.push("jeash.text.TextField::jeashSetDefaultTextFormat");
		var $spos = $s.length;
		this.setTextFormat(inFmt);
		$s.pop();
		return inFmt;
		$s.pop();
	}
	,getTextFormat: function(beginIndex,endIndex) {
		$s.push("jeash.text.TextField::getTextFormat");
		var $spos = $s.length;
		var $tmp = new jeash.text.TextFormat();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setTextFormat: function(inFmt,beginIndex,endIndex) {
		$s.push("jeash.text.TextField::setTextFormat");
		var $spos = $s.length;
		if(inFmt.font != null) this.mFace = inFmt.font;
		if(inFmt.size != null) this.mTextHeight = Std["int"](inFmt.size);
		if(inFmt.align != null) this.mAlign = inFmt.align;
		if(inFmt.color != null) this.mTextColour = inFmt.color;
		this.RebuildText();
		var $tmp = this.getTextFormat();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashDoAdded: function(inObj) {
		$s.push("jeash.text.TextField::jeashDoAdded");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashDoAdded.call(this,inObj);
		if(inObj == this) {
			this.addEventListener(jeash.events.MouseEvent.MOUSE_DOWN,this.jeashOnMouseDown.$bind(this));
			this.addEventListener(jeash.events.MouseEvent.MOUSE_UP,this.jeashOnMouseUp.$bind(this));
			this.addEventListener(jeash.events.MouseEvent.MOUSE_MOVE,this.jeashOnMouseDrag.$bind(this));
			this.addEventListener(jeash.events.MouseEvent.MOUSE_OVER,this.jeashOnMouseOver.$bind(this));
			this.addEventListener(jeash.events.MouseEvent.MOUSE_OUT,this.jeashOnMouseOut.$bind(this));
			this.addEventListener(jeash.events.KeyboardEvent.KEY_DOWN,this.jeashOnKey.$bind(this));
			this.jeashCaretTimer.run = this.jeashCaretTimerCallback.$bind(this);
		}
		$s.pop();
	}
	,jeashDoRemoved: function(inObj) {
		$s.push("jeash.text.TextField::jeashDoRemoved");
		var $spos = $s.length;
		jeash.display.InteractiveObject.prototype.jeashDoRemoved.call(this,inObj);
		if(inObj == this) {
			this.removeEventListener(jeash.events.MouseEvent.MOUSE_DOWN,this.jeashOnMouseDown.$bind(this));
			this.removeEventListener(jeash.events.MouseEvent.MOUSE_UP,this.jeashOnMouseUp.$bind(this));
			this.removeEventListener(jeash.events.MouseEvent.MOUSE_MOVE,this.jeashOnMouseDrag.$bind(this));
			this.removeEventListener(jeash.events.KeyboardEvent.KEY_DOWN,this.jeashOnKey.$bind(this));
			this.removeEventListener(jeash.events.MouseEvent.MOUSE_OVER,this.jeashOnMouseOver.$bind(this));
			this.removeEventListener(jeash.events.MouseEvent.MOUSE_OUT,this.jeashOnMouseOut.$bind(this));
			jeash.Lib.jeashRemoveSurface(this.mCaretGfx.jeashSurface);
			this.jeashCaretTimer.stop();
		}
		$s.pop();
	}
	,jeashAddToStage: function() {
		$s.push("jeash.text.TextField::jeashAddToStage");
		var $spos = $s.length;
		jeash.Lib.jeashAppendSurface(this.jeashGraphics.jeashSurface);
		jeash.Lib.jeashAppendSurface(this.mCaretGfx.jeashSurface);
		jeash.Lib.jeashSetSurfaceVisible(this.mCaretGfx.jeashSurface,this.jeashCaretVisible);
		$s.pop();
	}
	,jeashGetObjectUnderPoint: function(point) {
		$s.push("jeash.text.TextField::jeashGetObjectUnderPoint");
		var $spos = $s.length;
		if(!this.jeashGetVisible()) {
			$s.pop();
			return null;
		} else if(this.mText.length > 1) {
			var local = this.globalToLocal(point);
			if(local.x < 0 || local.y < 0 || local.x > this.mMaxWidth || local.y > this.mMaxHeight) {
				$s.pop();
				return null;
			} else {
				var $tmp = this;
				$s.pop();
				return $tmp;
			}
		} else {
			var $tmp = jeash.display.InteractiveObject.prototype.jeashGetObjectUnderPoint.call(this,point);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,__class__: jeash.text.TextField
	,__properties__: $extend(jeash.display.InteractiveObject.prototype.__properties__,{set_type:"SetType",get_type:"GetType",set_wordWrap:"SetWordWrap",set_border:"SetBorder",get_caretPos:"GetCaret",set_backgroundColor:"SetBackgroundColor",set_background:"SetBackground",set_borderColor:"SetBorderColor",set_autoSize:"SetAutoSize",set_defaultTextFormat:"jeashSetDefaultTextFormat",get_defaultTextFormat:"jeashGetDefaultTextFormat",get_textHeight:"GetTextHeight",get_textWidth:"GetTextWidth",set_textColor:"SetTextColour",get_textColor:"GetTextColour",set_text:"SetText",get_text:"GetText",set_htmlText:"SetHTMLText",get_htmlText:"GetHTMLText"})
});
jeash.text.FontInstanceMode = $hxClasses["jeash.text.FontInstanceMode"] = { __ename__ : ["jeash","text","FontInstanceMode"], __constructs__ : ["fimSolid"] }
jeash.text.FontInstanceMode.fimSolid = ["fimSolid",0];
jeash.text.FontInstanceMode.fimSolid.toString = $estr;
jeash.text.FontInstanceMode.fimSolid.__enum__ = jeash.text.FontInstanceMode;
jeash.text.FontInstance = $hxClasses["jeash.text.FontInstance"] = function(inFont,inHeight) {
	$s.push("jeash.text.FontInstance::new");
	var $spos = $s.length;
	this.mFont = inFont;
	this.mHeight = inHeight;
	this.mTryFreeType = true;
	this.mGlyphs = [];
	this.mCacheAsBitmap = false;
	$s.pop();
}
jeash.text.FontInstance.__name__ = ["jeash","text","FontInstance"];
jeash.text.FontInstance.CreateSolid = function(inFace,inHeight,inColour,inAlpha) {
	$s.push("jeash.text.FontInstance::CreateSolid");
	var $spos = $s.length;
	var id = "SOLID:" + inFace + ":" + inHeight + ":" + inColour + ":" + inAlpha;
	var f = jeash.text.FontInstance.mSolidFonts.get(id);
	if(f != null) {
		$s.pop();
		return f;
	}
	var font = new jeash.text.Font();
	font.jeashSetScale(inHeight);
	font.jeashSetFontName(inFace);
	if(font == null) {
		$s.pop();
		return null;
	}
	f = new jeash.text.FontInstance(font,inHeight);
	f.SetSolid(inColour,inAlpha);
	jeash.text.FontInstance.mSolidFonts.set(id,f);
	$s.pop();
	return f;
	$s.pop();
}
jeash.text.FontInstance.prototype = {
	mMode: null
	,mColour: null
	,mAlpha: null
	,mFont: null
	,mHeight: null
	,mGlyphs: null
	,mCacheAsBitmap: null
	,mTryFreeType: null
	,height: null
	,toString: function() {
		$s.push("jeash.text.FontInstance::toString");
		var $spos = $s.length;
		var $tmp = "FontInstance:" + this.mFont + ":" + this.mColour + "(" + this.mGlyphs.length + ")";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,GetFace: function() {
		$s.push("jeash.text.FontInstance::GetFace");
		var $spos = $s.length;
		var $tmp = this.mFont.fontName;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetHeight: function() {
		$s.push("jeash.text.FontInstance::jeashGetHeight");
		var $spos = $s.length;
		var $tmp = this.mHeight;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,SetSolid: function(inCol,inAlpha) {
		$s.push("jeash.text.FontInstance::SetSolid");
		var $spos = $s.length;
		this.mColour = inCol;
		this.mAlpha = inAlpha;
		this.mMode = jeash.text.FontInstanceMode.fimSolid;
		$s.pop();
	}
	,RenderChar: function(inGraphics,inGlyph,inX,inY) {
		$s.push("jeash.text.FontInstance::RenderChar");
		var $spos = $s.length;
		inGraphics.jeashClearLine();
		inGraphics.beginFill(this.mColour,this.mAlpha);
		this.mFont.jeashRender(inGraphics,inGlyph,inX,inY,this.mTryFreeType);
		inGraphics.endFill();
		$s.pop();
	}
	,jeashGetAdvance: function(inChar) {
		$s.push("jeash.text.FontInstance::jeashGetAdvance");
		var $spos = $s.length;
		if(this.mFont == null) {
			$s.pop();
			return 0;
		}
		var $tmp = this.mFont.jeashGetAdvance(inChar,this.mHeight);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.text.FontInstance
	,__properties__: {get_height:"jeashGetHeight"}
}
if(!nme.net) nme.net = {}
nme.net.URLRequestMethod = $hxClasses["nme.net.URLRequestMethod"] = function() { }
nme.net.URLRequestMethod.__name__ = ["nme","net","URLRequestMethod"];
nme.net.URLRequestMethod.prototype = {
	__class__: nme.net.URLRequestMethod
}
jeash.display.ImageDataLease = $hxClasses["jeash.display.ImageDataLease"] = function() {
	$s.push("jeash.display.ImageDataLease::new");
	var $spos = $s.length;
	$s.pop();
}
jeash.display.ImageDataLease.__name__ = ["jeash","display","ImageDataLease"];
jeash.display.ImageDataLease.prototype = {
	seed: null
	,time: null
	,set: function(s,t) {
		$s.push("jeash.display.ImageDataLease::set");
		var $spos = $s.length;
		this.seed = s;
		this.time = t;
		$s.pop();
	}
	,clone: function() {
		$s.push("jeash.display.ImageDataLease::clone");
		var $spos = $s.length;
		var leaseClone = new jeash.display.ImageDataLease();
		leaseClone.seed = this.seed;
		leaseClone.time = this.time;
		$s.pop();
		return leaseClone;
		$s.pop();
	}
	,__class__: jeash.display.ImageDataLease
}
jeash.display.BitmapData = $hxClasses["jeash.display.BitmapData"] = function(inWidth,inHeight,inTransparent,inFillColor) {
	$s.push("jeash.display.BitmapData::new");
	var $spos = $s.length;
	if(inTransparent == null) inTransparent = true;
	this.jeashLocked = false;
	this.jeashLeaseNum = 0;
	this.jeashLease = new jeash.display.ImageDataLease();
	this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
	this.mTextureBuffer = js.Lib.document.createElement("canvas");
	this.mTextureBuffer.width = inWidth;
	this.mTextureBuffer.height = inHeight;
	this.jeashTransparent = inTransparent;
	this.rect = new jeash.geom.Rectangle(0,0,inWidth,inHeight);
	if(inFillColor != null) {
		if(!this.jeashTransparent) inFillColor |= -16777216;
		this.jeashInitColor = inFillColor;
		this.jeashFillRect(this.rect,inFillColor);
	}
	$s.pop();
}
jeash.display.BitmapData.__name__ = ["jeash","display","BitmapData"];
jeash.display.BitmapData.__interfaces__ = [jeash.display.IBitmapDrawable];
jeash.display.BitmapData.jeashCreateFromHandle = function(inHandle) {
	$s.push("jeash.display.BitmapData::jeashCreateFromHandle");
	var $spos = $s.length;
	var result = new jeash.display.BitmapData(0,0);
	result.mTextureBuffer = inHandle;
	$s.pop();
	return result;
	$s.pop();
}
jeash.display.BitmapData.prototype = {
	mTextureBuffer: null
	,jeashTransparent: null
	,width: null
	,height: null
	,rect: null
	,jeashImageData: null
	,jeashImageDataChanged: null
	,jeashCopyPixelList: null
	,jeashLocked: null
	,jeashLease: null
	,jeashLeaseNum: null
	,jeashAssignedBitmaps: null
	,jeashInitColor: null
	,applyFilter: function(sourceBitmapData,sourceRect,destPoint,filter) {
		$s.push("jeash.display.BitmapData::applyFilter");
		var $spos = $s.length;
		throw "BitmapData.applyFilter not implemented in Jeash";
		$s.pop();
	}
	,draw: function(source,matrix,colorTransform,blendMode,clipRect,smoothing) {
		$s.push("jeash.display.BitmapData::draw");
		var $spos = $s.length;
		if(smoothing == null) smoothing = false;
		this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
		source.drawToSurface(this.mTextureBuffer,matrix,colorTransform,blendMode,clipRect,smoothing);
		$s.pop();
	}
	,getColorBoundsRect: function(mask,color,findColor) {
		$s.push("jeash.display.BitmapData::getColorBoundsRect");
		var $spos = $s.length;
		if(findColor == null) findColor = true;
		var me = this;
		var doGetColorBoundsRect = function(data) {
			$s.push("jeash.display.BitmapData::getColorBoundsRect@137");
			var $spos = $s.length;
			var minX = me.mTextureBuffer != null?me.mTextureBuffer.width:0, maxX = 0, minY = me.mTextureBuffer != null?me.mTextureBuffer.height:0, maxY = 0, i = 0;
			while(i < data.length) {
				var value = me.getInt32(i,data);
				if(findColor) {
					if((value & mask) == color) {
						var x = Math.round(i % ((me.mTextureBuffer != null?me.mTextureBuffer.width:0) * 4) / 4);
						var y = Math.round(i / ((me.mTextureBuffer != null?me.mTextureBuffer.width:0) * 4));
						if(x < minX) minX = x;
						if(x > maxX) maxX = x;
						if(y < minY) minY = y;
						if(y > maxY) maxY = y;
					}
				} else if((value & mask) != color) {
					var x = Math.round(i % ((me.mTextureBuffer != null?me.mTextureBuffer.width:0) * 4) / 4);
					var y = Math.round(i / ((me.mTextureBuffer != null?me.mTextureBuffer.width:0) * 4));
					if(x < minX) minX = x;
					if(x > maxX) maxX = x;
					if(y < minY) minY = y;
					if(y > maxY) maxY = y;
				}
				i += 4;
			}
			if(minX < maxX && minY < maxY) {
				var $tmp = new jeash.geom.Rectangle(minX,minY,maxX - minX + 1,maxY - minY);
				$s.pop();
				return $tmp;
			} else {
				var $tmp = new jeash.geom.Rectangle(0,0,me.mTextureBuffer != null?me.mTextureBuffer.width:0,me.mTextureBuffer != null?me.mTextureBuffer.height:0);
				$s.pop();
				return $tmp;
			}
			$s.pop();
		};
		if(!this.jeashLocked) {
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0);
			var $tmp = doGetColorBoundsRect(imageData.data);
			$s.pop();
			return $tmp;
		} else {
			var $tmp = doGetColorBoundsRect(this.jeashImageData.data);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,dispose: function() {
		$s.push("jeash.display.BitmapData::dispose");
		var $spos = $s.length;
		$s.pop();
	}
	,compare: function(inBitmapTexture) {
		$s.push("jeash.display.BitmapData::compare");
		var $spos = $s.length;
		throw "Not implemented. compare";
		$s.pop();
		return 0;
		$s.pop();
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		$s.push("jeash.display.BitmapData::copyPixels");
		var $spos = $s.length;
		if(mergeAlpha == null) mergeAlpha = false;
		if(sourceBitmapData.mTextureBuffer == null || this.mTextureBuffer == null || sourceBitmapData.mTextureBuffer.width == 0 || sourceBitmapData.mTextureBuffer.height == 0 || sourceRect.width <= 0 || sourceRect.height <= 0) {
			$s.pop();
			return;
		}
		if(sourceRect.x + sourceRect.width > sourceBitmapData.mTextureBuffer.width) sourceRect.width = sourceBitmapData.mTextureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.mTextureBuffer.height) sourceRect.height = sourceBitmapData.mTextureBuffer.height - sourceRect.y;
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			ctx.drawImage(sourceBitmapData.mTextureBuffer,sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height,destPoint.x,destPoint.y,sourceRect.width,sourceRect.height);
		} else this.jeashCopyPixelList[this.jeashCopyPixelList.length] = { handle : sourceBitmapData.mTextureBuffer, sourceX : sourceRect.x, sourceY : sourceRect.y, sourceWidth : sourceRect.width, sourceHeight : sourceRect.height, destX : destPoint.x, destY : destPoint.y};
		$s.pop();
	}
	,clipRect: function(r) {
		$s.push("jeash.display.BitmapData::clipRect");
		var $spos = $s.length;
		if(r.x < 0) {
			r.width -= -r.x;
			r.x = 0;
			if(r.x + r.width <= 0) {
				$s.pop();
				return null;
			}
		}
		if(r.y < 0) {
			r.height -= -r.y;
			r.y = 0;
			if(r.y + r.height <= 0) {
				$s.pop();
				return null;
			}
		}
		if(r.x + r.width >= (this.mTextureBuffer != null?this.mTextureBuffer.width:0)) {
			r.width -= r.x + r.width - (this.mTextureBuffer != null?this.mTextureBuffer.width:0);
			if(r.width <= 0) {
				$s.pop();
				return null;
			}
		}
		if(r.y + r.height >= (this.mTextureBuffer != null?this.mTextureBuffer.height:0)) {
			r.height -= r.y + r.height - (this.mTextureBuffer != null?this.mTextureBuffer.height:0);
			if(r.height <= 0) {
				$s.pop();
				return null;
			}
		}
		$s.pop();
		return r;
		$s.pop();
	}
	,jeashClearCanvas: function() {
		$s.push("jeash.display.BitmapData::jeashClearCanvas");
		var $spos = $s.length;
		this.mTextureBuffer.width = this.mTextureBuffer.width;
		$s.pop();
	}
	,jeashFillRect: function(rect,color) {
		$s.push("jeash.display.BitmapData::jeashFillRect");
		var $spos = $s.length;
		this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
		var ctx = this.mTextureBuffer.getContext("2d");
		var r = (color & 16711680) >>> 16;
		var g = (color & 65280) >>> 8;
		var b = color & 255;
		var a = this.jeashTransparent?color >>> 24:255;
		if(!this.jeashLocked) {
			var style = "rgba(";
			style += r;
			style += ", ";
			style += g;
			style += ", ";
			style += b;
			style += ", ";
			style += a / 256;
			style += ")";
			ctx.fillStyle = style;
			ctx.fillRect(rect.x,rect.y,rect.width,rect.height);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.jeashImageData.width);
			var offsetY;
			var offsetX;
			var _g1 = 0, _g = Math.round(rect.height);
			while(_g1 < _g) {
				var i = _g1++;
				offsetY = i * this.jeashImageData.width;
				var _g3 = 0, _g2 = Math.round(rect.width);
				while(_g3 < _g2) {
					var j = _g3++;
					offsetX = 4 * (j + offsetY);
					this.jeashImageData.data[s + offsetX] = r;
					this.jeashImageData.data[s + offsetX + 1] = g;
					this.jeashImageData.data[s + offsetX + 2] = b;
					this.jeashImageData.data[s + offsetX + 3] = a;
				}
			}
			this.jeashImageDataChanged = true;
			ctx.putImageData(this.jeashImageData,0,0,rect.x,rect.y,rect.width,rect.height);
		}
		$s.pop();
	}
	,fillRect: function(rect,color) {
		$s.push("jeash.display.BitmapData::fillRect");
		var $spos = $s.length;
		if(rect == null) {
			$s.pop();
			return;
		}
		if(rect.width <= 0 || rect.height <= 0) {
			$s.pop();
			return;
		}
		if(rect.x == 0 && rect.y == 0 && rect.width == this.mTextureBuffer.width && rect.height == this.mTextureBuffer.height) {
			if(this.jeashTransparent) {
				if(color >>> 24 == 0 || color == this.jeashInitColor) {
					var $tmp = this.mTextureBuffer.width = this.mTextureBuffer.width;
					$s.pop();
					return $tmp;
				}
			} else if((color | -16777216) == (this.jeashInitColor | -16777216)) {
				var $tmp = this.mTextureBuffer.width = this.mTextureBuffer.width;
				$s.pop();
				return $tmp;
			}
		}
		var $tmp = this.jeashFillRect(rect,color);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getPixels: function(rect) {
		$s.push("jeash.display.BitmapData::getPixels");
		var $spos = $s.length;
		var byteArray = new jeash.utils.ByteArray();
		rect = this.clipRect(rect);
		if(rect == null) {
			$s.pop();
			return byteArray;
		}
		var len = Math.round(4 * rect.width * rect.height);
		if(!this.jeashLocked) {
			var ctx = this.mTextureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				byteArray.writeByte(imagedata.data[i]);
			}
		} else {
			var offset = Math.round(4 * this.jeashImageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				if(pos % (this.jeashImageData.width * 4) > boundR - 1) pos += this.jeashImageData.width * 4 - boundR;
				byteArray.writeByte(this.jeashImageData.data[pos]);
				pos++;
			}
		}
		byteArray.position = 0;
		$s.pop();
		return byteArray;
		$s.pop();
	}
	,getPixel: function(x,y) {
		$s.push("jeash.display.BitmapData::getPixel");
		var $spos = $s.length;
		if(x < 0 || y < 0 || x >= (this.mTextureBuffer != null?this.mTextureBuffer.width:0) || y >= (this.mTextureBuffer != null?this.mTextureBuffer.height:0)) {
			$s.pop();
			return 0;
		}
		if(!this.jeashLocked) {
			var ctx = this.mTextureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(x,y,1,1);
			var $tmp = imagedata.data[0] << 16 | imagedata.data[1] << 8 | imagedata.data[2];
			$s.pop();
			return $tmp;
		} else {
			var offset = 4 * y * (this.mTextureBuffer != null?this.mTextureBuffer.width:0) + x * 4;
			var $tmp = this.jeashImageData.data[offset] << 16 | this.jeashImageData.data[offset + 1] << 8 | this.jeashImageData.data[offset + 2];
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,getInt32: function(offset,data) {
		$s.push("jeash.display.BitmapData::getInt32");
		var $spos = $s.length;
		var b5, b6, b7, b8, pow = Math.pow;
		b5 = !this.jeashTransparent?255:data[offset + 3] & 255;
		b6 = data[offset] & 255;
		b7 = data[offset + 1] & 255;
		b8 = data[offset + 2] & 255;
		var $tmp = parseInt(((b5 >> 7) * pow(2,31)).toString(2),2) + parseInt(((b5 & 127) << 24 | b6 << 16 | b7 << 8 | b8).toString(2),2);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getPixel32: function(x,y) {
		$s.push("jeash.display.BitmapData::getPixel32");
		var $spos = $s.length;
		if(x < 0 || y < 0 || x >= (this.mTextureBuffer != null?this.mTextureBuffer.width:0) || y >= (this.mTextureBuffer != null?this.mTextureBuffer.height:0)) {
			$s.pop();
			return 0;
		}
		if(!this.jeashLocked) {
			var ctx = this.mTextureBuffer.getContext("2d");
			var $tmp = this.getInt32(0,ctx.getImageData(x,y,1,1).data);
			$s.pop();
			return $tmp;
		} else {
			var $tmp = this.getInt32(4 * y * this.mTextureBuffer.width + x * 4,this.jeashImageData.data);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,setPixel: function(x,y,color) {
		$s.push("jeash.display.BitmapData::setPixel");
		var $spos = $s.length;
		if(x < 0 || y < 0 || x >= (this.mTextureBuffer != null?this.mTextureBuffer.width:0) || y >= (this.mTextureBuffer != null?this.mTextureBuffer.height:0)) {
			$s.pop();
			return;
		}
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.jeashTransparent) imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.jeashImageData.width + x * 4;
			this.jeashImageData.data[offset] = (color & 16711680) >>> 16;
			this.jeashImageData.data[offset + 1] = (color & 65280) >>> 8;
			this.jeashImageData.data[offset + 2] = color & 255;
			if(this.jeashTransparent) this.jeashImageData.data[offset + 3] = 255;
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,setPixel32: function(x,y,color) {
		$s.push("jeash.display.BitmapData::setPixel32");
		var $spos = $s.length;
		if(x < 0 || y < 0 || x >= (this.mTextureBuffer != null?this.mTextureBuffer.width:0) || y >= (this.mTextureBuffer != null?this.mTextureBuffer.height:0)) {
			$s.pop();
			return;
		}
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.createImageData(1,1);
			imageData.data[0] = (color & 16711680) >>> 16;
			imageData.data[1] = (color & 65280) >>> 8;
			imageData.data[2] = color & 255;
			if(this.jeashTransparent) imageData.data[3] = (color & -16777216) >>> 24; else imageData.data[3] = 255;
			ctx.putImageData(imageData,x,y);
		} else {
			var offset = 4 * y * this.jeashImageData.width + x * 4;
			this.jeashImageData.data[offset] = (color & 16711680) >>> 16;
			this.jeashImageData.data[offset + 1] = (color & 65280) >>> 8;
			this.jeashImageData.data[offset + 2] = color & 255;
			if(this.jeashTransparent) this.jeashImageData.data[offset + 3] = (color & -16777216) >>> 24; else this.jeashImageData.data[offset + 3] = 255;
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,setPixels: function(rect,byteArray) {
		$s.push("jeash.display.BitmapData::setPixels");
		var $spos = $s.length;
		rect = this.clipRect(rect);
		if(rect == null) {
			$s.pop();
			return;
		}
		var len = Math.round(4 * rect.width * rect.height);
		if(!this.jeashLocked) {
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.createImageData(rect.width,rect.height);
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				imageData.data[i] = byteArray.readByte();
			}
			ctx.putImageData(imageData,rect.x,rect.y);
		} else {
			var offset = Math.round(4 * this.jeashImageData.width * rect.y + rect.x * 4);
			var pos = offset;
			var boundR = Math.round(4 * (rect.x + rect.width));
			var _g = 0;
			while(_g < len) {
				var i = _g++;
				if(pos % (this.jeashImageData.width * 4) > boundR - 1) pos += this.jeashImageData.width * 4 - boundR;
				this.jeashImageData.data[pos] = byteArray.readByte();
				pos++;
			}
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,clone: function() {
		$s.push("jeash.display.BitmapData::clone");
		var $spos = $s.length;
		var bitmapData = new jeash.display.BitmapData(this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0,this.jeashTransparent);
		var rect = new jeash.geom.Rectangle(0,0,this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0);
		bitmapData.setPixels(rect,this.getPixels(rect));
		bitmapData.jeashLease.set(bitmapData.jeashLeaseNum++,Date.now().getTime());
		$s.pop();
		return bitmapData;
		$s.pop();
	}
	,handle: function() {
		$s.push("jeash.display.BitmapData::handle");
		var $spos = $s.length;
		var $tmp = this.mTextureBuffer;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getWidth: function() {
		$s.push("jeash.display.BitmapData::getWidth");
		var $spos = $s.length;
		if(this.mTextureBuffer != null) {
			var $tmp = this.mTextureBuffer.width;
			$s.pop();
			return $tmp;
		} else {
			$s.pop();
			return 0;
		}
		$s.pop();
	}
	,getHeight: function() {
		$s.push("jeash.display.BitmapData::getHeight");
		var $spos = $s.length;
		if(this.mTextureBuffer != null) {
			var $tmp = this.mTextureBuffer.height;
			$s.pop();
			return $tmp;
		} else {
			$s.pop();
			return 0;
		}
		$s.pop();
	}
	,destroy: function() {
		$s.push("jeash.display.BitmapData::destroy");
		var $spos = $s.length;
		this.mTextureBuffer = null;
		$s.pop();
	}
	,jeashOnLoad: function(data,e) {
		$s.push("jeash.display.BitmapData::jeashOnLoad");
		var $spos = $s.length;
		var canvas = data.texture;
		var width = data.image.width;
		var height = data.image.height;
		canvas.width = width;
		canvas.height = height;
		var ctx = canvas.getContext("2d");
		ctx.drawImage(data.image,0,0,width,height);
		data.bitmapData.width = width;
		data.bitmapData.height = height;
		data.bitmapData.rect = new jeash.geom.Rectangle(0,0,width,height);
		data.bitmapData.jeashBuildLease();
		if(data.inLoader != null) {
			var e1 = new jeash.events.Event(jeash.events.Event.COMPLETE);
			e1.target = data.inLoader;
			data.inLoader.dispatchEvent(e1);
		}
		$s.pop();
	}
	,jeashLoadFromFile: function(inFilename,inLoader) {
		$s.push("jeash.display.BitmapData::jeashLoadFromFile");
		var $spos = $s.length;
		var me = this;
		var image = js.Lib.document.createElement("img");
		if(inLoader != null) {
			var data = { image : image, texture : this.mTextureBuffer, inLoader : inLoader, bitmapData : this};
			image.addEventListener("load",(function(f,a1) {
				$s.push("jeash.display.BitmapData::jeashLoadFromFile@492");
				var $spos = $s.length;
				var $tmp = function(a2) {
					$s.push("jeash.display.BitmapData::jeashLoadFromFile@492@492");
					var $spos = $s.length;
					var $tmp = f(a1,a2);
					$s.pop();
					return $tmp;
					$s.pop();
				};
				$s.pop();
				return $tmp;
				$s.pop();
			})(this.jeashOnLoad.$bind(this),data),false);
			image.addEventListener("error",function(e) {
				$s.push("jeash.display.BitmapData::jeashLoadFromFile@494");
				var $spos = $s.length;
				if(!image.complete) me.jeashOnLoad(data,e);
				$s.pop();
			},false);
		}
		image.src = inFilename;
		$s.pop();
	}
	,lock: function() {
		$s.push("jeash.display.BitmapData::lock");
		var $spos = $s.length;
		this.jeashLocked = true;
		var ctx = this.mTextureBuffer.getContext("2d");
		this.jeashImageData = ctx.getImageData(0,0,this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0);
		this.jeashImageDataChanged = false;
		this.jeashCopyPixelList = [];
		$s.pop();
	}
	,unlock: function(changeRect) {
		$s.push("jeash.display.BitmapData::unlock");
		var $spos = $s.length;
		this.jeashLocked = false;
		var ctx = this.mTextureBuffer.getContext("2d");
		if(this.jeashImageDataChanged) {
			if(changeRect != null) ctx.putImageData(this.jeashImageData,0,0,changeRect.x,changeRect.y,changeRect.width,changeRect.height); else ctx.putImageData(this.jeashImageData,0,0);
		}
		var _g = 0, _g1 = this.jeashCopyPixelList;
		while(_g < _g1.length) {
			var copyCache = _g1[_g];
			++_g;
			ctx.drawImage(copyCache.handle,copyCache.sourceX,copyCache.sourceY,copyCache.sourceWidth,copyCache.sourceHeight,copyCache.destX,copyCache.destY,copyCache.sourceWidth,copyCache.sourceHeight);
		}
		this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
		$s.pop();
	}
	,drawToSurface: function(inSurface,matrix,colorTransform,blendMode,clipRect,smothing) {
		$s.push("jeash.display.BitmapData::drawToSurface");
		var $spos = $s.length;
		var ctx = inSurface.getContext("2d");
		ctx.save();
		if(matrix != null) {
			ctx.save();
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) ctx.translate(matrix.tx,matrix.ty); else ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
			ctx.restore();
		}
		this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
		ctx.drawImage(this.mTextureBuffer,0,0);
		ctx.restore();
		$s.pop();
	}
	,colorTransform: function(rect,colorTransform) {
		$s.push("jeash.display.BitmapData::colorTransform");
		var $spos = $s.length;
		rect = this.clipRect(rect);
		if(rect == null) {
			$s.pop();
			return;
		}
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			var imagedata = ctx.getImageData(rect.x,rect.y,rect.width,rect.height);
			var offsetX;
			var _g1 = 0, _g = imagedata.data.length >> 2;
			while(_g1 < _g) {
				var i = _g1++;
				offsetX = i * 4;
				imagedata.data[offsetX] = Std["int"](imagedata.data[offsetX] * colorTransform.redMultiplier + colorTransform.redOffset);
				imagedata.data[offsetX + 1] = Std["int"](imagedata.data[offsetX + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset);
				imagedata.data[offsetX + 2] = Std["int"](imagedata.data[offsetX + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset);
				imagedata.data[offsetX + 3] = Std["int"](imagedata.data[offsetX + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset);
			}
			ctx.putImageData(imagedata,rect.x,rect.y);
		} else {
			var s = 4 * (Math.round(rect.x) + Math.round(rect.y) * this.jeashImageData.width);
			var offsetY;
			var offsetX;
			var _g1 = 0, _g = Math.round(rect.height);
			while(_g1 < _g) {
				var i = _g1++;
				offsetY = i * this.jeashImageData.width;
				var _g3 = 0, _g2 = Math.round(rect.width);
				while(_g3 < _g2) {
					var j = _g3++;
					offsetX = 4 * (j + offsetY);
					this.jeashImageData.data[s + offsetX] = Std["int"](this.jeashImageData.data[s + offsetX] * colorTransform.redMultiplier + colorTransform.redOffset);
					this.jeashImageData.data[s + offsetX + 1] = Std["int"](this.jeashImageData.data[s + offsetX + 1] * colorTransform.greenMultiplier + colorTransform.greenOffset);
					this.jeashImageData.data[s + offsetX + 2] = Std["int"](this.jeashImageData.data[s + offsetX + 2] * colorTransform.blueMultiplier + colorTransform.blueOffset);
					this.jeashImageData.data[s + offsetX + 3] = Std["int"](this.jeashImageData.data[s + offsetX + 3] * colorTransform.alphaMultiplier + colorTransform.alphaOffset);
				}
			}
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,copyChannel: function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel) {
		$s.push("jeash.display.BitmapData::copyChannel");
		var $spos = $s.length;
		this.rect = this.clipRect(this.rect);
		if(this.rect == null) {
			$s.pop();
			return;
		}
		if(sourceBitmapData.mTextureBuffer == null || this.mTextureBuffer == null || sourceRect.width <= 0 || sourceRect.height <= 0) {
			$s.pop();
			return;
		}
		if(sourceRect.x + sourceRect.width > sourceBitmapData.mTextureBuffer.width) sourceRect.width = sourceBitmapData.mTextureBuffer.width - sourceRect.x;
		if(sourceRect.y + sourceRect.height > sourceBitmapData.mTextureBuffer.height) sourceRect.height = sourceBitmapData.mTextureBuffer.height - sourceRect.y;
		var doChannelCopy = function(imageData) {
			$s.push("jeash.display.BitmapData::copyChannel@600");
			var $spos = $s.length;
			var srcCtx = sourceBitmapData.mTextureBuffer.getContext("2d");
			var srcImageData = srcCtx.getImageData(sourceRect.x,sourceRect.y,sourceRect.width,sourceRect.height);
			var destIdx = destChannel == 8?3:destChannel == 4?2:destChannel == 2?1:destChannel == 1?0:(function($this) {
				var $r;
				throw "Invalid destination BitmapDataChannel passed to BitmapData::copyChannel.";
				return $r;
			}(this));
			var pos = 4 * (Math.round(destPoint.x) + Math.round(destPoint.y) * imageData.width) + destIdx;
			var boundR = Math.round(4 * (destPoint.x + sourceRect.width));
			var setPos = function(val) {
				$s.push("jeash.display.BitmapData::copyChannel@600@612");
				var $spos = $s.length;
				if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
				imageData.data[pos] = val;
				pos += 4;
				$s.pop();
			};
			var srcIdx = sourceChannel == 8?3:sourceChannel == 4?2:sourceChannel == 2?1:sourceChannel == 1?0:(function($this) {
				var $r;
				throw "Invalid source BitmapDataChannel passed to BitmapData::copyChannel.";
				return $r;
			}(this));
			while(srcIdx < srcImageData.data.length) {
				setPos(srcImageData.data[srcIdx]);
				srcIdx += 4;
			}
			$s.pop();
		};
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0);
			doChannelCopy(imageData);
			ctx.putImageData(imageData,0,0);
		} else {
			doChannelCopy(this.jeashImageData);
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,hitTest: function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold) {
		$s.push("jeash.display.BitmapData::hitTest");
		var $spos = $s.length;
		if(secondAlphaThreshold == null) secondAlphaThreshold = 1;
		var type = Type.getClassName(Type.getClass(secondObject));
		firstAlphaThreshold = firstAlphaThreshold & -1;
		var me = this;
		var doHitTest = function(imageData) {
			$s.push("jeash.display.BitmapData::hitTest@649");
			var $spos = $s.length;
			if(secondObject.__proto__ == null || secondObject.__proto__.__class__ == null || secondObject.__proto__.__class__.__name__ == null) {
				$s.pop();
				return false;
			}
			switch(secondObject.__proto__.__class__.__name__[2]) {
			case "Rectangle":
				var rect = secondObject;
				rect.x -= firstPoint.x;
				rect.y -= firstPoint.y;
				rect = me.clipRect(me.rect);
				if(me.rect == null) {
					$s.pop();
					return false;
				}
				var boundingBox = new jeash.geom.Rectangle(0,0,me.mTextureBuffer != null?me.mTextureBuffer.width:0,me.mTextureBuffer != null?me.mTextureBuffer.height:0);
				if(!rect.intersects(boundingBox)) {
					$s.pop();
					return false;
				}
				var diff = rect.intersection(boundingBox);
				var offset = 4 * (Math.round(diff.x) + Math.round(diff.y) * imageData.width) + 3;
				var pos = offset;
				var boundR = Math.round(4 * (diff.x + diff.width));
				while(pos < offset + Math.round(4 * (diff.width + imageData.width * diff.height))) {
					if(pos % (imageData.width * 4) > boundR - 1) pos += imageData.width * 4 - boundR;
					if(imageData.data[pos] - firstAlphaThreshold >= 0) {
						$s.pop();
						return true;
					}
					pos += 4;
				}
				$s.pop();
				return false;
			case "Point":
				var point = secondObject;
				var x = point.x - firstPoint.x, y = point.y - firstPoint.y;
				if(x < 0 || y < 0 || x >= (me.mTextureBuffer != null?me.mTextureBuffer.width:0) || y >= (me.mTextureBuffer != null?me.mTextureBuffer.height:0)) {
					$s.pop();
					return false;
				}
				if(imageData.data[Math.round(4 * (y * (me.mTextureBuffer != null?me.mTextureBuffer.width:0) + x)) + 3] - firstAlphaThreshold > 0) {
					$s.pop();
					return true;
				}
				$s.pop();
				return false;
			case "Bitmap":
				throw "BitmapData::hitTest secondObject argument as BitmapData is not (yet) supported.";
				$s.pop();
				return false;
			case "BitmapData":
				throw "BitmapData::hitTest secondObject argument as BitmapData is not (yet) supported.";
				$s.pop();
				return false;
			default:
				throw "BitmapData::hitTest secondObject argument must be either a Rectangle, a Point, a Bitmap or a BitmapData object.";
				$s.pop();
				return false;
			}
			$s.pop();
		};
		if(!this.jeashLocked) {
			this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
			var ctx = this.mTextureBuffer.getContext("2d");
			var imageData = ctx.getImageData(0,0,this.mTextureBuffer != null?this.mTextureBuffer.width:0,this.mTextureBuffer != null?this.mTextureBuffer.height:0);
			var $tmp = doHitTest(imageData);
			$s.pop();
			return $tmp;
			ctx.putImageData(imageData,0,0);
		} else {
			var $tmp = doHitTest(this.jeashImageData);
			$s.pop();
			return $tmp;
			this.jeashImageDataChanged = true;
		}
		$s.pop();
	}
	,scroll: function(x,y) {
		$s.push("jeash.display.BitmapData::scroll");
		var $spos = $s.length;
		throw "Not implemented yet, patches welcome. BitmapData::scroll.";
		$s.pop();
	}
	,jeashGetLease: function() {
		$s.push("jeash.display.BitmapData::jeashGetLease");
		var $spos = $s.length;
		var $tmp = this.jeashLease;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetNumRefBitmaps: function() {
		$s.push("jeash.display.BitmapData::jeashGetNumRefBitmaps");
		var $spos = $s.length;
		var $tmp = this.jeashAssignedBitmaps;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashIncrNumRefBitmaps: function() {
		$s.push("jeash.display.BitmapData::jeashIncrNumRefBitmaps");
		var $spos = $s.length;
		this.jeashAssignedBitmaps++;
		$s.pop();
	}
	,jeashDecrNumRefBitmaps: function() {
		$s.push("jeash.display.BitmapData::jeashDecrNumRefBitmaps");
		var $spos = $s.length;
		this.jeashAssignedBitmaps--;
		$s.pop();
	}
	,jeashBuildLease: function() {
		$s.push("jeash.display.BitmapData::jeashBuildLease");
		var $spos = $s.length;
		this.jeashLease.set(this.jeashLeaseNum++,Date.now().getTime());
		$s.pop();
	}
	,__class__: jeash.display.BitmapData
	,__properties__: {get_height:"getHeight",get_width:"getWidth"}
}
de.polygonal.ds.Comparable = $hxClasses["de.polygonal.ds.Comparable"] = function() { }
de.polygonal.ds.Comparable.__name__ = ["de","polygonal","ds","Comparable"];
de.polygonal.ds.Comparable.prototype = {
	compare: null
	,__class__: de.polygonal.ds.Comparable
}
jeash.display.PixelSnapping = $hxClasses["jeash.display.PixelSnapping"] = { __ename__ : ["jeash","display","PixelSnapping"], __constructs__ : ["NEVER","AUTO","ALWAYS"] }
jeash.display.PixelSnapping.NEVER = ["NEVER",0];
jeash.display.PixelSnapping.NEVER.toString = $estr;
jeash.display.PixelSnapping.NEVER.__enum__ = jeash.display.PixelSnapping;
jeash.display.PixelSnapping.AUTO = ["AUTO",1];
jeash.display.PixelSnapping.AUTO.toString = $estr;
jeash.display.PixelSnapping.AUTO.__enum__ = jeash.display.PixelSnapping;
jeash.display.PixelSnapping.ALWAYS = ["ALWAYS",2];
jeash.display.PixelSnapping.ALWAYS.toString = $estr;
jeash.display.PixelSnapping.ALWAYS.__enum__ = jeash.display.PixelSnapping;
com.wighawag.game.engine.core.Renderer = $hxClasses["com.wighawag.game.engine.core.Renderer"] = function() { }
com.wighawag.game.engine.core.Renderer.__name__ = ["com","wighawag","game","engine","core","Renderer"];
com.wighawag.game.engine.core.Renderer.__interfaces__ = [com.wighawag.game.engine.core.Updatable];
com.wighawag.game.engine.core.Renderer.prototype = {
	__class__: com.wighawag.game.engine.core.Renderer
}
var NMEPreloader = $hxClasses["NMEPreloader"] = function() {
	$s.push("NMEPreloader::new");
	var $spos = $s.length;
	jeash.display.Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 9;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 3;
	this.outline = new jeash.display.Sprite();
	this.outline.jeashGetGraphics().lineStyle(1,color,0.15,true);
	this.outline.jeashGetGraphics().drawRoundRect(0,0,width,height,padding * 2,padding * 2);
	this.outline.jeashSetX(x);
	this.outline.jeashSetY(y);
	this.addChild(this.outline);
	this.progress = new jeash.display.Sprite();
	this.progress.jeashGetGraphics().beginFill(color,0.35);
	this.progress.jeashGetGraphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.jeashSetX(x + padding);
	this.progress.jeashSetY(y + padding);
	this.progress.jeashSetScaleX(0);
	this.addChild(this.progress);
	$s.pop();
}
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = jeash.display.Sprite;
NMEPreloader.prototype = $extend(jeash.display.Sprite.prototype,{
	outline: null
	,progress: null
	,getBackgroundColor: function() {
		$s.push("NMEPreloader::getBackgroundColor");
		var $spos = $s.length;
		$s.pop();
		return 16777215;
		$s.pop();
	}
	,getHeight: function() {
		$s.push("NMEPreloader::getHeight");
		var $spos = $s.length;
		$s.pop();
		return 480;
		$s.pop();
	}
	,getWidth: function() {
		$s.push("NMEPreloader::getWidth");
		var $spos = $s.length;
		$s.pop();
		return 640;
		$s.pop();
	}
	,onInit: function() {
		$s.push("NMEPreloader::onInit");
		var $spos = $s.length;
		$s.pop();
	}
	,onLoaded: function() {
		$s.push("NMEPreloader::onLoaded");
		var $spos = $s.length;
		this.dispatchEvent(new jeash.events.Event(jeash.events.Event.COMPLETE));
		$s.pop();
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		$s.push("NMEPreloader::onUpdate");
		var $spos = $s.length;
		var percentLoaded = bytesLoaded / bytesTotal;
		if(percentLoaded > 1) percentLoaded == 1;
		this.progress.jeashSetScaleX(percentLoaded);
		$s.pop();
	}
	,__class__: NMEPreloader
});
jeash.display.GraphicsPathCommand = $hxClasses["jeash.display.GraphicsPathCommand"] = function() { }
jeash.display.GraphicsPathCommand.__name__ = ["jeash","display","GraphicsPathCommand"];
jeash.display.GraphicsPathCommand.prototype = {
	__class__: jeash.display.GraphicsPathCommand
}
var Type = $hxClasses["Type"] = function() { }
Type.__name__ = ["Type"];
Type.getClass = function(o) {
	$s.push("Type::getClass");
	var $spos = $s.length;
	if(o == null) {
		$s.pop();
		return null;
	}
	if(o.__enum__ != null) {
		$s.pop();
		return null;
	}
	var $tmp = o.__class__;
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.getEnum = function(o) {
	$s.push("Type::getEnum");
	var $spos = $s.length;
	if(o == null) {
		$s.pop();
		return null;
	}
	var $tmp = o.__enum__;
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.getSuperClass = function(c) {
	$s.push("Type::getSuperClass");
	var $spos = $s.length;
	var $tmp = c.__super__;
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.getClassName = function(c) {
	$s.push("Type::getClassName");
	var $spos = $s.length;
	var a = c.__name__;
	var $tmp = a.join(".");
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.getEnumName = function(e) {
	$s.push("Type::getEnumName");
	var $spos = $s.length;
	var a = e.__ename__;
	var $tmp = a.join(".");
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.resolveClass = function(name) {
	$s.push("Type::resolveClass");
	var $spos = $s.length;
	var cl = $hxClasses[name];
	if(cl == null || cl.__name__ == null) {
		$s.pop();
		return null;
	}
	$s.pop();
	return cl;
	$s.pop();
}
Type.resolveEnum = function(name) {
	$s.push("Type::resolveEnum");
	var $spos = $s.length;
	var e = $hxClasses[name];
	if(e == null || e.__ename__ == null) {
		$s.pop();
		return null;
	}
	$s.pop();
	return e;
	$s.pop();
}
Type.createInstance = function(cl,args) {
	$s.push("Type::createInstance");
	var $spos = $s.length;
	if(args.length <= 3) {
		var $tmp = new cl(args[0],args[1],args[2]);
		$s.pop();
		return $tmp;
	}
	if(args.length > 8) throw "Too many arguments";
	var $tmp = new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.createEmptyInstance = function(cl) {
	$s.push("Type::createEmptyInstance");
	var $spos = $s.length;
	function empty() {}; empty.prototype = cl.prototype;
	var $tmp = new empty();
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.createEnum = function(e,constr,params) {
	$s.push("Type::createEnum");
	var $spos = $s.length;
	var f = Reflect.field(e,constr);
	if(f == null) throw "No such constructor " + constr;
	if(Reflect.isFunction(f)) {
		if(params == null) throw "Constructor " + constr + " need parameters";
		var $tmp = f.apply(e,params);
		$s.pop();
		return $tmp;
	}
	if(params != null && params.length != 0) throw "Constructor " + constr + " does not need parameters";
	$s.pop();
	return f;
	$s.pop();
}
Type.createEnumIndex = function(e,index,params) {
	$s.push("Type::createEnumIndex");
	var $spos = $s.length;
	var c = e.__constructs__[index];
	if(c == null) throw index + " is not a valid enum constructor index";
	var $tmp = Type.createEnum(e,c,params);
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.getInstanceFields = function(c) {
	$s.push("Type::getInstanceFields");
	var $spos = $s.length;
	var a = [];
	for(var i in c.prototype) a.push(i);
	a.remove("__class__");
	a.remove("__properties__");
	$s.pop();
	return a;
	$s.pop();
}
Type.getClassFields = function(c) {
	$s.push("Type::getClassFields");
	var $spos = $s.length;
	var a = Reflect.fields(c);
	a.remove("__name__");
	a.remove("__interfaces__");
	a.remove("__properties__");
	a.remove("__super__");
	a.remove("prototype");
	$s.pop();
	return a;
	$s.pop();
}
Type.getEnumConstructs = function(e) {
	$s.push("Type::getEnumConstructs");
	var $spos = $s.length;
	var a = e.__constructs__;
	var $tmp = a.copy();
	$s.pop();
	return $tmp;
	$s.pop();
}
Type["typeof"] = function(v) {
	$s.push("Type::typeof");
	var $spos = $s.length;
	switch(typeof(v)) {
	case "boolean":
		var $tmp = ValueType.TBool;
		$s.pop();
		return $tmp;
	case "string":
		var $tmp = ValueType.TClass(String);
		$s.pop();
		return $tmp;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			var $tmp = ValueType.TInt;
			$s.pop();
			return $tmp;
		}
		var $tmp = ValueType.TFloat;
		$s.pop();
		return $tmp;
	case "object":
		if(v == null) {
			var $tmp = ValueType.TNull;
			$s.pop();
			return $tmp;
		}
		var e = v.__enum__;
		if(e != null) {
			var $tmp = ValueType.TEnum(e);
			$s.pop();
			return $tmp;
		}
		var c = v.__class__;
		if(c != null) {
			var $tmp = ValueType.TClass(c);
			$s.pop();
			return $tmp;
		}
		var $tmp = ValueType.TObject;
		$s.pop();
		return $tmp;
	case "function":
		if(v.__name__ != null) {
			var $tmp = ValueType.TObject;
			$s.pop();
			return $tmp;
		}
		var $tmp = ValueType.TFunction;
		$s.pop();
		return $tmp;
	case "undefined":
		var $tmp = ValueType.TNull;
		$s.pop();
		return $tmp;
	default:
		var $tmp = ValueType.TUnknown;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
Type.enumEq = function(a,b) {
	$s.push("Type::enumEq");
	var $spos = $s.length;
	if(a == b) {
		$s.pop();
		return true;
	}
	try {
		if(a[0] != b[0]) {
			$s.pop();
			return false;
		}
		var _g1 = 2, _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!Type.enumEq(a[i],b[i])) {
				$s.pop();
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			$s.pop();
			return false;
		}
	} catch( e ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
		$s.pop();
		return false;
	}
	$s.pop();
	return true;
	$s.pop();
}
Type.enumConstructor = function(e) {
	$s.push("Type::enumConstructor");
	var $spos = $s.length;
	var $tmp = e[0];
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.enumParameters = function(e) {
	$s.push("Type::enumParameters");
	var $spos = $s.length;
	var $tmp = e.slice(2);
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.enumIndex = function(e) {
	$s.push("Type::enumIndex");
	var $spos = $s.length;
	var $tmp = e[1];
	$s.pop();
	return $tmp;
	$s.pop();
}
Type.allEnums = function(e) {
	$s.push("Type::allEnums");
	var $spos = $s.length;
	var all = [];
	var cst = e.__constructs__;
	var _g = 0;
	while(_g < cst.length) {
		var c = cst[_g];
		++_g;
		var v = Reflect.field(e,c);
		if(!Reflect.isFunction(v)) all.push(v);
	}
	$s.pop();
	return all;
	$s.pop();
}
Type.prototype = {
	__class__: Type
}
haxe.Unserializer = $hxClasses["haxe.Unserializer"] = function(buf) {
	$s.push("haxe.Unserializer::new");
	var $spos = $s.length;
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = new Array();
	this.cache = new Array();
	var r = haxe.Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe.Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
	$s.pop();
}
haxe.Unserializer.__name__ = ["haxe","Unserializer"];
haxe.Unserializer.initCodes = function() {
	$s.push("haxe.Unserializer::initCodes");
	var $spos = $s.length;
	var codes = new Array();
	var _g1 = 0, _g = haxe.Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe.Unserializer.BASE64.cca(i)] = i;
	}
	$s.pop();
	return codes;
	$s.pop();
}
haxe.Unserializer.run = function(v) {
	$s.push("haxe.Unserializer::run");
	var $spos = $s.length;
	var $tmp = new haxe.Unserializer(v).unserialize();
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,setResolver: function(r) {
		$s.push("haxe.Unserializer::setResolver");
		var $spos = $s.length;
		if(r == null) this.resolver = { resolveClass : function(_) {
			$s.push("haxe.Unserializer::setResolver@84");
			var $spos = $s.length;
			$s.pop();
			return null;
			$s.pop();
		}, resolveEnum : function(_) {
			$s.push("haxe.Unserializer::setResolver@85");
			var $spos = $s.length;
			$s.pop();
			return null;
			$s.pop();
		}}; else this.resolver = r;
		$s.pop();
	}
	,getResolver: function() {
		$s.push("haxe.Unserializer::getResolver");
		var $spos = $s.length;
		var $tmp = this.resolver;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,get: function(p) {
		$s.push("haxe.Unserializer::get");
		var $spos = $s.length;
		var $tmp = this.buf.cca(p);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,readDigits: function() {
		$s.push("haxe.Unserializer::readDigits");
		var $spos = $s.length;
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.cca(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		$s.pop();
		return k;
		$s.pop();
	}
	,unserializeObject: function(o) {
		$s.push("haxe.Unserializer::unserializeObject");
		var $spos = $s.length;
		while(true) {
			if(this.pos >= this.length) throw "Invalid object";
			if(this.buf.cca(this.pos) == 103) break;
			var k = this.unserialize();
			if(!Std["is"](k,String)) throw "Invalid object key";
			var v = this.unserialize();
			Reflect.setField(o,k,v);
		}
		this.pos++;
		$s.pop();
	}
	,unserializeEnum: function(edecl,tag) {
		$s.push("haxe.Unserializer::unserializeEnum");
		var $spos = $s.length;
		var constr = Reflect.field(edecl,tag);
		if(constr == null) throw "Unknown enum tag " + Type.getEnumName(edecl) + "." + tag;
		if(this.buf.cca(this.pos++) != 58) throw "Invalid enum format";
		var nargs = this.readDigits();
		if(nargs == 0) {
			this.cache.push(constr);
			$s.pop();
			return constr;
		}
		var args = new Array();
		while(nargs > 0) {
			args.push(this.unserialize());
			nargs -= 1;
		}
		var e = constr.apply(edecl,args);
		this.cache.push(e);
		$s.pop();
		return e;
		$s.pop();
	}
	,unserialize: function() {
		$s.push("haxe.Unserializer::unserialize");
		var $spos = $s.length;
		switch(this.buf.cca(this.pos++)) {
		case 110:
			$s.pop();
			return null;
		case 116:
			$s.pop();
			return true;
		case 102:
			$s.pop();
			return false;
		case 122:
			$s.pop();
			return 0;
		case 105:
			var $tmp = this.readDigits();
			$s.pop();
			return $tmp;
		case 100:
			var p1 = this.pos;
			while(true) {
				var c = this.buf.cca(this.pos);
				if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
			}
			var $tmp = Std.parseFloat(this.buf.substr(p1,this.pos - p1));
			$s.pop();
			return $tmp;
		case 121:
			var len = this.readDigits();
			if(this.buf.cca(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid string length";
			var s = this.buf.substr(this.pos,len);
			this.pos += len;
			s = StringTools.urlDecode(s);
			this.scache.push(s);
			$s.pop();
			return s;
		case 107:
			var $tmp = Math.NaN;
			$s.pop();
			return $tmp;
		case 109:
			var $tmp = Math.NEGATIVE_INFINITY;
			$s.pop();
			return $tmp;
		case 112:
			var $tmp = Math.POSITIVE_INFINITY;
			$s.pop();
			return $tmp;
		case 97:
			var buf = this.buf;
			var a = new Array();
			this.cache.push(a);
			while(true) {
				var c = this.buf.cca(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			$s.pop();
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			$s.pop();
			return o;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) throw "Invalid reference";
			var $tmp = this.cache[n];
			$s.pop();
			return $tmp;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) throw "Invalid string reference";
			var $tmp = this.scache[n];
			$s.pop();
			return $tmp;
		case 120:
			throw this.unserialize();
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw "Class not found " + name;
			var o = Type.createEmptyInstance(cl);
			this.cache.push(o);
			this.unserializeObject(o);
			$s.pop();
			return o;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) throw "Enum not found " + name;
			var $tmp = this.unserializeEnum(edecl,this.unserialize());
			$s.pop();
			return $tmp;
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) throw "Enum not found " + name;
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl)[index];
			if(tag == null) throw "Unknown enum index " + name + "@" + index;
			var $tmp = this.unserializeEnum(edecl,tag);
			$s.pop();
			return $tmp;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.cca(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			$s.pop();
			return l;
		case 98:
			var h = new Hash();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.cca(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			$s.pop();
			return h;
		case 113:
			var h = new IntHash();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.cca(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				h.set(i,this.unserialize());
				c = this.buf.cca(this.pos++);
			}
			if(c != 104) throw "Invalid IntHash format";
			$s.pop();
			return h;
		case 118:
			var d = Date.fromString(this.buf.substr(this.pos,19));
			this.cache.push(d);
			this.pos += 19;
			$s.pop();
			return d;
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.cca(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid bytes length";
			var codes = haxe.Unserializer.CODES;
			if(codes == null) {
				codes = haxe.Unserializer.initCodes();
				haxe.Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i + (len - rest);
			var bytes = haxe.io.Bytes.alloc(size);
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.cca(i++)];
				var c2 = codes[buf.cca(i++)];
				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf.cca(i++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf.cca(i++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c1 = codes[buf.cca(i++)];
				var c2 = codes[buf.cca(i++)];
				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
				if(rest == 3) {
					var c3 = codes[buf.cca(i++)];
					bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			$s.pop();
			return bytes;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw "Class not found " + name;
			var o = Type.createEmptyInstance(cl);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.cca(this.pos++) != 103) throw "Invalid custom data";
			$s.pop();
			return o;
		default:
		}
		this.pos--;
		throw "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos;
		$s.pop();
	}
	,__class__: haxe.Unserializer
}
jeash.events.TouchEvent = $hxClasses["jeash.events.TouchEvent"] = function(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta,commandKey,clickCount) {
	$s.push("jeash.events.TouchEvent::new");
	var $spos = $s.length;
	if(clickCount == null) clickCount = 0;
	if(commandKey == null) commandKey = false;
	if(delta == null) delta = 0;
	if(buttonDown == null) buttonDown = false;
	if(shiftKey == null) shiftKey = false;
	if(altKey == null) altKey = false;
	if(ctrlKey == null) ctrlKey = false;
	if(localY == null) localY = 0;
	if(localX == null) localX = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = true;
	jeash.events.Event.call(this,type,bubbles,cancelable);
	this.shiftKey = shiftKey;
	this.altKey = altKey;
	this.ctrlKey = ctrlKey;
	this.bubbles = bubbles;
	this.relatedObject = relatedObject;
	this.delta = delta;
	this.localX = localX;
	this.localY = localY;
	this.buttonDown = buttonDown;
	this.commandKey = commandKey;
	this.touchPointID = 0;
	this.isPrimaryTouchPoint = true;
	$s.pop();
}
jeash.events.TouchEvent.__name__ = ["jeash","events","TouchEvent"];
jeash.events.TouchEvent.jeashCreate = function(type,event,touch,local,target) {
	$s.push("jeash.events.TouchEvent::jeashCreate");
	var $spos = $s.length;
	var evt = new jeash.events.TouchEvent(type,true,false,local.x,local.y,null,event.ctrlKey,event.altKey,event.shiftKey,false,0,null,0);
	evt.stageX = jeash.Lib.jeashGetCurrent().GetStage().jeashGetMouseX();
	evt.stageY = jeash.Lib.jeashGetCurrent().GetStage().jeashGetMouseY();
	evt.target = target;
	$s.pop();
	return evt;
	$s.pop();
}
jeash.events.TouchEvent.__super__ = jeash.events.Event;
jeash.events.TouchEvent.prototype = $extend(jeash.events.Event.prototype,{
	altKey: null
	,buttonDown: null
	,ctrlKey: null
	,delta: null
	,localX: null
	,localY: null
	,relatedObject: null
	,shiftKey: null
	,stageX: null
	,stageY: null
	,commandKey: null
	,isPrimaryTouchPoint: null
	,touchPointID: null
	,jeashCreateSimilar: function(type,related,targ) {
		$s.push("jeash.events.TouchEvent::jeashCreateSimilar");
		var $spos = $s.length;
		var result = new jeash.events.TouchEvent(type,this.bubbles,this.cancelable,this.localX,this.localY,related == null?this.relatedObject:related,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta,this.commandKey);
		result.touchPointID = this.touchPointID;
		result.isPrimaryTouchPoint = this.isPrimaryTouchPoint;
		if(targ != null) result.target = targ;
		var $tmp = result;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.events.TouchEvent
});
jeash.media.SoundTransform = $hxClasses["jeash.media.SoundTransform"] = function(vol,panning) {
	$s.push("jeash.media.SoundTransform::new");
	var $spos = $s.length;
	$s.pop();
}
jeash.media.SoundTransform.__name__ = ["jeash","media","SoundTransform"];
jeash.media.SoundTransform.prototype = {
	leftToLeft: null
	,leftToRight: null
	,pan: null
	,rightToLeft: null
	,rightToRight: null
	,volume: null
	,__class__: jeash.media.SoundTransform
}
if(!com.wighawag.game.xjump.world) com.wighawag.game.xjump.world = {}
com.wighawag.game.xjump.world.Floor = $hxClasses["com.wighawag.game.xjump.world.Floor"] = function(area) {
	$s.push("com.wighawag.game.xjump.world.Floor::new");
	var $spos = $s.length;
	com.wighawag.game.xjump.world.Floor.count++;
	this.key = 9999 + com.wighawag.game.xjump.world.Floor.count;
	this.area = area;
	$s.pop();
}
com.wighawag.game.xjump.world.Floor.__name__ = ["com","wighawag","game","xjump","world","Floor"];
com.wighawag.game.xjump.world.Floor.__interfaces__ = [com.wighawag.game.engine.world.twodimensions.core.Entity2D];
com.wighawag.game.xjump.world.Floor.count = null;
com.wighawag.game.xjump.world.Floor.prototype = {
	state: null
	,stateLifeTime: null
	,type: null
	,key: null
	,update: function(milisecondStep) {
		$s.push("com.wighawag.game.xjump.world.Floor::update");
		var $spos = $s.length;
		$s.pop();
	}
	,area: null
	,rotation: null
	,moveTo: function(destination) {
		$s.push("com.wighawag.game.xjump.world.Floor::moveTo");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.world.Floor
}
de.polygonal.ds.ArrayedStack = $hxClasses["de.polygonal.ds.ArrayedStack"] = function(reservedSize,maxSize) {
	$s.push("de.polygonal.ds.ArrayedStack::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(reservedSize == null) reservedSize = 0;
	if(reservedSize > 0) {
		if(maxSize != -1) {
			if(true != reservedSize <= maxSize) throw new de.polygonal.ASE("reserved size is greater than allowed size",{ fileName : "ArrayedStack.hx", lineNumber : 94, className : "de.polygonal.ds.ArrayedStack", methodName : "new"}); else null;
		}
		this._a = de.polygonal.ds.ArrayUtil.alloc(reservedSize);
	} else this._a = new Array();
	this._top = 0;
	this._iterator = null;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	this.maxSize = maxSize == -1?2147483647:maxSize;
	this._t0 = 0;
	this._t1 = 0;
	$s.pop();
}
de.polygonal.ds.ArrayedStack.__name__ = ["de","polygonal","ds","ArrayedStack"];
de.polygonal.ds.ArrayedStack.__interfaces__ = [de.polygonal.ds.Stack];
de.polygonal.ds.ArrayedStack.prototype = {
	key: null
	,maxSize: null
	,reuseIterator: null
	,_a: null
	,_top: null
	,_iterator: null
	,_t0: null
	,_t1: null
	,pack: function() {
		$s.push("de.polygonal.ds.ArrayedStack::pack");
		var $spos = $s.length;
		if(this._a.length == this._top) {
			$s.pop();
			return;
		}
		var tmp = this._a;
		this._a = de.polygonal.ds.ArrayUtil.alloc(this._top);
		var _g1 = 0, _g = this._top;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = tmp[i];
		}
		var _g1 = this._top, _g = tmp.length;
		while(_g1 < _g) {
			var i = _g1++;
			tmp[i] = null;
		}
		$s.pop();
	}
	,reserve: function(x) {
		$s.push("de.polygonal.ds.ArrayedStack::reserve");
		var $spos = $s.length;
		if(this._top == x) {
			$s.pop();
			return;
		}
		var tmp = this._a;
		this._a = de.polygonal.ds.ArrayUtil.alloc(x);
		if(this._top < x) {
			var _g1 = 0, _g = this._top;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[i] = tmp[i];
			}
		}
		$s.pop();
	}
	,top: function() {
		$s.push("de.polygonal.ds.ArrayedStack::top");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 161, className : "de.polygonal.ds.ArrayedStack", methodName : "top"}); else null;
		var $tmp = this._a[this._top - 1];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,push: function(x) {
		$s.push("de.polygonal.ds.ArrayedStack::push");
		var $spos = $s.length;
		if(this.maxSize != -1) {
			if(true != this._top < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "ArrayedStack.hx", lineNumber : 176, className : "de.polygonal.ds.ArrayedStack", methodName : "push"}); else null;
		}
		++this._t1;
		this._a[this._top++] = x;
		$s.pop();
	}
	,pop: function() {
		$s.push("de.polygonal.ds.ArrayedStack::pop");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 192, className : "de.polygonal.ds.ArrayedStack", methodName : "pop"}); else null;
		this._t0 = ++this._t1;
		var $tmp = this._a[--this._top];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,dup: function() {
		$s.push("de.polygonal.ds.ArrayedStack::dup");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 211, className : "de.polygonal.ds.ArrayedStack", methodName : "dup"}); else null;
		if(this.maxSize != -1) {
			if(true != this._top < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "ArrayedStack.hx", lineNumber : 216, className : "de.polygonal.ds.ArrayedStack", methodName : "dup"}); else null;
		}
		this._a[this._top] = this._a[this._top - 1];
		this._top++;
		$s.pop();
	}
	,exchange: function() {
		$s.push("de.polygonal.ds.ArrayedStack::exchange");
		var $spos = $s.length;
		if(true != this._top > 1) throw new de.polygonal.ASE("size() < 2",{ fileName : "ArrayedStack.hx", lineNumber : 231, className : "de.polygonal.ds.ArrayedStack", methodName : "exchange"}); else null;
		var i = this._top - 1;
		var j = i - 1;
		var tmp = this._a[i];
		this._a[i] = this._a[j];
		this._a[j] = tmp;
		$s.pop();
	}
	,rotRight: function(n) {
		$s.push("de.polygonal.ds.ArrayedStack::rotRight");
		var $spos = $s.length;
		if(true != this._top >= n) throw new de.polygonal.ASE("size() < n",{ fileName : "ArrayedStack.hx", lineNumber : 256, className : "de.polygonal.ds.ArrayedStack", methodName : "rotRight"}); else null;
		var i = this._top - n;
		var k = this._top - 1;
		var tmp = this._a[i];
		while(i < k) {
			this._a[i] = this._a[i + 1];
			i++;
		}
		this._a[this._top - 1] = tmp;
		$s.pop();
	}
	,rotLeft: function(n) {
		$s.push("de.polygonal.ds.ArrayedStack::rotLeft");
		var $spos = $s.length;
		if(true != this._top >= n) throw new de.polygonal.ASE("size() < n",{ fileName : "ArrayedStack.hx", lineNumber : 285, className : "de.polygonal.ds.ArrayedStack", methodName : "rotLeft"}); else null;
		var i = this._top - 1;
		var k = this._top - n;
		var tmp = this._a[i];
		while(i > k) {
			this._a[i] = this._a[i - 1];
			i--;
		}
		this._a[this._top - n] = tmp;
		$s.pop();
	}
	,dispose: function() {
		$s.push("de.polygonal.ds.ArrayedStack::dispose");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 308, className : "de.polygonal.ds.ArrayedStack", methodName : "dispose"}); else null;
		if(true != (this._t0 == this._t1)) throw new de.polygonal.ASE("dispose() is only allowed directly after pop()",{ fileName : "ArrayedStack.hx", lineNumber : 309, className : "de.polygonal.ds.ArrayedStack", methodName : "dispose"}); else null;
		var NULL = null;
		this._a[this._top] = NULL;
		$s.pop();
	}
	,get: function(i) {
		$s.push("de.polygonal.ds.ArrayedStack::get");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 326, className : "de.polygonal.ds.ArrayedStack", methodName : "get"}); else null;
		if(true != (i >= 0 && i < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 327, className : "de.polygonal.ds.ArrayedStack", methodName : "get"}); else null;
		var $tmp = this._a[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(i,x) {
		$s.push("de.polygonal.ds.ArrayedStack::set");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 343, className : "de.polygonal.ds.ArrayedStack", methodName : "set"}); else null;
		if(true != (i >= 0 && i < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 344, className : "de.polygonal.ds.ArrayedStack", methodName : "set"}); else null;
		this._a[i] = x;
		$s.pop();
	}
	,swp: function(i,j) {
		$s.push("de.polygonal.ds.ArrayedStack::swp");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 362, className : "de.polygonal.ds.ArrayedStack", methodName : "swp"}); else null;
		if(true != (i >= 0 && i < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 363, className : "de.polygonal.ds.ArrayedStack", methodName : "swp"}); else null;
		if(true != (j >= 0 && j < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("j index out of range (%d)",[j]),{ fileName : "ArrayedStack.hx", lineNumber : 364, className : "de.polygonal.ds.ArrayedStack", methodName : "swp"}); else null;
		if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 365, className : "de.polygonal.ds.ArrayedStack", methodName : "swp"}); else null;
		var t = this._a[i];
		{
			if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 385, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
			if(true != (i >= 0 && i < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 386, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
			if(true != (j >= 0 && j < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("j index out of range (%d)",[j]),{ fileName : "ArrayedStack.hx", lineNumber : 387, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
			if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 388, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
			this._a[i] = this._a[j];
		}
		this._a[j] = t;
		$s.pop();
	}
	,cpy: function(i,j) {
		$s.push("de.polygonal.ds.ArrayedStack::cpy");
		var $spos = $s.length;
		if(true != this._top > 0) throw new de.polygonal.ASE("stack is empty",{ fileName : "ArrayedStack.hx", lineNumber : 385, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
		if(true != (i >= 0 && i < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 386, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
		if(true != (j >= 0 && j < this._top)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("j index out of range (%d)",[j]),{ fileName : "ArrayedStack.hx", lineNumber : 387, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
		if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "ArrayedStack.hx", lineNumber : 388, className : "de.polygonal.ds.ArrayedStack", methodName : "cpy"}); else null;
		this._a[i] = this._a[j];
		$s.pop();
	}
	,assign: function(C,args,n) {
		$s.push("de.polygonal.ds.ArrayedStack::assign");
		var $spos = $s.length;
		if(n == null) n = 0;
		if(true != n >= 0) throw new de.polygonal.ASE("n >= 0",{ fileName : "ArrayedStack.hx", lineNumber : 405, className : "de.polygonal.ds.ArrayedStack", methodName : "assign"}); else null;
		if(n > 0) {
			if(this.maxSize != -1) {
				if(true != n <= this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("n out of range (%d)",[n]),{ fileName : "ArrayedStack.hx", lineNumber : 412, className : "de.polygonal.ds.ArrayedStack", methodName : "assign"}); else null;
			}
		} else n = this._top;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this._a[i] = de.polygonal.core.util.Instance.create(C,args);
		}
		this._top = n;
		$s.pop();
	}
	,fill: function(x,n) {
		$s.push("de.polygonal.ds.ArrayedStack::fill");
		var $spos = $s.length;
		if(n == null) n = 0;
		if(true != n >= 0) throw new de.polygonal.ASE("n >= 0",{ fileName : "ArrayedStack.hx", lineNumber : 432, className : "de.polygonal.ds.ArrayedStack", methodName : "fill"}); else null;
		if(n > 0) {
			if(this.maxSize != -1) {
				if(true != n <= this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("n out of range (%d)",[n]),{ fileName : "ArrayedStack.hx", lineNumber : 439, className : "de.polygonal.ds.ArrayedStack", methodName : "fill"}); else null;
			}
		} else n = this._top;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this._a[i] = x;
		}
		this._top = n;
		$s.pop();
	}
	,walk: function(process) {
		$s.push("de.polygonal.ds.ArrayedStack::walk");
		var $spos = $s.length;
		var _g1 = 0, _g = this._top;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = process(this._a[i],i);
		}
		$s.pop();
	}
	,shuffle: function(rval) {
		$s.push("de.polygonal.ds.ArrayedStack::shuffle");
		var $spos = $s.length;
		var s = this._top;
		if(rval == null) {
			var m = Math;
			while(s > 1) {
				var i = Std["int"](m.random() * --s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		} else {
			if(true != rval._size >= this._top) throw new de.polygonal.ASE("insufficient random values",{ fileName : "ArrayedStack.hx", lineNumber : 486, className : "de.polygonal.ds.ArrayedStack", methodName : "shuffle"}); else null;
			var j = 0;
			while(s > 1) {
				var i = Std["int"](rval.get(j++) * --s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.ArrayedStack::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{ArrayedStack, size: %d}",[this._top]);
		if(this._top == 0) {
			$s.pop();
			return s;
		}
		s += "\n|< top\n";
		var i = this._top - 1;
		var j = this._top - 1;
		while(i >= 0) s += de.polygonal.core.fmt.Sprintf.format("  %4d -> %s\n",[j--,this._a[i--]]);
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.ArrayedStack::free");
		var $spos = $s.length;
		var NULL = null;
		var _g1 = 0, _g = this._a.length;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = NULL;
		}
		this._a = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(x) {
		$s.push("de.polygonal.ds.ArrayedStack::contains");
		var $spos = $s.length;
		var _g1 = 0, _g = this._top;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._a[i] == x) {
				$s.pop();
				return true;
			}
		}
		$s.pop();
		return false;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.ArrayedStack::remove");
		var $spos = $s.length;
		if(this._top == 0) {
			$s.pop();
			return false;
		}
		var NULL = null;
		var found = false;
		while(this._top > 0) {
			found = false;
			var _g1 = 0, _g = this._top;
			while(_g1 < _g) {
				var i = _g1++;
				if(this._a[i] == x) {
					var t = this._top - 1;
					var p = i;
					while(p < t) this._a[p++] = this._a[p];
					this._a[--this._top] = NULL;
					found = true;
					break;
				}
			}
			if(!found) break;
		}
		$s.pop();
		return found;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.ArrayedStack::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		if(purge) {
			var NULL = null;
			var _g1 = 0, _g = this._a.length;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[i] = null;
			}
		}
		this._top = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.ArrayedStack::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.ArrayedStackIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.ArrayedStackIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.ArrayedStack::isEmpty");
		var $spos = $s.length;
		var $tmp = this._top == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.ArrayedStack::size");
		var $spos = $s.length;
		var $tmp = this._top;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.ArrayedStack::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._top);
		var i = this._top, j = 0;
		while(i > 0) a[j++] = this._a[--i];
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.ArrayedStack::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._top);
		var i = this._top;
		while(i > 0) a.set(a._size,this._a[--i]);
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.ArrayedStack::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var copy = new de.polygonal.ds.ArrayedStack(this._top,this.maxSize);
		if(this._top == 0) {
			$s.pop();
			return copy;
		}
		var t = copy._a;
		if(assign) {
			var _g1 = 0, _g = this._top;
			while(_g1 < _g) {
				var i = _g1++;
				t[i] = this._a[i];
			}
		} else if(copier == null) {
			var c = null;
			var _g1 = 0, _g = this._top;
			while(_g1 < _g) {
				var i = _g1++;
				if(true != Std["is"](this._a[i],de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[this._a[i]]),{ fileName : "ArrayedStack.hx", lineNumber : 722, className : "de.polygonal.ds.ArrayedStack", methodName : "clone"}); else null;
				c = this._a[i];
				t[i] = c.clone();
			}
		} else {
			var _g1 = 0, _g = this._top;
			while(_g1 < _g) {
				var i = _g1++;
				t[i] = copier(this._a[i]);
			}
		}
		copy._top = this._top;
		$s.pop();
		return copy;
		$s.pop();
	}
	,__get: function(i) {
		$s.push("de.polygonal.ds.ArrayedStack::__get");
		var $spos = $s.length;
		var $tmp = this._a[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__set: function(i,x) {
		$s.push("de.polygonal.ds.ArrayedStack::__set");
		var $spos = $s.length;
		this._a[i] = x;
		$s.pop();
	}
	,__cpy: function(i,j) {
		$s.push("de.polygonal.ds.ArrayedStack::__cpy");
		var $spos = $s.length;
		this._a[i] = this._a[j];
		$s.pop();
	}
	,__class__: de.polygonal.ds.ArrayedStack
}
de.polygonal.ds.ArrayedStackIterator = $hxClasses["de.polygonal.ds.ArrayedStackIterator"] = function(f) {
	$s.push("de.polygonal.ds.ArrayedStackIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._a = this._f._a;
		this._i = this._f._top - 1;
		this;
	}
	$s.pop();
}
de.polygonal.ds.ArrayedStackIterator.__name__ = ["de","polygonal","ds","ArrayedStackIterator"];
de.polygonal.ds.ArrayedStackIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.ArrayedStackIterator.prototype = {
	_f: null
	,_a: null
	,_i: null
	,reset: function() {
		$s.push("de.polygonal.ds.ArrayedStackIterator::reset");
		var $spos = $s.length;
		this._a = this._f._a;
		this._i = this._f._top - 1;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.ArrayedStackIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i >= 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.ArrayedStackIterator::next");
		var $spos = $s.length;
		var $tmp = this._a[this._i--];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.ArrayedStackIterator::remove");
		var $spos = $s.length;
		if(true != (this._i != this._f._top - 1)) throw new de.polygonal.ASE("call next() before removing an element",{ fileName : "ArrayedStack.hx", lineNumber : 778, className : "de.polygonal.ds.ArrayedStackIterator", methodName : "remove"}); else null;
		var i = this._i + 1;
		var top = this._f._top - 1;
		if(i == top) this._f._top = top; else {
			while(i < top) this._a[i++] = this._a[i];
			this._f._top = top;
		}
		$s.pop();
	}
	,__a: function(f) {
		$s.push("de.polygonal.ds.ArrayedStackIterator::__a");
		var $spos = $s.length;
		var $tmp = f._a;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__getTop: function(f) {
		$s.push("de.polygonal.ds.ArrayedStackIterator::__getTop");
		var $spos = $s.length;
		var $tmp = f._top;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setTop: function(f,x) {
		$s.push("de.polygonal.ds.ArrayedStackIterator::__setTop");
		var $spos = $s.length;
		var $tmp = f._top = x;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.ArrayedStackIterator
}
jeash.display.Loader = $hxClasses["jeash.display.Loader"] = function() {
	$s.push("jeash.display.Loader::new");
	var $spos = $s.length;
	jeash.display.DisplayObjectContainer.call(this);
	this.contentLoaderInfo = jeash.display.LoaderInfo.create(this);
	this.name = "Loader " + jeash.display.DisplayObject.mNameID++;
	$s.pop();
}
jeash.display.Loader.__name__ = ["jeash","display","Loader"];
jeash.display.Loader.__super__ = jeash.display.DisplayObjectContainer;
jeash.display.Loader.prototype = $extend(jeash.display.DisplayObjectContainer.prototype,{
	content: null
	,contentLoaderInfo: null
	,mImage: null
	,mShape: null
	,load: function(request,context) {
		$s.push("jeash.display.Loader::load");
		var $spos = $s.length;
		var parts = request.url.split(".");
		var extension = parts.length == 0?"":parts[parts.length - 1].toLowerCase();
		var transparent = true;
		this.contentLoaderInfo.url = request.url;
		this.contentLoaderInfo.contentType = (function($this) {
			var $r;
			switch(extension) {
			case "swf":
				$r = "application/x-shockwave-flash";
				break;
			case "jpg":case "jpeg":
				$r = (function($this) {
					var $r;
					transparent = false;
					$r = "image/jpeg";
					return $r;
				}($this));
				break;
			case "png":
				$r = "image/png";
				break;
			case "gif":
				$r = "image/gif";
				break;
			default:
				$r = (function($this) {
					var $r;
					throw "Unrecognized file " + request.url;
					return $r;
				}($this));
			}
			return $r;
		}(this));
		this.mImage = new jeash.display.BitmapData(0,0,transparent);
		try {
			this.contentLoaderInfo.addEventListener(jeash.events.Event.COMPLETE,this.handleLoad.$bind(this),false,2147483647);
			this.mImage.jeashLoadFromFile(request.url,this.contentLoaderInfo);
			this.content = new jeash.display.Bitmap(this.mImage);
			Reflect.setField(this.contentLoaderInfo,"content",this.content);
			this.addChild(this.content);
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			haxe.Log.trace("Error " + e,{ fileName : "Loader.hx", lineNumber : 90, className : "jeash.display.Loader", methodName : "load"});
			var evt = new jeash.events.IOErrorEvent(jeash.events.IOErrorEvent.IO_ERROR);
			this.contentLoaderInfo.dispatchEvent(evt);
			$s.pop();
			return;
		}
		if(this.mShape == null) {
			this.mShape = new jeash.display.Shape();
			this.addChild(this.mShape);
		}
		$s.pop();
	}
	,handleLoad: function(e) {
		$s.push("jeash.display.Loader::handleLoad");
		var $spos = $s.length;
		this.contentLoaderInfo.removeEventListener(jeash.events.Event.COMPLETE,this.handleLoad.$bind(this));
		this.jeashInvalidateBounds();
		$s.pop();
	}
	,BuildBounds: function() {
		$s.push("jeash.display.Loader::BuildBounds");
		var $spos = $s.length;
		jeash.display.DisplayObjectContainer.prototype.BuildBounds.call(this);
		if(this.mImage != null) {
			var r = new jeash.geom.Rectangle(0,0,this.mImage.getWidth(),this.mImage.getHeight());
			if(r.width != 0 || r.height != 0) {
				if(this.mBoundsRect.width == 0 && this.mBoundsRect.height == 0) this.mBoundsRect = r.clone(); else this.mBoundsRect.extendBounds(r);
			}
		}
		$s.pop();
	}
	,jeashIsOnStage: function() {
		$s.push("jeash.display.Loader::jeashIsOnStage");
		var $spos = $s.length;
		$s.pop();
		return true;
		$s.pop();
	}
	,__class__: jeash.display.Loader
});
com.wighawag.remote.service.Score = $hxClasses["remote.service.Score"] = function(value,time,proof,seed,version) {
	$s.push("remote.service.Score::new");
	var $spos = $s.length;
	this.value = value;
	this.time = time;
	this.proof = proof;
	this.seed = seed;
	this.version = version;
	$s.pop();
}
com.wighawag.remote.service.Score.__name__ = ["com","wighawag","remote","service","Score"];
com.wighawag.remote.service.Score.prototype = {
	value: null
	,time: null
	,proof: null
	,seed: null
	,version: null
	,__class__: com.wighawag.remote.service.Score
}
de.polygonal.ui.UIEvent = $hxClasses["de.polygonal.ui.UIEvent"] = function() { }
de.polygonal.ui.UIEvent.__name__ = ["de","polygonal","ui","UIEvent"];
de.polygonal.ui.UIEvent.getName = function(x) {
	$s.push("de.polygonal.ui.UIEvent::getName");
	var $spos = $s.length;
	var output = new Array();
	var mask = 1;
	if((x & mask) > 0) output.push("KEY_DOWN");
	var mask1 = 2;
	if((x & mask1) > 0) output.push("KEY_UP");
	var mask2 = 4;
	if((x & mask2) > 0) output.push("KEY_REPEAT");
	var mask3 = 8;
	if((x & mask3) > 0) output.push("MOUSE_DOWN");
	var mask4 = 16;
	if((x & mask4) > 0) output.push("MOUSE_UP");
	var mask5 = 32;
	if((x & mask5) > 0) output.push("MOUSE_WHEEL");
	var mask6 = 64;
	if((x & mask6) > 0) output.push("MOUSE_MOVE");
	var mask7 = 128;
	if((x & mask7) > 0) output.push("SHORTCUT");
	var mask8 = 256;
	if((x & mask8) > 0) output.push("SEQUENCE");
	$s.pop();
	return output;
	$s.pop();
}
de.polygonal.ui.UIEvent.group = function(x) {
	$s.push("de.polygonal.ui.UIEvent::group");
	var $spos = $s.length;
	var $tmp = x >>> 27;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ui.UIEvent.has = function(x) {
	$s.push("de.polygonal.ui.UIEvent::has");
	var $spos = $s.length;
	var $tmp = 1 == x >>> 27;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ui.UIEvent.prototype = {
	__class__: de.polygonal.ui.UIEvent
}
jeash.display.BitmapDataChannel = $hxClasses["jeash.display.BitmapDataChannel"] = function() { }
jeash.display.BitmapDataChannel.__name__ = ["jeash","display","BitmapDataChannel"];
jeash.display.BitmapDataChannel.prototype = {
	__class__: jeash.display.BitmapDataChannel
}
js.Lib = $hxClasses["js.Lib"] = function() { }
js.Lib.__name__ = ["js","Lib"];
js.Lib.isIE = null;
js.Lib.isOpera = null;
js.Lib.document = null;
js.Lib.window = null;
js.Lib.alert = function(v) {
	$s.push("js.Lib::alert");
	var $spos = $s.length;
	alert(js.Boot.__string_rec(v,""));
	$s.pop();
}
js.Lib.eval = function(code) {
	$s.push("js.Lib::eval");
	var $spos = $s.length;
	var $tmp = eval(code);
	$s.pop();
	return $tmp;
	$s.pop();
}
js.Lib.setErrorHandler = function(f) {
	$s.push("js.Lib::setErrorHandler");
	var $spos = $s.length;
	js.Lib.onerror = f;
	$s.pop();
}
js.Lib.prototype = {
	__class__: js.Lib
}
if(!de.polygonal.core.time) de.polygonal.core.time = {}
de.polygonal.core.time.Timebase = $hxClasses["de.polygonal.core.time.Timebase"] = function() {
	$s.push("de.polygonal.core.time.Timebase::new");
	var $spos = $s.length;
	de.polygonal.core.event.Observable.call(this,100);
	this._timer = new haxe.Timer(33);
	this._timer.run = this._step.$bind(this);
	this.useFixedTimeStep = true;
	this._tickRate = 1 / 60;
	this._accumulatorLimit = 10 * this._tickRate;
	this._accumulator = 0;
	this._nTicks = 0;
	this._nFrames = 0;
	this._timeScale = 1;
	this._realTime = 0;
	this._gameTime = 0;
	this._gameTimeDelta = 0;
	this._realTimeDelta = 0;
	this._past = haxe.Timer.stamp();
	$s.pop();
}
de.polygonal.core.time.Timebase.__name__ = ["de","polygonal","core","time","Timebase"];
de.polygonal.core.time.Timebase.__properties__ = {get_get:"_getGetter"}
de.polygonal.core.time.Timebase._instance = null;
de.polygonal.core.time.Timebase.instance = function() {
	$s.push("de.polygonal.core.time.Timebase::instance");
	var $spos = $s.length;
	if(de.polygonal.core.time.Timebase._instance == null) de.polygonal.core.time.Timebase._instance = new de.polygonal.core.time.Timebase();
	var $tmp = de.polygonal.core.time.Timebase._instance;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.Timebase.get = null;
de.polygonal.core.time.Timebase._getGetter = function() {
	$s.push("de.polygonal.core.time.Timebase::_getGetter");
	var $spos = $s.length;
	var $tmp = de.polygonal.core.time.Timebase.instance();
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.Timebase.sAttach = function(o,mask) {
	$s.push("de.polygonal.core.time.Timebase::sAttach");
	var $spos = $s.length;
	if(mask == null) mask = 0;
	de.polygonal.core.time.Timebase.instance().attach(o,mask);
	$s.pop();
}
de.polygonal.core.time.Timebase.sDetach = function(o,mask) {
	$s.push("de.polygonal.core.time.Timebase::sDetach");
	var $spos = $s.length;
	if(mask == null) mask = 0;
	de.polygonal.core.time.Timebase.instance().detach(o,mask);
	$s.pop();
}
de.polygonal.core.time.Timebase.secondsToTicks = function(x) {
	$s.push("de.polygonal.core.time.Timebase::secondsToTicks");
	var $spos = $s.length;
	var $tmp = de.polygonal.core.math.Mathematics.round(x / de.polygonal.core.time.Timebase.instance()._tickRate);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.Timebase.ticksToSeconds = function(x) {
	$s.push("de.polygonal.core.time.Timebase::ticksToSeconds");
	var $spos = $s.length;
	var $tmp = x * de.polygonal.core.time.Timebase.instance()._tickRate;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.Timebase.__super__ = de.polygonal.core.event.Observable;
de.polygonal.core.time.Timebase.prototype = $extend(de.polygonal.core.event.Observable.prototype,{
	_tickRate: null
	,_nTicks: null
	,_nFrames: null
	,_timeScale: null
	,_realTime: null
	,_gameTime: null
	,_gameTimeDelta: null
	,_realTimeDelta: null
	,_past: null
	,_accumulator: null
	,_accumulatorLimit: null
	,_freezeDelay: null
	,_halted: null
	,_timer: null
	,free: function() {
		$s.push("de.polygonal.core.time.Timebase::free");
		var $spos = $s.length;
		if(de.polygonal.core.time.Timebase._instance == null) {
			$s.pop();
			return;
		}
		de.polygonal.core.time.Timebase._instance = null;
		de.polygonal.core.event.Observable.prototype.free.call(this);
		this._timer.stop();
		this._timer.run = null;
		this._timer = null;
		$s.pop();
	}
	,useFixedTimeStep: null
	,getTickRate: function() {
		$s.push("de.polygonal.core.time.Timebase::getTickRate");
		var $spos = $s.length;
		var $tmp = this._tickRate;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setTickRate: function(ticksPerSecond,max) {
		$s.push("de.polygonal.core.time.Timebase::setTickRate");
		var $spos = $s.length;
		if(max == null) max = -1.;
		this._tickRate = 1 / ticksPerSecond;
		this._accumulator = 0.;
		this._accumulatorLimit = max == -1.?10:max * this._tickRate;
		$s.pop();
	}
	,getRealTime: function() {
		$s.push("de.polygonal.core.time.Timebase::getRealTime");
		var $spos = $s.length;
		var $tmp = this._realTime;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getGameTime: function() {
		$s.push("de.polygonal.core.time.Timebase::getGameTime");
		var $spos = $s.length;
		var $tmp = this._gameTime;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getRealTimeDelta: function() {
		$s.push("de.polygonal.core.time.Timebase::getRealTimeDelta");
		var $spos = $s.length;
		var $tmp = this._realTimeDelta;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getGameTimeDelta: function() {
		$s.push("de.polygonal.core.time.Timebase::getGameTimeDelta");
		var $spos = $s.length;
		var $tmp = this._gameTimeDelta;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getScale: function() {
		$s.push("de.polygonal.core.time.Timebase::getScale");
		var $spos = $s.length;
		var $tmp = this._timeScale;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,setScale: function(x) {
		$s.push("de.polygonal.core.time.Timebase::setScale");
		var $spos = $s.length;
		if(true != x >= 0) throw new de.polygonal.ASE("x >= 0",{ fileName : "Timebase.hx", lineNumber : 223, className : "de.polygonal.core.time.Timebase", methodName : "setScale"}); else null;
		this._timeScale = x;
		$s.pop();
	}
	,getProcessedTicks: function() {
		$s.push("de.polygonal.core.time.Timebase::getProcessedTicks");
		var $spos = $s.length;
		var $tmp = this._nTicks;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getProcessedFrames: function() {
		$s.push("de.polygonal.core.time.Timebase::getProcessedFrames");
		var $spos = $s.length;
		var $tmp = this._nFrames;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,halt: function() {
		$s.push("de.polygonal.core.time.Timebase::halt");
		var $spos = $s.length;
		if(!this._halted) {
			this._halted = true;
			this.notify(4);
		}
		$s.pop();
	}
	,resume: function() {
		$s.push("de.polygonal.core.time.Timebase::resume");
		var $spos = $s.length;
		if(this._halted) {
			this._halted = false;
			this._accumulator = 0.;
			this._past = haxe.Timer.stamp();
			this.notify(16);
		}
		$s.pop();
	}
	,freeze: function(x) {
		$s.push("de.polygonal.core.time.Timebase::freeze");
		var $spos = $s.length;
		this._freezeDelay = x;
		this._accumulator = 0;
		this.notify(32);
		$s.pop();
	}
	,manualStep: function() {
		$s.push("de.polygonal.core.time.Timebase::manualStep");
		var $spos = $s.length;
		if(this._halted) {
			this._realTimeDelta = this._tickRate;
			this._realTime += this._realTimeDelta;
			this._gameTimeDelta = this._tickRate * this._timeScale;
			this._gameTime += this._gameTimeDelta;
			this.notify(1,this._tickRate);
			this._nTicks++;
			this.notify(2,1);
			this._nFrames++;
		}
		$s.pop();
	}
	,_step: function() {
		$s.push("de.polygonal.core.time.Timebase::_step");
		var $spos = $s.length;
		if(this._halted) {
			$s.pop();
			return;
		}
		var now = haxe.Timer.stamp();
		var dt = now - this._past;
		this._past = now;
		this._realTimeDelta = dt;
		this._realTime += this._realTimeDelta;
		if(this._freezeDelay > 0.) {
			this._freezeDelay -= this._realTimeDelta;
			this.notify(1,0.);
			this.notify(2,1.);
			if(this._freezeDelay <= 0.) this.notify(64);
			$s.pop();
			return;
		}
		if(this.useFixedTimeStep) {
			this._accumulator += this._realTimeDelta * this._timeScale;
			if(this._accumulator >= this._accumulatorLimit) {
				this.notify(8,this._accumulator);
				this._accumulator = this._accumulatorLimit;
			}
			this._gameTimeDelta = this._tickRate * this._timeScale;
			while(this._accumulator >= this._tickRate) {
				this._accumulator -= this._tickRate;
				this._gameTime += this._gameTimeDelta;
				this.notify(1,this._tickRate);
				this._nTicks++;
			}
			var alpha = this._accumulator / this._tickRate;
			this.notify(2,alpha);
			this._nFrames++;
		} else {
			this._accumulator = 0;
			this._gameTimeDelta = dt * this._timeScale;
			this._gameTime += this._gameTimeDelta;
			this.notify(1,this._gameTimeDelta);
			this.notify(2,1.);
		}
		$s.pop();
	}
	,_stamp: function() {
		$s.push("de.polygonal.core.time.Timebase::_stamp");
		var $spos = $s.length;
		var $tmp = haxe.Timer.stamp();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.core.time.Timebase
});
de.polygonal.core.math.random.ParkMiller = $hxClasses["de.polygonal.core.math.random.ParkMiller"] = function(seed) {
	$s.push("de.polygonal.core.math.random.ParkMiller::new");
	var $spos = $s.length;
	if(seed == null) seed = 1;
	de.polygonal.core.math.random.RNG.call(this);
	this.setSeed(seed);
	$s.pop();
}
de.polygonal.core.math.random.ParkMiller.__name__ = ["de","polygonal","core","math","random","ParkMiller"];
de.polygonal.core.math.random.ParkMiller.__super__ = de.polygonal.core.math.random.RNG;
de.polygonal.core.math.random.ParkMiller.prototype = $extend(de.polygonal.core.math.random.RNG.prototype,{
	_state: null
	,setSeed: function(seed) {
		$s.push("de.polygonal.core.math.random.ParkMiller::setSeed");
		var $spos = $s.length;
		if(true != (seed >= 0 && seed <= 2147483646)) throw new de.polygonal.ASE("seed >= 0 && seed <= 0x7ffffffe",{ fileName : "ParkMiller.hx", lineNumber : 56, className : "de.polygonal.core.math.random.ParkMiller", methodName : "setSeed"}); else null;
		de.polygonal.core.math.random.RNG.prototype.setSeed.call(this,seed);
		this._state = seed;
		$s.pop();
	}
	,random: function() {
		$s.push("de.polygonal.core.math.random.ParkMiller::random");
		var $spos = $s.length;
		this._state = this._state * 16807. % 2147483647.;
		var $tmp = this._state;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,randomFloat: function() {
		$s.push("de.polygonal.core.math.random.ParkMiller::randomFloat");
		var $spos = $s.length;
		var $tmp = this.random() / 2147483647.;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.core.math.random.ParkMiller
});
if(!de.polygonal.core.io) de.polygonal.core.io = {}
de.polygonal.core.io.Base64 = $hxClasses["de.polygonal.core.io.Base64"] = function() {
	$s.push("de.polygonal.core.io.Base64::new");
	var $spos = $s.length;
	this._buffer = new Array();
	de.polygonal.core.io.Base64._output = new Array();
	this._tmp = new Array();
	this.BASE64_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	this.BASE64_ENCODE = de.polygonal.ds.ArrayUtil.alloc(this.BASE64_CHARS.length);
	this.BASE64_DECODE = de.polygonal.ds.ArrayUtil.alloc(127);
	var _g1 = 0, _g = this.BASE64_CHARS.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.BASE64_ENCODE[i] = this.BASE64_CHARS.charCodeAt(i);
		this.BASE64_DECODE[this.BASE64_CHARS.charCodeAt(i)] = i;
	}
	$s.pop();
}
de.polygonal.core.io.Base64.__name__ = ["de","polygonal","core","io","Base64"];
de.polygonal.core.io.Base64._output = null;
de.polygonal.core.io.Base64.get = function() {
	$s.push("de.polygonal.core.io.Base64::get");
	var $spos = $s.length;
	if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
	var $tmp = de.polygonal.core.io.Base64._instance;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.io.Base64.encode = function(source,breakLines,maxLineLength) {
	$s.push("de.polygonal.core.io.Base64::encode");
	var $spos = $s.length;
	if(maxLineLength == null) maxLineLength = 76;
	if(breakLines == null) breakLines = false;
	var $tmp = ((function($this) {
		var $r;
		if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
		$r = de.polygonal.core.io.Base64._instance;
		return $r;
	}(this)))._encode(source,breakLines,maxLineLength);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.io.Base64.encodeString = function(source,breakLines,maxLineLength) {
	$s.push("de.polygonal.core.io.Base64::encodeString");
	var $spos = $s.length;
	if(maxLineLength == null) maxLineLength = 76;
	if(breakLines == null) breakLines = false;
	var $tmp = ((function($this) {
		var $r;
		if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
		$r = de.polygonal.core.io.Base64._instance;
		return $r;
	}(this)))._encodeStr(source,breakLines,maxLineLength);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.io.Base64.decode = function(source,out,breakLines) {
	$s.push("de.polygonal.core.io.Base64::decode");
	var $spos = $s.length;
	if(breakLines == null) breakLines = false;
	var $tmp = ((function($this) {
		var $r;
		if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
		$r = de.polygonal.core.io.Base64._instance;
		return $r;
	}(this)))._decode(source,out,breakLines);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.io.Base64.decodeString = function(source,breakLines) {
	$s.push("de.polygonal.core.io.Base64::decodeString");
	var $spos = $s.length;
	if(breakLines == null) breakLines = false;
	var $tmp = ((function($this) {
		var $r;
		if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
		$r = de.polygonal.core.io.Base64._instance;
		return $r;
	}(this)))._decodeStr(source,breakLines);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.io.Base64.prototype = {
	BASE64_CHARS: null
	,BASE64_ENCODE: null
	,BASE64_DECODE: null
	,_buffer: null
	,_tmp: null
	,_encodeStr: function(source,breakLines,maxLineLength) {
		$s.push("de.polygonal.core.io.Base64::_encodeStr");
		var $spos = $s.length;
		if(maxLineLength == null) maxLineLength = 76;
		if(breakLines == null) breakLines = false;
		var output = new haxe.io.BytesOutput();
		output.writeString(source);
		var $tmp = this._encode(output.getBytes().b,breakLines,maxLineLength);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_decodeStr: function(source,breakLines,maxLineLength) {
		$s.push("de.polygonal.core.io.Base64::_decodeStr");
		var $spos = $s.length;
		if(maxLineLength == null) maxLineLength = 76;
		if(breakLines == null) breakLines = false;
		de.polygonal.ds.ArrayUtil.shrink(this._tmp,0);
		this._decode(source,this._tmp,breakLines);
		var input = new haxe.io.BytesInput(haxe.io.Bytes.ofData(this._tmp));
		var $tmp = input.readString(this._tmp.length);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_encode: function(source,breakLines,maxLineLength) {
		$s.push("de.polygonal.core.io.Base64::_encode");
		var $spos = $s.length;
		if(maxLineLength == null) maxLineLength = 76;
		if(breakLines == null) breakLines = false;
		de.polygonal.ds.ArrayUtil.shrink(this._buffer,0);
		var i = 0;
		var p = 0;
		var s = "";
		var k = Std["int"](source.length);
		var remainder = k % 3;
		k -= remainder;
		var b = this._buffer;
		while(p < k) {
			var byte1 = source[p] << 24 >>> 24;
			var byte2 = source[p + 1] << 24 >>> 24;
			var byte3 = source[p + 2] << 24 >>> 24;
			b[i] = this.BASE64_ENCODE[(byte1 & 252) >> 2];
			b[i + 1] = this.BASE64_ENCODE[(byte1 & 3) << 4 | byte2 >> 4];
			b[i + 2] = this.BASE64_ENCODE[(byte2 & 15) << 2 | byte3 >> 6];
			b[i + 3] = this.BASE64_ENCODE[byte3 & 63];
			i += 4;
			p += 3;
		}
		if(remainder == 1) {
			var byte1 = source[p] << 24 >>> 24;
			b[i] = this.BASE64_ENCODE[(byte1 & 252) >> 2];
			b[i + 1] = this.BASE64_ENCODE[(byte1 & 3) << 4];
			b[i + 2] = 61;
			b[i + 3] = 61;
		} else if(remainder == 2) {
			var byte1 = source[p] << 24 >>> 24;
			var byte2 = source[p + 1] << 24 >>> 24;
			b[i] = this.BASE64_ENCODE[(byte1 & 252) >> 2];
			b[i + 1] = this.BASE64_ENCODE[(byte1 & 3) << 4 | byte2 >> 4];
			b[i + 2] = this.BASE64_ENCODE[(byte2 & 15) << 2];
			b[i + 3] = 61;
		}
		s = haxe.io.Bytes.ofData(b).readString(0,b.length);
		if(breakLines) {
			var maxLines = s.length / maxLineLength;
			remainder = s.length % maxLineLength;
			var lines = new Array();
			k = 0;
			var _g = 0;
			while(_g < maxLines) {
				var i1 = _g++;
				lines[i1] = s.substr(k,maxLineLength);
				k += maxLineLength;
			}
			lines.push(s.substr(k));
			s = lines.join("\n");
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,_decode: function(source,out,breakLines) {
		$s.push("de.polygonal.core.io.Base64::_decode");
		var $spos = $s.length;
		if(breakLines == null) breakLines = false;
		if(out == null) out = new Array();
		if(breakLines) source = new EReg("\n","g").replace(source,"");
		var k = source.length;
		var i = 0;
		var p = 0;
		var v = this.BASE64_DECODE;
		var _g1 = 0, _g = source.length;
		while(_g1 < _g) {
			var i1 = _g1++;
			var code = source.charCodeAt(i1);
			if(true != (code == 61 || code == 43 || code == 47 || code >= 48 && code <= 57 || code >= 97 && code <= 122 || code >= 65 && code <= 90)) throw new de.polygonal.ASE("invalid character in input string: '" + code + "'",{ fileName : "Base64.hx", lineNumber : 265, className : "de.polygonal.core.io.Base64", methodName : "_decode"}); else null;
		}
		var output = new haxe.io.BytesOutput();
		output.writeString(source);
		this._buffer = output.getBytes().b;
		var b = this._buffer;
		if(k > 4) {
			k -= 4;
			while(p < k) {
				var s1 = v[b[p]];
				var s2 = v[b[p + 1]];
				var s3 = v[b[p + 2]];
				var s4 = v[b[p + 3]];
				var byte1 = (s1 << 2) + ((s2 & 48) >> 4);
				var byte2 = ((s2 & 15) << 4) + ((s3 & 60) >> 2);
				var byte3 = ((s3 & 3) << 6) + s4;
				out[i] = byte1;
				out[i + 1] = byte2;
				out[i + 2] = byte3;
				i += 3;
				p += 4;
			}
		}
		var s1 = v[b[p]];
		var s2 = v[b[p + 1]];
		var s3 = v[b[p + 2]];
		var s4 = v[b[p + 3]];
		var byte1 = (s1 << 2) + ((s2 & 48) >> 4);
		var byte2 = ((s2 & 15) << 4) + ((s3 & 60) >> 2);
		var byte3 = ((s3 & 3) << 6) + s4;
		if(s2 == 64) {
			$s.pop();
			return out;
		}
		out[i] = byte1;
		if(s3 == 64) {
			$s.pop();
			return out;
		}
		out[i + 1] = byte2;
		if(s4 == 64) {
			$s.pop();
			return out;
		}
		out[i + 2] = byte3;
		$s.pop();
		return out;
		$s.pop();
	}
	,_getByte: function(b,i) {
		$s.push("de.polygonal.core.io.Base64::_getByte");
		var $spos = $s.length;
		var $tmp = b[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_setByte: function(b,i,x) {
		$s.push("de.polygonal.core.io.Base64::_setByte");
		var $spos = $s.length;
		b[i] = x;
		$s.pop();
	}
	,__class__: de.polygonal.core.io.Base64
}
jeash.display.Stage = $hxClasses["jeash.display.Stage"] = function(width,height) {
	$s.push("jeash.display.Stage::new");
	var $spos = $s.length;
	jeash.display.DisplayObjectContainer.call(this);
	this.jeashFocusObject = null;
	this.jeashWindowWidth = width;
	this.jeashWindowHeight = height;
	this.stageFocusRect = false;
	this.scaleMode = jeash.display.StageScaleMode.SHOW_ALL;
	this.jeashStageMatrix = new jeash.geom.Matrix();
	this.tabEnabled = true;
	this.jeashSetFrameRate(60.0);
	this.jeashSetBackgroundColour(16777215);
	this.name = "Stage";
	this.loaderInfo = jeash.display.LoaderInfo.create(null);
	this.loaderInfo.parameters.width = Std.string(this.jeashWindowWidth);
	this.loaderInfo.parameters.height = Std.string(this.jeashWindowHeight);
	this.mProjMatrix = [1.,0,0,0,0,1,0,0,0,0,-1,-1,0,0,0,0];
	this.jeashPointInPathMode = jeash.display.Graphics.jeashDetectIsPointInPathMode();
	this.jeashMouseOverObjects = [];
	this.jeashSetShowDefaultContextMenu(true);
	this.jeashTouchInfo = [];
	this.jeashFocusOverObjects = [];
	$s.pop();
}
jeash.display.Stage.__name__ = ["jeash","display","Stage"];
jeash.display.Stage.__super__ = jeash.display.DisplayObjectContainer;
jeash.display.Stage.prototype = $extend(jeash.display.DisplayObjectContainer.prototype,{
	jeashWindowWidth: null
	,jeashWindowHeight: null
	,jeashTimer: null
	,jeashInterval: null
	,jeashFastMode: null
	,jeashDragObject: null
	,jeashDragBounds: null
	,jeashDragOffsetX: null
	,jeashDragOffsetY: null
	,jeashMouseOverObjects: null
	,jeashStageMatrix: null
	,jeashStageActive: null
	,jeashFrameRate: null
	,jeashBackgroundColour: null
	,jeashShowDefaultContextMenu: null
	,jeashTouchInfo: null
	,jeashFocusOverObjects: null
	,jeashPointInPathMode: null
	,stageWidth: null
	,stageHeight: null
	,frameRate: null
	,quality: null
	,scaleMode: null
	,align: null
	,stageFocusRect: null
	,focus: null
	,backgroundColor: null
	,showDefaultContextMenu: null
	,displayState: null
	,fullScreenWidth: null
	,fullScreenHeight: null
	,jeashGetStageWidth: function() {
		$s.push("jeash.display.Stage::jeashGetStageWidth");
		var $spos = $s.length;
		var $tmp = this.jeashWindowWidth;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetStageHeight: function() {
		$s.push("jeash.display.Stage::jeashGetStageHeight");
		var $spos = $s.length;
		var $tmp = this.jeashWindowHeight;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashFocusObject: null
	,mProjMatrix: null
	,jeashStartDrag: function(sprite,lockCenter,bounds) {
		$s.push("jeash.display.Stage::jeashStartDrag");
		var $spos = $s.length;
		if(lockCenter == null) lockCenter = false;
		this.jeashDragBounds = bounds == null?null:bounds.clone();
		this.jeashDragObject = sprite;
		if(this.jeashDragObject != null) {
			if(lockCenter) {
				var bounds1 = sprite.getBounds(this);
				this.jeashDragOffsetX = -bounds1.width / 2 - bounds1.x;
				this.jeashDragOffsetY = -bounds1.height / 2 - bounds1.y;
			} else {
				var mouse = new jeash.geom.Point(this.jeashGetMouseX(),this.jeashGetMouseY());
				var p = this.jeashDragObject.parent;
				if(p != null) mouse = p.globalToLocal(mouse);
				this.jeashDragOffsetX = this.jeashDragObject.jeashGetX() - mouse.x;
				this.jeashDragOffsetY = this.jeashDragObject.jeashGetY() - mouse.y;
			}
		}
		$s.pop();
	}
	,jeashDrag: function(point) {
		$s.push("jeash.display.Stage::jeashDrag");
		var $spos = $s.length;
		var p = this.jeashDragObject.parent;
		if(p != null) point = p.globalToLocal(point);
		var x = point.x + this.jeashDragOffsetX;
		var y = point.y + this.jeashDragOffsetY;
		if(this.jeashDragBounds != null) {
			if(x < this.jeashDragBounds.x) x = this.jeashDragBounds.x; else if(x > this.jeashDragBounds.get_right()) x = this.jeashDragBounds.get_right();
			if(y < this.jeashDragBounds.y) y = this.jeashDragBounds.y; else if(y > this.jeashDragBounds.get_bottom()) y = this.jeashDragBounds.get_bottom();
		}
		this.jeashDragObject.jeashSetX(x);
		this.jeashDragObject.jeashSetY(y);
		$s.pop();
	}
	,jeashStopDrag: function(sprite) {
		$s.push("jeash.display.Stage::jeashStopDrag");
		var $spos = $s.length;
		this.jeashDragBounds = null;
		this.jeashDragObject = null;
		$s.pop();
	}
	,jeashCheckFocusInOuts: function(event,inStack) {
		$s.push("jeash.display.Stage::jeashCheckFocusInOuts");
		var $spos = $s.length;
		var new_n = inStack.length;
		var new_obj = new_n > 0?inStack[new_n - 1]:null;
		var old_n = this.jeashFocusOverObjects.length;
		var old_obj = old_n > 0?this.jeashFocusOverObjects[old_n - 1]:null;
		if(new_obj != old_obj) {
			var common = 0;
			while(common < new_n && common < old_n && inStack[common] == this.jeashFocusOverObjects[common]) common++;
			var focusOut = new jeash.events.FocusEvent(jeash.events.FocusEvent.FOCUS_OUT,false,false,new_obj,false,0);
			var i = old_n - 1;
			while(i >= common) {
				this.jeashFocusOverObjects[i].dispatchEvent(focusOut);
				i--;
			}
			var focusIn = new jeash.events.FocusEvent(jeash.events.FocusEvent.FOCUS_IN,false,false,old_obj,false,0);
			var i1 = new_n - 1;
			while(i1 >= common) {
				inStack[i1].dispatchEvent(focusIn);
				i1--;
			}
			this.jeashFocusOverObjects = inStack;
			this.jeashSetFocus(new_obj);
		}
		$s.pop();
	}
	,jeashCheckInOuts: function(event,stack,touchInfo) {
		$s.push("jeash.display.Stage::jeashCheckInOuts");
		var $spos = $s.length;
		var prev = touchInfo == null?this.jeashMouseOverObjects:touchInfo.touchOverObjects;
		var events = touchInfo == null?jeash.display.Stage.jeashMouseChanges:jeash.display.Stage.jeashTouchChanges;
		var new_n = stack.length;
		var new_obj = new_n > 0?stack[new_n - 1]:null;
		var old_n = prev.length;
		var old_obj = old_n > 0?prev[old_n - 1]:null;
		if(new_obj != old_obj) {
			if(old_obj != null) old_obj.jeashFireEvent(event.jeashCreateSimilar(events[0],new_obj,old_obj));
			if(new_obj != null) new_obj.jeashFireEvent(event.jeashCreateSimilar(events[1],old_obj,new_obj));
			var common = 0;
			while(common < new_n && common < old_n && stack[common] == prev[common]) common++;
			var rollOut = event.jeashCreateSimilar(events[2],new_obj,old_obj);
			var i = old_n - 1;
			while(i >= common) {
				prev[i].dispatchEvent(rollOut);
				i--;
			}
			var rollOver = event.jeashCreateSimilar(events[3],old_obj);
			var i1 = new_n - 1;
			while(i1 >= common) {
				stack[i1].dispatchEvent(rollOver);
				i1--;
			}
			if(touchInfo == null) this.jeashMouseOverObjects = stack; else touchInfo.touchOverObjects = stack;
		}
		$s.pop();
	}
	,jeashProcessStageEvent: function(evt) {
		$s.push("jeash.display.Stage::jeashProcessStageEvent");
		var $spos = $s.length;
		evt.stopPropagation();
		if(evt.type == "focus") js.Lib.window.alert("HHIII");
		switch(evt.type) {
		case "mousemove":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.MOUSE_MOVE);
			break;
		case "mousedown":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.MOUSE_DOWN);
			break;
		case "mouseup":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.MOUSE_UP);
			break;
		case "click":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.CLICK);
			break;
		case "mousewheel":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.MOUSE_WHEEL);
			break;
		case "dblclick":
			this.jeashOnMouse(evt,jeash.events.MouseEvent.DOUBLE_CLICK);
			break;
		case "keypress":
			this.jeashOnKey(evt,jeash.events.KeyboardEvent.KEY_DOWN);
			this.jeashOnKey(evt,jeash.events.KeyboardEvent.KEY_UP);
			break;
		case "keydown":
			this.jeashOnKey(evt,jeash.events.KeyboardEvent.KEY_DOWN);
			break;
		case "keyup":
			this.jeashOnKey(evt,jeash.events.KeyboardEvent.KEY_UP);
			break;
		case "touchstart":
			var evt1 = evt;
			evt1.preventDefault();
			var touchInfo = new jeash.display.TouchInfo();
			this.jeashTouchInfo[evt1.changedTouches[0].identifier] = touchInfo;
			this.jeashOnTouch(evt1,evt1.changedTouches[0],jeash.events.TouchEvent.TOUCH_BEGIN,touchInfo,false);
			break;
		case "touchmove":
			var evt1 = evt;
			var touchInfo = this.jeashTouchInfo[evt1.changedTouches[0].identifier];
			this.jeashOnTouch(evt1,evt1.changedTouches[0],jeash.events.TouchEvent.TOUCH_MOVE,touchInfo,true);
			break;
		case "touchend":
			var evt1 = evt;
			var touchInfo = this.jeashTouchInfo[evt1.changedTouches[0].identifier];
			this.jeashOnTouch(evt1,evt1.changedTouches[0],jeash.events.TouchEvent.TOUCH_END,touchInfo,true);
			this.jeashTouchInfo[evt1.changedTouches[0].identifier] = null;
			break;
		default:
		}
		$s.pop();
	}
	,jeashOnMouse: function(event,type) {
		$s.push("jeash.display.Stage::jeashOnMouse");
		var $spos = $s.length;
		var point = new jeash.geom.Point(event.clientX - jeash.Lib.mMe.__scr.offsetLeft + window.pageXOffset,event.clientY - jeash.Lib.mMe.__scr.offsetTop + window.pageYOffset);
		if(this.jeashDragObject != null) this.jeashDrag(point);
		var obj = this.jeashGetObjectUnderPoint(point);
		this.jeashSetMouseX(point.x);
		this.jeashSetMouseY(point.y);
		var stack = new Array();
		if(obj != null) obj.jeashGetInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = jeash.events.MouseEvent.jeashCreate(type,event,local,obj);
			this.jeashCheckInOuts(evt,stack);
			if(type == jeash.events.MouseEvent.MOUSE_DOWN) this.jeashCheckFocusInOuts(evt,stack);
			obj.jeashFireEvent(evt);
		} else {
			var evt = jeash.events.MouseEvent.jeashCreate(type,event,point,null);
			this.jeashCheckInOuts(evt,stack);
			if(type == jeash.events.MouseEvent.MOUSE_DOWN) this.jeashCheckFocusInOuts(evt,stack);
		}
		$s.pop();
	}
	,jeashOnTouch: function(event,touch,type,touchInfo,isPrimaryTouchPoint) {
		$s.push("jeash.display.Stage::jeashOnTouch");
		var $spos = $s.length;
		var point = new jeash.geom.Point(touch.pageX - jeash.Lib.mMe.__scr.offsetLeft + window.pageXOffset,touch.pageY - jeash.Lib.mMe.__scr.offsetTop + window.pageYOffset);
		var obj = this.jeashGetObjectUnderPoint(point);
		this.jeashSetMouseX(point.x);
		this.jeashSetMouseY(point.y);
		var stack = new Array();
		if(obj != null) obj.jeashGetInteractiveObjectStack(stack);
		if(stack.length > 0) {
			stack.reverse();
			var local = obj.globalToLocal(point);
			var evt = jeash.events.TouchEvent.jeashCreate(type,event,touch,local,obj);
			evt.touchPointID = touch.identifier;
			evt.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.jeashCheckInOuts(evt,stack,touchInfo);
			obj.jeashFireEvent(evt);
			var mouseType = (function($this) {
				var $r;
				switch(type) {
				case jeash.events.TouchEvent.TOUCH_BEGIN:
					$r = jeash.events.MouseEvent.MOUSE_DOWN;
					break;
				case jeash.events.TouchEvent.TOUCH_END:
					$r = jeash.events.MouseEvent.MOUSE_UP;
					break;
				default:
					$r = (function($this) {
						var $r;
						if($this.jeashDragObject != null) $this.jeashDrag(point);
						$r = jeash.events.MouseEvent.MOUSE_MOVE;
						return $r;
					}($this));
				}
				return $r;
			}(this));
			obj.jeashFireEvent(jeash.events.MouseEvent.jeashCreate(mouseType,evt,local,obj));
		} else {
			var evt = jeash.events.TouchEvent.jeashCreate(type,event,touch,point,null);
			evt.touchPointID = touch.identifier;
			evt.isPrimaryTouchPoint = isPrimaryTouchPoint;
			this.jeashCheckInOuts(evt,stack,touchInfo);
		}
		$s.pop();
	}
	,jeashOnKey: function(evt,type) {
		$s.push("jeash.display.Stage::jeashOnKey");
		var $spos = $s.length;
		var charCode = evt.which != null && evt.which != 0?evt.which:evt.charCode != null && evt.charCode != 0?evt.charCode:evt.keyCode;
		if(evt.type != "keypress" && charCode >= 48 || evt.type == "keypress" && charCode < 48) {
			$s.pop();
			return;
		}
		if(charCode < 45) evt.preventDefault();
		var event = new jeash.events.KeyboardEvent(type,true,false,charCode,evt.keyCode,evt.shiftKey || evt.ctrlKey?1:0,evt.ctrlKey,evt.altKey,evt.shiftKey);
		this.dispatchEvent(event);
		this.GetStage().jeashGetFocus().dispatchEvent(event);
		$s.pop();
	}
	,jeashOnResize: function(inW,inH) {
		$s.push("jeash.display.Stage::jeashOnResize");
		var $spos = $s.length;
		this.jeashWindowWidth = inW;
		this.jeashWindowHeight = inH;
		var event = new jeash.events.Event(jeash.events.Event.RESIZE);
		event.target = this;
		this.jeashBroadcast(event);
		$s.pop();
	}
	,jeashGetBackgroundColour: function() {
		$s.push("jeash.display.Stage::jeashGetBackgroundColour");
		var $spos = $s.length;
		var $tmp = this.jeashBackgroundColour;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetBackgroundColour: function(col) {
		$s.push("jeash.display.Stage::jeashSetBackgroundColour");
		var $spos = $s.length;
		this.jeashBackgroundColour = col;
		$s.pop();
		return col;
		$s.pop();
	}
	,jeashSetFocus: function(inObj) {
		$s.push("jeash.display.Stage::jeashSetFocus");
		var $spos = $s.length;
		var $tmp = this.jeashFocusObject = inObj;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetFocus: function() {
		$s.push("jeash.display.Stage::jeashGetFocus");
		var $spos = $s.length;
		var $tmp = this.jeashFocusObject;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashRenderAll: function() {
		$s.push("jeash.display.Stage::jeashRenderAll");
		var $spos = $s.length;
		this.jeashRender(this.jeashStageMatrix);
		$s.pop();
	}
	,jeashRenderToCanvas: function(canvas) {
		$s.push("jeash.display.Stage::jeashRenderToCanvas");
		var $spos = $s.length;
		canvas.width = canvas.width;
		this.jeashRender(this.jeashStageMatrix,canvas);
		$s.pop();
	}
	,jeashSetQuality: function(inQuality) {
		$s.push("jeash.display.Stage::jeashSetQuality");
		var $spos = $s.length;
		this.quality = inQuality;
		$s.pop();
		return inQuality;
		$s.pop();
	}
	,jeashGetQuality: function() {
		$s.push("jeash.display.Stage::jeashGetQuality");
		var $spos = $s.length;
		var $tmp = this.quality != null?this.quality:jeash.display.StageQuality.BEST;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetFrameRate: function() {
		$s.push("jeash.display.Stage::jeashGetFrameRate");
		var $spos = $s.length;
		var $tmp = this.jeashFrameRate;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetFrameRate: function(speed) {
		$s.push("jeash.display.Stage::jeashSetFrameRate");
		var $spos = $s.length;
		if(StringTools.startsWith(jeash.Lib.context,"swf")) {
			$s.pop();
			return speed;
		}
		var window = js.Lib.window;
		if(speed == 0 && window.postMessage != null) this.jeashFastMode = true; else {
			this.jeashFastMode = false;
			this.jeashInterval = Std["int"](1000.0 / speed);
		}
		this.jeashUpdateNextWake();
		this.jeashFrameRate = speed;
		$s.pop();
		return speed;
		$s.pop();
	}
	,jeashUpdateNextWake: function() {
		$s.push("jeash.display.Stage::jeashUpdateNextWake");
		var $spos = $s.length;
		var window = js.Lib.window;
		window.clearInterval(this.jeashTimer);
		if(this.jeashFastMode) {
			window.addEventListener("message",this.jeashStageRender.$bind(this),false);
			window.postMessage("a",window.location);
		} else this.jeashTimer = window.setInterval(this.jeashStageRender.$bind(this),this.jeashInterval,[]);
		$s.pop();
	}
	,jeashStageRender: function(_) {
		$s.push("jeash.display.Stage::jeashStageRender");
		var $spos = $s.length;
		if(!this.jeashStageActive) {
			this.jeashOnResize(this.jeashWindowWidth,this.jeashWindowHeight);
			var event = new jeash.events.Event(jeash.events.Event.ACTIVATE);
			event.target = this;
			this.jeashBroadcast(event);
			this.jeashStageActive = true;
		}
		var event = new jeash.events.Event(jeash.events.Event.ENTER_FRAME);
		this.jeashBroadcast(event);
		this.jeashRenderAll();
		var event1 = new jeash.events.Event(jeash.events.Event.RENDER);
		this.jeashBroadcast(event1);
		if(this.jeashFastMode) window.postMessage("a",window.location);
		$s.pop();
	}
	,jeashIsOnStage: function() {
		$s.push("jeash.display.Stage::jeashIsOnStage");
		var $spos = $s.length;
		$s.pop();
		return true;
		$s.pop();
	}
	,jeashGetMouseX: function() {
		$s.push("jeash.display.Stage::jeashGetMouseX");
		var $spos = $s.length;
		var $tmp = this.mouseX;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMouseX: function(x) {
		$s.push("jeash.display.Stage::jeashSetMouseX");
		var $spos = $s.length;
		this.mouseX = x;
		$s.pop();
		return x;
		$s.pop();
	}
	,jeashGetMouseY: function() {
		$s.push("jeash.display.Stage::jeashGetMouseY");
		var $spos = $s.length;
		var $tmp = this.mouseY;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetMouseY: function(y) {
		$s.push("jeash.display.Stage::jeashSetMouseY");
		var $spos = $s.length;
		this.mouseY = y;
		$s.pop();
		return y;
		$s.pop();
	}
	,jeashGetShowDefaultContextMenu: function() {
		$s.push("jeash.display.Stage::jeashGetShowDefaultContextMenu");
		var $spos = $s.length;
		var $tmp = this.jeashShowDefaultContextMenu;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetShowDefaultContextMenu: function(showDefaultContextMenu) {
		$s.push("jeash.display.Stage::jeashSetShowDefaultContextMenu");
		var $spos = $s.length;
		if(showDefaultContextMenu != this.jeashShowDefaultContextMenu && this.jeashShowDefaultContextMenu != null) {
			if(!showDefaultContextMenu) jeash.Lib.jeashDisableRightClick(); else jeash.Lib.jeashEnableRightClick();
		}
		this.jeashShowDefaultContextMenu = showDefaultContextMenu;
		$s.pop();
		return showDefaultContextMenu;
		$s.pop();
	}
	,jeashGetDisplayState: function() {
		$s.push("jeash.display.Stage::jeashGetDisplayState");
		var $spos = $s.length;
		var $tmp = this.displayState;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashSetDisplayState: function(displayState) {
		$s.push("jeash.display.Stage::jeashSetDisplayState");
		var $spos = $s.length;
		if(displayState != this.displayState && this.displayState != null) {
			switch( (displayState)[1] ) {
			case 1:
				jeash.Lib.jeashDisableFullScreen();
				break;
			case 0:
				jeash.Lib.jeashEnableFullScreen();
				break;
			}
		}
		this.displayState = displayState;
		$s.pop();
		return displayState;
		$s.pop();
	}
	,jeashGetFullScreenWidth: function() {
		$s.push("jeash.display.Stage::jeashGetFullScreenWidth");
		var $spos = $s.length;
		var $tmp = jeash.Lib.jeashFullScreenWidth();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,jeashGetFullScreenHeight: function() {
		$s.push("jeash.display.Stage::jeashGetFullScreenHeight");
		var $spos = $s.length;
		var $tmp = jeash.Lib.jeashFullScreenHeight();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: jeash.display.Stage
	,__properties__: $extend(jeash.display.DisplayObjectContainer.prototype.__properties__,{get_fullScreenHeight:"jeashGetFullScreenHeight",get_fullScreenWidth:"jeashGetFullScreenWidth",set_displayState:"jeashSetDisplayState",get_displayState:"jeashGetDisplayState",set_showDefaultContextMenu:"jeashSetShowDefaultContextMenu",get_showDefaultContextMenu:"jeashGetShowDefaultContextMenu",set_backgroundColor:"jeashSetBackgroundColour",get_backgroundColor:"jeashGetBackgroundColour",set_focus:"jeashSetFocus",get_focus:"jeashGetFocus",set_quality:"jeashSetQuality",get_quality:"jeashGetQuality",set_frameRate:"jeashSetFrameRate",get_frameRate:"jeashGetFrameRate",get_stageHeight:"jeashGetStageHeight",get_stageWidth:"jeashGetStageWidth"})
});
jeash.display.TouchInfo = $hxClasses["jeash.display.TouchInfo"] = function() {
	$s.push("jeash.display.TouchInfo::new");
	var $spos = $s.length;
	this.touchOverObjects = [];
	$s.pop();
}
jeash.display.TouchInfo.__name__ = ["jeash","display","TouchInfo"];
jeash.display.TouchInfo.prototype = {
	touchOverObjects: null
	,__class__: jeash.display.TouchInfo
}
haxe.Log = $hxClasses["haxe.Log"] = function() { }
haxe.Log.__name__ = ["haxe","Log"];
haxe.Log.trace = function(v,infos) {
	$s.push("haxe.Log::trace");
	var $spos = $s.length;
	js.Boot.__trace(v,infos);
	$s.pop();
}
haxe.Log.clear = function() {
	$s.push("haxe.Log::clear");
	var $spos = $s.length;
	js.Boot.__clear_trace();
	$s.pop();
}
haxe.Log.prototype = {
	__class__: haxe.Log
}
jeash.errors.IOError = $hxClasses["jeash.errors.IOError"] = function(message) {
	$s.push("jeash.errors.IOError::new");
	var $spos = $s.length;
	if(message == null) message = "";
	jeash.errors.Error.call(this,message);
	$s.pop();
}
jeash.errors.IOError.__name__ = ["jeash","errors","IOError"];
jeash.errors.IOError.__super__ = jeash.errors.Error;
jeash.errors.IOError.prototype = $extend(jeash.errors.Error.prototype,{
	__class__: jeash.errors.IOError
});
hsl.haxe.Signal = $hxClasses["hsl.haxe.Signal"] = function(data,currentBond,currentTarget,origin) {
	$s.push("hsl.haxe.Signal::new");
	var $spos = $s.length;
	this.data = data;
	this.currentBond = currentBond;
	this.currentTarget = currentTarget;
	this.origin = origin;
	this.immediatePropagationStopped = false;
	this.propagationStopped = false;
	$s.pop();
}
hsl.haxe.Signal.__name__ = ["hsl","haxe","Signal"];
hsl.haxe.Signal.prototype = {
	currentBond: null
	,currentTarget: null
	,data: null
	,data1: null
	,immediatePropagationStopped: null
	,origin: null
	,propagationStopped: null
	,getData: function() {
		$s.push("hsl.haxe.Signal::getData");
		var $spos = $s.length;
		var $tmp = this.data;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,stopImmediatePropagation: function() {
		$s.push("hsl.haxe.Signal::stopImmediatePropagation");
		var $spos = $s.length;
		this.immediatePropagationStopped = true;
		$s.pop();
	}
	,stopPropagation: function() {
		$s.push("hsl.haxe.Signal::stopPropagation");
		var $spos = $s.length;
		this.propagationStopped = true;
		$s.pop();
	}
	,toString: function() {
		$s.push("hsl.haxe.Signal::toString");
		var $spos = $s.length;
		var $tmp = "[GenericSignal data=" + this.data + "]";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hsl.haxe.Signal
	,__properties__: {get_data1:"getData"}
}
jeash.text.TextFieldType = $hxClasses["jeash.text.TextFieldType"] = function() {
	$s.push("jeash.text.TextFieldType::new");
	var $spos = $s.length;
	$s.pop();
}
jeash.text.TextFieldType.__name__ = ["jeash","text","TextFieldType"];
jeash.text.TextFieldType.prototype = {
	__class__: jeash.text.TextFieldType
}
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] }
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; }
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; }
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
if(!jeash.accessibility) jeash.accessibility = {}
jeash.accessibility.AccessibilityProperties = $hxClasses["jeash.accessibility.AccessibilityProperties"] = function() {
	$s.push("jeash.accessibility.AccessibilityProperties::new");
	var $spos = $s.length;
	this.description = "";
	this.forceSimple = false;
	this.name = "";
	this.noAutoLabeling = false;
	this.shortcut = "";
	this.silent = false;
	$s.pop();
}
jeash.accessibility.AccessibilityProperties.__name__ = ["jeash","accessibility","AccessibilityProperties"];
jeash.accessibility.AccessibilityProperties.prototype = {
	description: null
	,forceSimple: null
	,name: null
	,noAutoLabeling: null
	,shortcut: null
	,silent: null
	,__class__: jeash.accessibility.AccessibilityProperties
}
com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer = $hxClasses["com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer"] = function(world,container,width,height) {
	$s.push("com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer::new");
	var $spos = $s.length;
	this.width = width;
	this.height = height;
	this.world = world;
	this.container = container;
	world.onEntityAdded.bind(this.onEntityAdded.$bind(this));
	world.onEntityRemoved.bind(this.onEntityRemoved.$bind(this));
	this.entityRenderers = new de.polygonal.ds.HashTable(16);
	$s.pop();
}
com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer.__name__ = ["com","wighawag","game","engine","renderer","twodimensions","displaylist","DisplayListRenderer"];
com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer.__interfaces__ = [com.wighawag.game.engine.core.Renderer];
com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer.prototype = {
	world: null
	,container: null
	,width: null
	,height: null
	,entityRenderers: null
	,onEntityAdded: function(entity) {
		$s.push("com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer::onEntityAdded");
		var $spos = $s.length;
		var entity2D = (function($this) {
			var $r;
			var $t = entity;
			if(Std["is"]($t,com.wighawag.game.engine.world.twodimensions.core.Entity2D)) $t; else throw "Class cast error";
			$r = $t;
			return $r;
		}(this));
		var renderer = this.entityRenderers.get(entity2D);
		if(renderer == null) {
			renderer = new com.wighawag.game.engine.renderer.twodimensions.displaylist.EntitySpriteRenderer();
			renderer.entity = entity2D;
			renderer.jeashGetGraphics().beginFill(16711680);
			renderer.jeashGetGraphics().drawRect(0,0,entity2D.area.width,entity2D.area.height);
			renderer.jeashGetGraphics().endFill();
			this.container.addChild(renderer);
			this.entityRenderers.set(entity2D,renderer);
		}
		$s.pop();
	}
	,onEntityRemoved: function(entity) {
		$s.push("com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer::onEntityRemoved");
		var $spos = $s.length;
		var entity2D = (function($this) {
			var $r;
			var $t = entity;
			if(Std["is"]($t,com.wighawag.game.engine.world.twodimensions.core.Entity2D)) $t; else throw "Class cast error";
			$r = $t;
			return $r;
		}(this));
		var renderer = this.entityRenderers.get(entity2D);
		if(renderer != null) {
			this.container.removeChild(renderer);
			this.entityRenderers.clr(entity2D);
		}
		$s.pop();
	}
	,update: function(millisecondsStep) {
		$s.push("com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer::update");
		var $spos = $s.length;
		var $it0 = this.entityRenderers.iterator();
		while( $it0.hasNext() ) {
			var renderer = $it0.next();
			renderer.jeashSetX(renderer.entity.area.x);
			renderer.jeashSetY(renderer.entity.area.y);
		}
		$s.pop();
	}
	,__class__: com.wighawag.game.engine.renderer.twodimensions.displaylist.DisplayListRenderer
}
var Selection = $hxClasses["Selection"] = function() { }
Selection.__name__ = ["Selection"];
Selection.prototype = {
	anchorNode: null
	,anchorOffset: null
	,focusNode: null
	,focusOffset: null
	,isCollapsed: null
	,rangeCount: null
	,collapse: null
	,collapseToStart: null
	,collapseToEnd: null
	,selectAllChildren: null
	,deleteFromDocument: null
	,getRangeAt: null
	,addRange: null
	,removeRange: null
	,removeAllRanges: null
	,stringifier: null
	,__class__: Selection
}
var MessagePortArray = $hxClasses["MessagePortArray"] = function() { }
MessagePortArray.__name__ = ["MessagePortArray"];
MessagePortArray.prototype = {
	__class__: MessagePortArray
}
var MessagePort = $hxClasses["MessagePort"] = function() { }
MessagePort.__name__ = ["MessagePort"];
MessagePort.prototype = {
	postMessage: null
	,start: null
	,close: null
	,onmessage: null
	,__class__: MessagePort
}
jeash.net.URLLoaderDataFormat = $hxClasses["jeash.net.URLLoaderDataFormat"] = { __ename__ : ["jeash","net","URLLoaderDataFormat"], __constructs__ : ["BINARY","TEXT","VARIABLES"] }
jeash.net.URLLoaderDataFormat.BINARY = ["BINARY",0];
jeash.net.URLLoaderDataFormat.BINARY.toString = $estr;
jeash.net.URLLoaderDataFormat.BINARY.__enum__ = jeash.net.URLLoaderDataFormat;
jeash.net.URLLoaderDataFormat.TEXT = ["TEXT",1];
jeash.net.URLLoaderDataFormat.TEXT.toString = $estr;
jeash.net.URLLoaderDataFormat.TEXT.__enum__ = jeash.net.URLLoaderDataFormat;
jeash.net.URLLoaderDataFormat.VARIABLES = ["VARIABLES",2];
jeash.net.URLLoaderDataFormat.VARIABLES.toString = $estr;
jeash.net.URLLoaderDataFormat.VARIABLES.__enum__ = jeash.net.URLLoaderDataFormat;
if(!de.polygonal.ds.pooling) de.polygonal.ds.pooling = {}
de.polygonal.ds.pooling.DynamicObjectPool = $hxClasses["de.polygonal.ds.pooling.DynamicObjectPool"] = function(C,fabricate,factory,capacity) {
	$s.push("de.polygonal.ds.pooling.DynamicObjectPool::new");
	var $spos = $s.length;
	if(capacity == null) capacity = 2147483647;
	this._class = C;
	this._args = new Array();
	this._fabricate = fabricate;
	this._factory = factory;
	this._capacity = capacity;
	this._pool = new Array();
	this._allocType = 0;
	this._top = 0;
	this._size = 0;
	this._oldSize = 0;
	this._used = 0;
	this._usedMax = 0;
	if(C != null) this._allocType |= 1;
	if(fabricate != null) this._allocType |= 2;
	if(factory != null) this._allocType |= 4;
	if(true != (de.polygonal.ds.Bits.ones(this._allocType) == 1)) throw new de.polygonal.ASE("invalid arguments",{ fileName : "DynamicObjectPool.hx", lineNumber : 168, className : "de.polygonal.ds.pooling.DynamicObjectPool", methodName : "new"}); else null;
	this.key = de.polygonal.ds.HashKey._counter++;
	this._set = new de.polygonal.ds.ListSet();
	$s.pop();
}
de.polygonal.ds.pooling.DynamicObjectPool.__name__ = ["de","polygonal","ds","pooling","DynamicObjectPool"];
de.polygonal.ds.pooling.DynamicObjectPool.prototype = {
	key: null
	,_size: null
	,_oldSize: null
	,_capacity: null
	,_top: null
	,_used: null
	,_usedMax: null
	,_pool: null
	,_class: null
	,_args: null
	,_fabricate: null
	,_factory: null
	,_allocType: null
	,_set: null
	,free: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::free");
		var $spos = $s.length;
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			this._pool[i] = null;
		}
		this._class = null;
		this._args = null;
		this._fabricate = null;
		this._factory = null;
		this._pool = null;
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::size");
		var $spos = $s.length;
		var $tmp = this._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,capacity: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::capacity");
		var $spos = $s.length;
		var $tmp = this._capacity;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,used: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::used");
		var $spos = $s.length;
		var $tmp = this._used;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,maxUsageCount: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::maxUsageCount");
		var $spos = $s.length;
		var $tmp = this._usedMax;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,get: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::get");
		var $spos = $s.length;
		var x = null;
		if(this._top > 0) {
			x = this._pool[--this._top];
			this._set.remove(x);
		} else {
			x = this._alloc();
			if(this._size < this._capacity) this._pool[this._size++] = x;
		}
		this._used++;
		$s.pop();
		return x;
		$s.pop();
	}
	,put: function(x) {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::put");
		var $spos = $s.length;
		if(true != !this._set.has(x)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("object %s was returned twice to the pool",[x]),{ fileName : "DynamicObjectPool.hx", lineNumber : 261, className : "de.polygonal.ds.pooling.DynamicObjectPool", methodName : "put"}); else null;
		this._set.set(x);
		this._pool[this._top++] = x;
		this._used--;
		$s.pop();
	}
	,reclaim: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::reclaim");
		var $spos = $s.length;
		this._top = this._size;
		this._set.clear();
		var c = this._size - this._oldSize;
		this._oldSize = this._size;
		this._usedMax = de.polygonal.core.math.Mathematics.max(this._usedMax,this._used);
		this._used = 0;
		$s.pop();
		return c;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::iterator");
		var $spos = $s.length;
		var $tmp = new de.polygonal.ds.pooling.DynamicObjectPoolIterator(this);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::toString");
		var $spos = $s.length;
		var $tmp = de.polygonal.core.fmt.Sprintf.format("{DynamicObjectPool, size/capacity: %d/%d}",[this._size,this._capacity]);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_alloc: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPool::_alloc");
		var $spos = $s.length;
		var x = null;
		switch(this._allocType) {
		case 1:
			x = de.polygonal.core.util.Instance.create(this._class,this._args);
			break;
		case 2:
			x = this._fabricate();
			break;
		case 4:
			x = this._factory.create();
			break;
		}
		$s.pop();
		return x;
		$s.pop();
	}
	,__class__: de.polygonal.ds.pooling.DynamicObjectPool
}
de.polygonal.ds.pooling.DynamicObjectPoolIterator = $hxClasses["de.polygonal.ds.pooling.DynamicObjectPoolIterator"] = function(f) {
	$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._a = this._f._pool;
		this._s = this._f._size;
		this._i = 0;
		this;
	}
	$s.pop();
}
de.polygonal.ds.pooling.DynamicObjectPoolIterator.__name__ = ["de","polygonal","ds","pooling","DynamicObjectPoolIterator"];
de.polygonal.ds.pooling.DynamicObjectPoolIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.pooling.DynamicObjectPoolIterator.prototype = {
	_f: null
	,_a: null
	,_s: null
	,_i: null
	,reset: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::reset");
		var $spos = $s.length;
		this._a = this._f._pool;
		this._s = this._f._size;
		this._i = 0;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::next");
		var $spos = $s.length;
		var $tmp = this._a[this._i++];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__pool: function(f) {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::__pool");
		var $spos = $s.length;
		var $tmp = this._f._pool;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__size: function(f) {
		$s.push("de.polygonal.ds.pooling.DynamicObjectPoolIterator::__size");
		var $spos = $s.length;
		var $tmp = f._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.pooling.DynamicObjectPoolIterator
}
var Reflect = $hxClasses["Reflect"] = function() { }
Reflect.__name__ = ["Reflect"];
Reflect.hasField = function(o,field) {
	$s.push("Reflect::hasField");
	var $spos = $s.length;
	if(o.hasOwnProperty != null) {
		var $tmp = o.hasOwnProperty(field);
		$s.pop();
		return $tmp;
	}
	var arr = Reflect.fields(o);
	var $it0 = arr.iterator();
	while( $it0.hasNext() ) {
		var t = $it0.next();
		if(t == field) {
			$s.pop();
			return true;
		}
	}
	$s.pop();
	return false;
	$s.pop();
}
Reflect.field = function(o,field) {
	$s.push("Reflect::field");
	var $spos = $s.length;
	var methodName = "jeashGet" + field.substr(0,1).toUpperCase() + field.substr(1);
	if(o[methodName] != null) {
		var $tmp = o[methodName]();
		$s.pop();
		return $tmp;
	} else {
		var v = null;
		try {
			v = o[field];
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
		}
		$s.pop();
		return v;
	}
	$s.pop();
}
Reflect.setField = function(o,field,value) {
	$s.push("Reflect::setField");
	var $spos = $s.length;
	var methodName = "jeashSet" + field.substr(0,1).toUpperCase() + field.substr(1);
	if(o[methodName] != null) o[methodName](value); else o[field] = value;
	$s.pop();
}
Reflect.callMethod = function(o,func,args) {
	$s.push("Reflect::callMethod");
	var $spos = $s.length;
	var $tmp = func.apply(o,args);
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.fields = function(o) {
	$s.push("Reflect::fields");
	var $spos = $s.length;
	if(o == null) {
		var $tmp = new Array();
		$s.pop();
		return $tmp;
	}
	var a = new Array();
	if(o.hasOwnProperty) {
		
				for(var i in o)
					if( o.hasOwnProperty(i) )
						a.push(i);
			;
	} else {
		var t;
		try {
			t = o.__proto__;
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			t = null;
		}
		if(t != null) o.__proto__ = null;
		
				for(var i in o)
					if( i != "__proto__" )
						a.push(i);
			;
		if(t != null) o.__proto__ = t;
	}
	$s.pop();
	return a;
	$s.pop();
}
Reflect.isFunction = function(f) {
	$s.push("Reflect::isFunction");
	var $spos = $s.length;
	var $tmp = typeof(f) == "function" && f.__name__ == null;
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.compare = function(a,b) {
	$s.push("Reflect::compare");
	var $spos = $s.length;
	var $tmp = a == b?0:a > b?1:-1;
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.compareMethods = function(f1,f2) {
	$s.push("Reflect::compareMethods");
	var $spos = $s.length;
	if(f1 == f2) {
		$s.pop();
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		$s.pop();
		return false;
	}
	var $tmp = f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.isObject = function(v) {
	$s.push("Reflect::isObject");
	var $spos = $s.length;
	if(v == null) {
		$s.pop();
		return false;
	}
	var t = typeof(v);
	var $tmp = t == "string" || t == "object" && !v.__enum__ || t == "function" && v.__name__ != null;
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.deleteField = function(o,f) {
	$s.push("Reflect::deleteField");
	var $spos = $s.length;
	if(!Reflect.hasField(o,f)) {
		$s.pop();
		return false;
	}
	delete(o[f]);
	$s.pop();
	return true;
	$s.pop();
}
Reflect.copy = function(o) {
	$s.push("Reflect::copy");
	var $spos = $s.length;
	var o2 = { };
	var _g = 0, _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		Reflect.setField(o2,f,Reflect.field(o,f));
	}
	$s.pop();
	return o2;
	$s.pop();
}
Reflect.makeVarArgs = function(f) {
	$s.push("Reflect::makeVarArgs");
	var $spos = $s.length;
	var $tmp = function() {
		$s.push("Reflect::makeVarArgs@148");
		var $spos = $s.length;
		var a = new Array();
		var _g1 = 0, _g = arguments.length;
		while(_g1 < _g) {
			var i = _g1++;
			a.push(arguments[i]);
		}
		var $tmp = f(a);
		$s.pop();
		return $tmp;
		$s.pop();
	};
	$s.pop();
	return $tmp;
	$s.pop();
}
Reflect.prototype = {
	__class__: Reflect
}
com.wighawag.remote.RemoteCall = $hxClasses["remote.RemoteCall"] = function() { }
com.wighawag.remote.RemoteCall.__name__ = ["com","wighawag","remote","RemoteCall"];
com.wighawag.remote.RemoteCall.prototype = {
	signedRequestCall: null
	,__class__: com.wighawag.remote.RemoteCall
}
if(!com.wighawag.remote.json) com.wighawag.remote.json = {}
com.wighawag.remote.json.JsonRpc = $hxClasses["remote.json.JsonRpc"] = function(url,playerId,secretKey) {
	$s.push("remote.json.JsonRpc::new");
	var $spos = $s.length;
	this.url = url;
	this.playerId = playerId;
	this.secretKey = secretKey;
	this.requestCounter = 0;
	this.signalers = new de.polygonal.ds.IntHashTable(16);
	$s.pop();
}
com.wighawag.remote.json.JsonRpc.__name__ = ["com","wighawag","remote","json","JsonRpc"];
com.wighawag.remote.json.JsonRpc.__interfaces__ = [com.wighawag.remote.RemoteCall];
com.wighawag.remote.json.JsonRpc.prototype = {
	secretKey: null
	,playerId: null
	,url: null
	,requestCounter: null
	,signalers: null
	,signedRequestCall: function(params) {
		$s.push("remote.json.JsonRpc::signedRequestCall");
		var $spos = $s.length;
		this.requestCounter += 1;
		var parameters = { };
		parameters.playerId = this.playerId;
		parameters.methodName = params[0];
		if(params[1]) parameters.args = params[1];
		var jsonData = new hxjson2.JSONEncoder(parameters).getString();
		var data = ((function($this) {
			var $r;
			if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
			$r = de.polygonal.core.io.Base64._instance;
			return $r;
		}(this)))._encodeStr(jsonData,false,76);
		var signature = haxe.SHA1.encode(this.secretKey + data + this.secretKey);
		var encoded_signature = ((function($this) {
			var $r;
			if(de.polygonal.core.io.Base64._instance == null) de.polygonal.core.io.Base64._instance = new de.polygonal.core.io.Base64();
			$r = de.polygonal.core.io.Base64._instance;
			return $r;
		}(this)))._encodeStr(signature,false,76);
		var request = encoded_signature + "." + data;
		var signaler = new hsl.haxe.DirectSignaler(this);
		this.signalers.set(this.requestCounter,signaler);
		var jsonRpcCall = "{\"id\" : " + this.requestCounter + ", \"method\" : \"signedRequestCall\", \"params\": [\"" + request + "\"] }";
		var http = new haxe.Http(this.url);
		http.setPostData(jsonRpcCall);
		http.onData = this.onResult.$bind(this);
		http.onError = function(msg) {
			$s.push("remote.json.JsonRpc::signedRequestCall@65");
			var $spos = $s.length;
			haxe.Log.trace(msg,{ fileName : "JsonRpc.hx", lineNumber : 66, className : "remote.json.JsonRpc", methodName : "signedRequestCall"});
			$s.pop();
		};
		http.request(true);
		$s.pop();
		return signaler;
		$s.pop();
	}
	,onResult: function(data) {
		$s.push("remote.json.JsonRpc::onResult");
		var $spos = $s.length;
		var result = new hxjson2.JSONDecoder(data,true).getValue();
		if(!Reflect.hasField(result,"id") || result.id == "unknown") haxe.Log.trace("Error " + result,{ fileName : "JsonRpc.hx", lineNumber : 80, className : "remote.json.JsonRpc", methodName : "onResult"}); else {
			var signaler = this.signalers.get(result.id);
			this.signalers.clr(result.id);
			signaler.dispatch(result,null,{ fileName : "JsonRpc.hx", lineNumber : 86, className : "remote.json.JsonRpc", methodName : "onResult"});
		}
		$s.pop();
	}
	,__class__: com.wighawag.remote.json.JsonRpc
}
if(!de.polygonal.core.macro) de.polygonal.core.macro = {}
de.polygonal.core.macro.Assert = $hxClasses["de.polygonal.core.macro.Assert"] = function() { }
de.polygonal.core.macro.Assert.__name__ = ["de","polygonal","core","macro","Assert"];
de.polygonal.core.macro.Assert.prototype = {
	__class__: de.polygonal.core.macro.Assert
}
com.wighawag.game.xjump.world.Jumpy = $hxClasses["com.wighawag.game.xjump.world.Jumpy"] = function(tower,controller) {
	$s.push("com.wighawag.game.xjump.world.Jumpy::new");
	var $spos = $s.length;
	com.wighawag.game.xjump.world.Jumpy.count++;
	this.key = com.wighawag.game.xjump.world.Jumpy.count;
	this.tower = tower;
	this.controller = controller;
	this.area = new jeash.geom.Rectangle(0,0,32,32);
	$s.pop();
}
com.wighawag.game.xjump.world.Jumpy.__name__ = ["com","wighawag","game","xjump","world","Jumpy"];
com.wighawag.game.xjump.world.Jumpy.__interfaces__ = [com.wighawag.game.engine.world.twodimensions.core.Entity2D];
com.wighawag.game.xjump.world.Jumpy.count = null;
com.wighawag.game.xjump.world.Jumpy.prototype = {
	vx: null
	,vy: null
	,key: null
	,jump: null
	,tower: null
	,controller: null
	,state: null
	,stateLifeTime: null
	,type: null
	,update: function(milisecondStep) {
		$s.push("com.wighawag.game.xjump.world.Jumpy::update");
		var $spos = $s.length;
		this.controller.update(milisecondStep);
		var up = this.controller.isKeyDown(38);
		var right = this.controller.isKeyDown(39);
		var left = this.controller.isKeyDown(37);
		var acceleration = 0;
		var isStanding = false;
		this.area.x += Math.round(this.vx / 2);
		var collisionPoint = this.tower.pointOfCollisionWithWalls(this);
		if(collisionPoint != null) {
			this.area.x = collisionPoint.x;
			this.vx = -Math.round(this.vx / 2);
		}
		this.area.y += this.vy;
		if(this.tower.isOnFloor(this)) {
			isStanding = true;
			acceleration = 3;
			this.area.y = Math.round(this.area.y / 16) * 16;
			this.vy = 0;
			if(up) {
				this.jump = Math.round(Math.abs(this.vx) / 4) + 7;
				this.vy = -Math.round(this.jump / 2) - 12;
				isStanding = false;
			}
		} else acceleration = 2;
		if(left) {
			this.vx -= acceleration;
			if(this.vx < -32) this.vx = -32;
		} else if(right) {
			this.vx += acceleration;
			if(this.vx > 32) this.vx = 32;
		} else if(isStanding) {
			if(this.vx < -2) this.vx += 3; else if(this.vx > 2) this.vx -= 3; else this.vx = 0;
		}
		if(!isStanding) {
			if(this.jump > 0) {
				this.vy = -Math.round(this.jump / 2) - 12;
				if(up) this.jump--; else this.jump = 0;
			} else {
				this.vy += 2;
				if(this.vy > 16) this.vy = 16;
			}
		}
		$s.pop();
	}
	,getRecord: function() {
		$s.push("com.wighawag.game.xjump.world.Jumpy::getRecord");
		var $spos = $s.length;
		var $tmp = this.controller.getRecord();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,area: null
	,rotation: null
	,moveTo: function(destination) {
		$s.push("com.wighawag.game.xjump.world.Jumpy::moveTo");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.world.Jumpy
}
com.wighawag.game.xjump.world.Tower = $hxClasses["com.wighawag.game.xjump.world.Tower"] = function(jumpyController) {
	$s.push("com.wighawag.game.xjump.world.Tower::new");
	var $spos = $s.length;
	this.onEntityAdded = new hsl.haxe.DirectSignaler(this);
	this.onEntityRemoved = new hsl.haxe.DirectSignaler(this);
	this._jumpyController = jumpyController;
	$s.pop();
}
com.wighawag.game.xjump.world.Tower.__name__ = ["com","wighawag","game","xjump","world","Tower"];
com.wighawag.game.xjump.world.Tower.__interfaces__ = [com.wighawag.game.engine.world.twodimensions.core.World2D];
com.wighawag.game.xjump.world.Tower.prototype = {
	randomGenerator: null
	,floorPosition: null
	,topRow: null
	,screenRowIndex: null
	,fallingSpeed: null
	,speedIncreaseCounter: null
	,jumpy: null
	,floors: null
	,score: null
	,numUpdate: null
	,scoreNumUpdate: null
	,_jumpyController: null
	,updateInterval: null
	,done: null
	,onEntityAdded: null
	,onEntityRemoved: null
	,init: function(seedList) {
		$s.push("com.wighawag.game.xjump.world.Tower::init");
		var $spos = $s.length;
		this.reset(seedList);
		var wall;
		wall = new com.wighawag.game.xjump.world.Floor(new jeash.geom.Rectangle(0,0,com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH,com.wighawag.game.xjump.world.Tower.HEIGHT * com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT));
		this.onEntityAdded.dispatch(wall,null,{ fileName : "Tower.hx", lineNumber : 75, className : "com.wighawag.game.xjump.world.Tower", methodName : "init"});
		wall = new com.wighawag.game.xjump.world.Floor(new jeash.geom.Rectangle(com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH * com.wighawag.game.xjump.world.Tower.WIDTH - com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH,0,com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH,com.wighawag.game.xjump.world.Tower.HEIGHT * com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT));
		this.onEntityAdded.dispatch(wall,null,{ fileName : "Tower.hx", lineNumber : 78, className : "com.wighawag.game.xjump.world.Tower", methodName : "init"});
		$s.pop();
	}
	,reset: function(seedList) {
		$s.push("com.wighawag.game.xjump.world.Tower::reset");
		var $spos = $s.length;
		this.updateInterval = Math.floor(25.);
		this.randomGenerator = new com.wighawag.game.utils.MultipleSeedIntRandomGenerator(seedList,de.polygonal.core.math.random.ParkMiller);
		this.topRow = com.wighawag.game.xjump.world.Tower.HEIGHT - 4;
		this.screenRowIndex = 0;
		this.floorPosition = Math.floor(com.wighawag.game.xjump.world.Tower.WIDTH / 2);
		this.fallingSpeed = 200;
		this.speedIncreaseCounter = 0;
		this.numUpdate = 0;
		this.scoreNumUpdate = 0;
		this.score = 0;
		this.removeAllFloors();
		this.floors = new Array();
		var _g1 = 0, _g = com.wighawag.game.xjump.world.Tower.HEIGHT;
		while(_g1 < _g) {
			var row = _g1++;
			this.makeFloorOnRow(row);
		}
		if(this.jumpy != null) this.onEntityRemoved.dispatch(this.jumpy,null,{ fileName : "Tower.hx", lineNumber : 108, className : "com.wighawag.game.xjump.world.Tower", methodName : "reset"});
		this._jumpyController.reset();
		this.jumpy = new com.wighawag.game.xjump.world.Jumpy(this,this._jumpyController);
		this.jumpy.area.x = com.wighawag.game.xjump.world.Tower.WIDTH * 8 - com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH;
		this.jumpy.area.y = this.topRow * 16 - com.wighawag.game.xjump.world.Tower.JUMPY_HEIGHT;
		this.onEntityAdded.dispatch(this.jumpy,null,{ fileName : "Tower.hx", lineNumber : 116, className : "com.wighawag.game.xjump.world.Tower", methodName : "reset"});
		$s.pop();
	}
	,makeFloorOnRow: function(rowAsked) {
		$s.push("com.wighawag.game.xjump.world.Tower::makeFloorOnRow");
		var $spos = $s.length;
		var towerRow = this.topRow - rowAsked;
		var floor;
		var floorColumn;
		var floorWidth;
		if(this.getFloorOnRow(rowAsked) != null) this.removeFloorOnRow(rowAsked);
		if(towerRow % 250 == 0) {
			floorColumn = com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH;
			floorWidth = (com.wighawag.game.xjump.world.Tower.WIDTH - 2) * com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH;
		} else if(towerRow % 5 == 0) {
			var floorVector = Math.round((this.randomGenerator.integer(0,2) * 2 - 1) * (this.randomGenerator.integer(0,Math.floor((com.wighawag.game.xjump.world.Tower.WIDTH - 11) / 4)) + Math.floor(com.wighawag.game.xjump.world.Tower.WIDTH - 11) / 4));
			this.floorPosition = (this.floorPosition + floorVector + com.wighawag.game.xjump.world.Tower.WIDTH - 11) % (com.wighawag.game.xjump.world.Tower.WIDTH - 11);
			var x1 = (this.floorPosition + 5 - this.randomGenerator.integer(0,3) - 2) * com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH;
			var x2 = (this.floorPosition + 5 + this.randomGenerator.integer(0,3) + 2) * com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH + 15;
			floorColumn = x1;
			floorWidth = x2 - x1;
		} else {
			this.removeFloorOnRow(rowAsked);
			$s.pop();
			return;
		}
		floor = new com.wighawag.game.xjump.world.Floor(new jeash.geom.Rectangle(floorColumn,rowAsked * com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT,floorWidth,com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT));
		this.setFloorOnRow(rowAsked,floor);
		$s.pop();
	}
	,removeAllFloors: function() {
		$s.push("com.wighawag.game.xjump.world.Tower::removeAllFloors");
		var $spos = $s.length;
		if(this.floors != null) {
			var _g1 = 0, _g = com.wighawag.game.xjump.world.Tower.HEIGHT;
			while(_g1 < _g) {
				var i = _g1++;
				this.removeFloorOnRow(i);
			}
		}
		$s.pop();
	}
	,removeFloorOnRow: function(row) {
		$s.push("com.wighawag.game.xjump.world.Tower::removeFloorOnRow");
		var $spos = $s.length;
		var realRow = this.getRealRow(row);
		var floor = this.floors[realRow];
		if(floor != null) {
			this.onEntityRemoved.dispatch(floor,null,{ fileName : "Tower.hx", lineNumber : 176, className : "com.wighawag.game.xjump.world.Tower", methodName : "removeFloorOnRow"});
			this.floors[realRow] = null;
		}
		$s.pop();
	}
	,setFloorOnRow: function(row,floor) {
		$s.push("com.wighawag.game.xjump.world.Tower::setFloorOnRow");
		var $spos = $s.length;
		var realRow = this.getRealRow(row);
		var oldFloor = this.floors[realRow];
		if(oldFloor != null) this.onEntityRemoved.dispatch(oldFloor,null,{ fileName : "Tower.hx", lineNumber : 188, className : "com.wighawag.game.xjump.world.Tower", methodName : "setFloorOnRow"});
		this.floors[realRow] = floor;
		if(floor != null) this.onEntityAdded.dispatch(floor,null,{ fileName : "Tower.hx", lineNumber : 194, className : "com.wighawag.game.xjump.world.Tower", methodName : "setFloorOnRow"});
		$s.pop();
	}
	,getFloorOnRow: function(row) {
		$s.push("com.wighawag.game.xjump.world.Tower::getFloorOnRow");
		var $spos = $s.length;
		var $tmp = this.floors[this.getRealRow(row)];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,focusArea: null
	,update: function(milisecondStep) {
		$s.push("com.wighawag.game.xjump.world.Tower::update");
		var $spos = $s.length;
		this.numUpdate += 1;
		if(this.fallingSpeed < 5000) this.fallingSpeed++;
		this.speedIncreaseCounter += this.fallingSpeed;
		if(this.speedIncreaseCounter > 20000) {
			this.speedIncreaseCounter -= 20000;
			this.scrollUp();
		}
		if(this.jumpy.area.y < 80) this.scrollUp(); else if(this.jumpy.area.y >= com.wighawag.game.xjump.world.Tower.HEIGHT * com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT) this.done = true;
		this.jumpy.update(milisecondStep);
		$s.pop();
	}
	,getResult: function() {
		$s.push("com.wighawag.game.xjump.world.Tower::getResult");
		var $spos = $s.length;
		var result = new com.wighawag.remote.service.Score(this.score,this.numUpdate * this.updateInterval,this.jumpy.getRecord(),null,"1");
		$s.pop();
		return result;
		$s.pop();
	}
	,pointOfCollisionWithWalls: function(jumpy) {
		$s.push("com.wighawag.game.xjump.world.Tower::pointOfCollisionWithWalls");
		var $spos = $s.length;
		if(jumpy.area.x < com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH) {
			var $tmp = new jeash.geom.Point(com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH,jumpy.area.y);
			$s.pop();
			return $tmp;
		} else if(jumpy.area.x + com.wighawag.game.xjump.world.Tower.JUMPY_WIDTH > com.wighawag.game.xjump.world.Tower.WIDTH * com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH - com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH) {
			var $tmp = new jeash.geom.Point(com.wighawag.game.xjump.world.Tower.WIDTH * com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH - com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH - com.wighawag.game.xjump.world.Tower.JUMPY_WIDTH);
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,isOnFloor: function(jumpy) {
		$s.push("com.wighawag.game.xjump.world.Tower::isOnFloor");
		var $spos = $s.length;
		if(jumpy.vy < 0) {
			$s.pop();
			return false;
		}
		var row = Math.round((jumpy.area.y + 32) / com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT);
		if(row >= com.wighawag.game.xjump.world.Tower.HEIGHT) {
			$s.pop();
			return false;
		}
		var floor = this.getFloorOnRow(row);
		if(floor == null) {
			$s.pop();
			return false;
		}
		var onFloor = floor.area.x < jumpy.area.x + (com.wighawag.game.xjump.world.Tower.JUMPY_WIDTH - 8) && jumpy.area.x + 8 < floor.area.x + floor.area.width;
		if(onFloor) {
			var newScore = Math.round((this.topRow - row) / 5);
			if(this.score < newScore) {
				this.score = newScore;
				this.scoreNumUpdate = this.numUpdate;
			}
		}
		$s.pop();
		return onFloor;
		$s.pop();
	}
	,scrollUp: function() {
		$s.push("com.wighawag.game.xjump.world.Tower::scrollUp");
		var $spos = $s.length;
		var rowWithFloor = this.topRow % 5;
		while(rowWithFloor < com.wighawag.game.xjump.world.Tower.HEIGHT) {
			var floor = this.getFloorOnRow(rowWithFloor);
			floor.area.y += com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT;
			rowWithFloor += 5;
		}
		this.topRow++;
		this.screenRowIndex--;
		if(this.screenRowIndex < 0) this.screenRowIndex = com.wighawag.game.xjump.world.Tower.HEIGHT - 1;
		this.makeFloorOnRow(0);
		this.jumpy.area.y += com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT;
		$s.pop();
	}
	,getRealRow: function(row) {
		$s.push("com.wighawag.game.xjump.world.Tower::getRealRow");
		var $spos = $s.length;
		var $tmp = (row + this.screenRowIndex) % com.wighawag.game.xjump.world.Tower.HEIGHT;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: com.wighawag.game.xjump.world.Tower
}
de.polygonal.ds.DA = $hxClasses["de.polygonal.ds.DA"] = function(reservedSize,maxSize) {
	$s.push("de.polygonal.ds.DA::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(reservedSize == null) reservedSize = 0;
	this._size = 0;
	this._iterator = null;
	this.maxSize = maxSize == -1?2147483647:maxSize;
	if(reservedSize > 0) {
		if(true != reservedSize <= this.maxSize) throw new de.polygonal.ASE("reserved size is greater than allowed size",{ fileName : "DA.hx", lineNumber : 95, className : "de.polygonal.ds.DA", methodName : "new"}); else null;
		this._a = de.polygonal.ds.ArrayUtil.alloc(reservedSize);
	} else this._a = new Array();
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.DA.__name__ = ["de","polygonal","ds","DA"];
de.polygonal.ds.DA.__interfaces__ = [de.polygonal.ds.Collection];
de.polygonal.ds.DA.prototype = {
	key: null
	,_a: null
	,_size: null
	,_iterator: null
	,maxSize: null
	,reuseIterator: null
	,pack: function() {
		$s.push("de.polygonal.ds.DA::pack");
		var $spos = $s.length;
		var s = this._a.length;
		if(s == this._size) {
			$s.pop();
			return;
		}
		var tmp = this._a;
		this._a = de.polygonal.ds.ArrayUtil.alloc(this._size);
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = tmp[i];
		}
		var _g1 = this._size, _g = tmp.length;
		while(_g1 < _g) {
			var i = _g1++;
			tmp[i] = null;
		}
		$s.pop();
	}
	,reserve: function(x) {
		$s.push("de.polygonal.ds.DA::reserve");
		var $spos = $s.length;
		if(this._size == x) {
			$s.pop();
			return;
		}
		var tmp = this._a;
		this._a = de.polygonal.ds.ArrayUtil.alloc(x);
		if(this._size < x) {
			var _g1 = 0, _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[i] = tmp[i];
			}
		}
		$s.pop();
	}
	,trim: function(x) {
		$s.push("de.polygonal.ds.DA::trim");
		var $spos = $s.length;
		if(true != x <= this._size) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("new size > current size (%d/%d)",[x,this._size]),{ fileName : "DA.hx", lineNumber : 150, className : "de.polygonal.ds.DA", methodName : "trim"}); else null;
		this._size = x;
		$s.pop();
	}
	,get: function(i) {
		$s.push("de.polygonal.ds.DA::get");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
		var $tmp = this._a[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getNext: function(i) {
		$s.push("de.polygonal.ds.DA::getNext");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size - 1]),{ fileName : "DA.hx", lineNumber : 179, className : "de.polygonal.ds.DA", methodName : "getNext"}); else null;
		var $tmp = this._a[i + 1 == this._size?0:i + 1];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getPrev: function(i) {
		$s.push("de.polygonal.ds.DA::getPrev");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size - 1]),{ fileName : "DA.hx", lineNumber : 194, className : "de.polygonal.ds.DA", methodName : "getPrev"}); else null;
		var $tmp = this._a[i - 1 == -1?this._size - 1:i - 1];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,set: function(i,x) {
		$s.push("de.polygonal.ds.DA::set");
		var $spos = $s.length;
		if(true != (i >= 0 && i <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
		if(true != i < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
		this._a[i] = x;
		if(i >= this._size) this._size++;
		$s.pop();
	}
	,swp: function(i,j) {
		$s.push("de.polygonal.ds.DA::swp");
		var $spos = $s.length;
		if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "DA.hx", lineNumber : 224, className : "de.polygonal.ds.DA", methodName : "swp"}); else null;
		var tmp = (function($this) {
			var $r;
			if(true != (i >= 0 && i < $this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
			$r = $this._a[i];
			return $r;
		}(this));
		{
			if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "DA.hx", lineNumber : 240, className : "de.polygonal.ds.DA", methodName : "cpy"}); else null;
			{
				if(true != (i >= 0 && i <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
				if(true != i < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
				this._a[i] = (function($this) {
					var $r;
					if(true != (j >= 0 && j < $this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[j,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
					$r = $this._a[j];
					return $r;
				}(this));
				if(i >= this._size) this._size++;
			}
		}
		{
			if(true != (j >= 0 && j <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[j,this._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
			if(true != j < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
			this._a[j] = tmp;
			if(j >= this._size) this._size++;
		}
		$s.pop();
	}
	,cpy: function(i,j) {
		$s.push("de.polygonal.ds.DA::cpy");
		var $spos = $s.length;
		if(true != (i != j)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index equals j index (%d)",[i]),{ fileName : "DA.hx", lineNumber : 240, className : "de.polygonal.ds.DA", methodName : "cpy"}); else null;
		{
			if(true != (i >= 0 && i <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
			if(true != i < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
			this._a[i] = (function($this) {
				var $r;
				if(true != (j >= 0 && j < $this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[j,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
				$r = $this._a[j];
				return $r;
			}(this));
			if(i >= this._size) this._size++;
		}
		$s.pop();
	}
	,front: function() {
		$s.push("de.polygonal.ds.DA::front");
		var $spos = $s.length;
		var $tmp = (function($this) {
			var $r;
			if(true != 0 < $this._size) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[0,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
			$r = $this._a[0];
			return $r;
		}(this));
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,back: function() {
		$s.push("de.polygonal.ds.DA::back");
		var $spos = $s.length;
		var $tmp = this.get(this._size - 1);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,popBack: function() {
		$s.push("de.polygonal.ds.DA::popBack");
		var $spos = $s.length;
		var x = this.get(this._size - 1);
		this._size--;
		$s.pop();
		return x;
		$s.pop();
	}
	,pushBack: function(x) {
		$s.push("de.polygonal.ds.DA::pushBack");
		var $spos = $s.length;
		this.set(this._size,x);
		$s.pop();
	}
	,popFront: function() {
		$s.push("de.polygonal.ds.DA::popFront");
		var $spos = $s.length;
		var $tmp = this.removeAt(0);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,pushFront: function(x) {
		$s.push("de.polygonal.ds.DA::pushFront");
		var $spos = $s.length;
		if(this.maxSize != -1) {
			if(true != this._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 311, className : "de.polygonal.ds.DA", methodName : "pushFront"}); else null;
		}
		this.insertAt(0,x);
		$s.pop();
	}
	,insertAt: function(i,x) {
		$s.push("de.polygonal.ds.DA::insertAt");
		var $spos = $s.length;
		if(true != this._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "DA.hx", lineNumber : 327, className : "de.polygonal.ds.DA", methodName : "insertAt"}); else null;
		if(true != (i >= 0 && i <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "DA.hx", lineNumber : 328, className : "de.polygonal.ds.DA", methodName : "insertAt"}); else null;
		var p = this._size;
		while(p > i) this._a[p--] = this._a[p];
		this._a[i] = x;
		this._size++;
		$s.pop();
	}
	,removeAt: function(i) {
		$s.push("de.polygonal.ds.DA::removeAt");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size]),{ fileName : "DA.hx", lineNumber : 353, className : "de.polygonal.ds.DA", methodName : "removeAt"}); else null;
		var x = this._a[i];
		var k = this._size - 1;
		var p = i;
		while(p < k) this._a[p++] = this._a[p];
		this._size--;
		$s.pop();
		return x;
		$s.pop();
	}
	,swapWithBack: function(i) {
		$s.push("de.polygonal.ds.DA::swapWithBack");
		var $spos = $s.length;
		if(true != (i >= 0 && i < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,this._size]),{ fileName : "DA.hx", lineNumber : 380, className : "de.polygonal.ds.DA", methodName : "swapWithBack"}); else null;
		var s = this._size - 1;
		if(i < s) {
			var tmp = this.get(this._size - 1);
			this._a[s] = this._a[i];
			this._a[i] = tmp;
		}
		$s.pop();
	}
	,removeRange: function(i,n,output) {
		$s.push("de.polygonal.ds.DA::removeRange");
		var $spos = $s.length;
		if(true != (i >= 0 && i <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("i index out of range (%d)",[i]),{ fileName : "DA.hx", lineNumber : 402, className : "de.polygonal.ds.DA", methodName : "removeRange"}); else null;
		if(true != (n > 0 && n <= this._size && i + n <= this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("n out of range (%d)",[n]),{ fileName : "DA.hx", lineNumber : 403, className : "de.polygonal.ds.DA", methodName : "removeRange"}); else null;
		if(output == null) {
			var s = this._size;
			var p = i + n;
			while(p < s) {
				this._a[p - n] = this._a[p];
				p++;
			}
		} else {
			var s = this._size;
			var p = i + n;
			var e, j;
			while(p < s) {
				j = p - n;
				e = this._a[j];
				output.set(output._size,e);
				this._a[j] = this._a[p++];
			}
		}
		this._size -= n;
		$s.pop();
		return output;
		$s.pop();
	}
	,concat: function(x,copy) {
		$s.push("de.polygonal.ds.DA::concat");
		var $spos = $s.length;
		if(copy == null) copy = false;
		if(true != (x != null)) throw new de.polygonal.ASE("x is null",{ fileName : "DA.hx", lineNumber : 445, className : "de.polygonal.ds.DA", methodName : "concat"}); else null;
		if(copy) {
			var copy1 = new de.polygonal.ds.DA();
			copy1._size = this._size + x._size;
			var _g1 = 0, _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				{
					if(true != (i >= 0 && i <= copy1._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,copy1._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
					if(true != i < copy1.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[copy1.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
					copy1._a[i] = this._a[i];
					if(i >= copy1._size) copy1._size++;
				}
			}
			var _g1 = this._size, _g = this._size + x._size;
			while(_g1 < _g) {
				var i = _g1++;
				{
					if(true != (i >= 0 && i <= copy1._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,copy1._size]),{ fileName : "DA.hx", lineNumber : 208, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
					if(true != i < copy1.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[copy1.maxSize]),{ fileName : "DA.hx", lineNumber : 209, className : "de.polygonal.ds.DA", methodName : "set"}); else null;
					copy1._a[i] = x.get(i - this._size);
					if(i >= copy1._size) copy1._size++;
				}
			}
			$s.pop();
			return copy1;
		} else {
			if(true != (x != this)) throw new de.polygonal.ASE("x equals this",{ fileName : "DA.hx", lineNumber : 459, className : "de.polygonal.ds.DA", methodName : "concat"}); else null;
			var j = this._size;
			this._size += x._size;
			var _g1 = 0, _g = x._size;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[j++] = (function($this) {
					var $r;
					if(true != (i >= 0 && i < x._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,x._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
					$r = x._a[i];
					return $r;
				}(this));
			}
			$s.pop();
			return this;
		}
		$s.pop();
	}
	,indexOf: function(x,from,binarySearch,comparator) {
		$s.push("de.polygonal.ds.DA::indexOf");
		var $spos = $s.length;
		if(binarySearch == null) binarySearch = false;
		if(from == null) from = 0;
		if(this._size == 0) {
			$s.pop();
			return -1;
		} else {
			if(true != (from >= 0 && from < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("from index out of range (%d)",[from]),{ fileName : "DA.hx", lineNumber : 487, className : "de.polygonal.ds.DA", methodName : "indexOf"}); else null;
			if(binarySearch) {
				if(comparator != null) {
					var $tmp = de.polygonal.ds.ArrayUtil.bsearchComparator(this._a,x,from,this._size - 1,comparator);
					$s.pop();
					return $tmp;
				} else {
					if(true != Std["is"](x,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[x]),{ fileName : "DA.hx", lineNumber : 497, className : "de.polygonal.ds.DA", methodName : "indexOf"}); else null;
					var k = this._size;
					var l = from, m, h = k;
					while(l < h) {
						m = l + (h - l >> 1);
						if(true != Std["is"](this._a[m],de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[this._a[m]]),{ fileName : "DA.hx", lineNumber : 507, className : "de.polygonal.ds.DA", methodName : "indexOf"}); else null;
						if(this._a[m].compare(x) < 0) l = m + 1; else h = m;
					}
					if(true != Std["is"](this._a[l],de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[this._a[l]]),{ fileName : "DA.hx", lineNumber : 517, className : "de.polygonal.ds.DA", methodName : "indexOf"}); else null;
					var $tmp = l <= k && this._a[l].compare(x) == 0?l:-l;
					$s.pop();
					return $tmp;
				}
			} else {
				var i = from;
				var j = -1;
				var k = this._size - 1;
				do if(this._a[i] == x) {
					j = i;
					break;
				} while(i++ < k);
				$s.pop();
				return j;
			}
		}
		$s.pop();
	}
	,lastIndexOf: function(x,from) {
		$s.push("de.polygonal.ds.DA::lastIndexOf");
		var $spos = $s.length;
		if(from == null) from = -1;
		if(this._size == 0) {
			$s.pop();
			return -1;
		} else {
			if(from < 0) from = this._size + from;
			if(true != (from >= 0 && from < this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("from index out of range (%d)",[from]),{ fileName : "DA.hx", lineNumber : 557, className : "de.polygonal.ds.DA", methodName : "lastIndexOf"}); else null;
			var j = -1;
			var i = from;
			do if(this._a[i] == x) {
				j = i;
				break;
			} while(i-- > 0);
			$s.pop();
			return j;
		}
		$s.pop();
	}
	,reverse: function() {
		$s.push("de.polygonal.ds.DA::reverse");
		var $spos = $s.length;
		if(this._a.length > this._size) this._a = de.polygonal.ds.ArrayUtil.shrink(this._a,this._size);
		this._a.reverse();
		$s.pop();
	}
	,assign: function(C,args,n) {
		$s.push("de.polygonal.ds.DA::assign");
		var $spos = $s.length;
		if(n == null) n = 0;
		if(true != n >= 0) throw new de.polygonal.ASE("n >= 0",{ fileName : "DA.hx", lineNumber : 598, className : "de.polygonal.ds.DA", methodName : "assign"}); else null;
		if(n > 0) {
			if(true != n <= this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("n out of range (%d)",[n]),{ fileName : "DA.hx", lineNumber : 604, className : "de.polygonal.ds.DA", methodName : "assign"}); else null;
			this._size = n;
		} else n = this._size;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this._a[i] = de.polygonal.core.util.Instance.create(C,args);
		}
		$s.pop();
	}
	,fill: function(x,n) {
		$s.push("de.polygonal.ds.DA::fill");
		var $spos = $s.length;
		if(n == null) n = 0;
		if(true != n >= 0) throw new de.polygonal.ASE("n >= 0",{ fileName : "DA.hx", lineNumber : 624, className : "de.polygonal.ds.DA", methodName : "fill"}); else null;
		if(n > 0) {
			if(true != n <= this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("n out of range (%d)",[n]),{ fileName : "DA.hx", lineNumber : 630, className : "de.polygonal.ds.DA", methodName : "fill"}); else null;
			this._size = n;
		} else n = this._size;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this._a[i] = x;
		}
		$s.pop();
	}
	,memmove: function(destination,source,n) {
		$s.push("de.polygonal.ds.DA::memmove");
		var $spos = $s.length;
		if(true != (destination >= 0 && source >= 0 && n >= 0)) throw new de.polygonal.ASE("destination >= 0 && source >= 0 && n >= 0",{ fileName : "DA.hx", lineNumber : 652, className : "de.polygonal.ds.DA", methodName : "memmove"}); else null;
		if(true != source < this._size) throw new de.polygonal.ASE("source < size()",{ fileName : "DA.hx", lineNumber : 653, className : "de.polygonal.ds.DA", methodName : "memmove"}); else null;
		if(true != destination + n <= this._size) throw new de.polygonal.ASE("destination + n <= size()",{ fileName : "DA.hx", lineNumber : 654, className : "de.polygonal.ds.DA", methodName : "memmove"}); else null;
		if(true != n <= this._size) throw new de.polygonal.ASE("n <= size()",{ fileName : "DA.hx", lineNumber : 655, className : "de.polygonal.ds.DA", methodName : "memmove"}); else null;
		if(source == destination) {
			$s.pop();
			return;
		} else if(source <= destination) {
			var i = source + n;
			var j = destination + n;
			var _g = 0;
			while(_g < n) {
				var k = _g++;
				i--;
				j--;
				this._a[j] = this._a[i];
			}
		} else {
			var i = source;
			var j = destination;
			var _g = 0;
			while(_g < n) {
				var k = _g++;
				this._a[j] = this._a[i];
				i++;
				j++;
			}
		}
		$s.pop();
	}
	,join: function(x) {
		$s.push("de.polygonal.ds.DA::join");
		var $spos = $s.length;
		if(this._size == 0) {
			$s.pop();
			return "";
		}
		if(this._size == 1) {
			var $tmp = Std.string((function($this) {
				var $r;
				if(true != 0 < $this._size) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[0,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
				$r = $this._a[0];
				return $r;
			}(this)));
			$s.pop();
			return $tmp;
		}
		var s = Std.string((function($this) {
			var $r;
			if(true != 0 < $this._size) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[0,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
			$r = $this._a[0];
			return $r;
		}(this))) + x;
		var _g1 = 1, _g = this._size - 1;
		while(_g1 < _g) {
			var i = _g1++;
			s += Std.string((function($this) {
				var $r;
				if(true != (i >= 0 && i < $this._size)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("the index %d is out of range %d",[i,$this._size - 1]),{ fileName : "DA.hx", lineNumber : 164, className : "de.polygonal.ds.DA", methodName : "get"}); else null;
				$r = $this._a[i];
				return $r;
			}(this)));
			s += x;
		}
		s += Std.string(this.get(this._size - 1));
		$s.pop();
		return s;
		$s.pop();
	}
	,sort: function(compare,useInsertionSort,first,count) {
		$s.push("de.polygonal.ds.DA::sort");
		var $spos = $s.length;
		if(count == null) count = 0;
		if(first == null) first = 0;
		if(useInsertionSort == null) useInsertionSort = false;
		if(this._size > 1) {
			if(true != (first >= 0 && first <= this._size - 1 && first + count <= this._size)) throw new de.polygonal.ASE("first out of bound",{ fileName : "DA.hx", lineNumber : 720, className : "de.polygonal.ds.DA", methodName : "sort"}); else null;
			if(true != (count >= 0 && count <= this._size)) throw new de.polygonal.ASE("count out of bound",{ fileName : "DA.hx", lineNumber : 721, className : "de.polygonal.ds.DA", methodName : "sort"}); else null;
			if(count == 0) count = this._size;
			if(compare == null) {
				if(useInsertionSort) this._insertionSortComparable(first,count); else this._quickSortComparable(first,count);
			} else if(useInsertionSort) this._insertionSort(first,count,compare); else if(first == 0 && count == this._size) {
				de.polygonal.ds.ArrayUtil.shrink(this._a,this._size);
				this._a.sort(compare);
			} else this._quickSort(first,count,compare);
		}
		$s.pop();
	}
	,inRange: function(i) {
		$s.push("de.polygonal.ds.DA::inRange");
		var $spos = $s.length;
		var $tmp = i >= 0 && i <= this._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getArray: function() {
		$s.push("de.polygonal.ds.DA::getArray");
		var $spos = $s.length;
		var $tmp = this._a;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.DA::free");
		var $spos = $s.length;
		var NULL = null;
		var _g1 = 0, _g = this._a.length;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = NULL;
		}
		this._a = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(x) {
		$s.push("de.polygonal.ds.DA::contains");
		var $spos = $s.length;
		var found = false;
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._a[i] == x) {
				found = true;
				break;
			}
		}
		$s.pop();
		return found;
		$s.pop();
	}
	,remove: function(x) {
		$s.push("de.polygonal.ds.DA::remove");
		var $spos = $s.length;
		if(this._size == 0) {
			$s.pop();
			return false;
		}
		var i = 0;
		var s = this._size;
		while(i < s) {
			if(this._a[i] == x) {
				s--;
				var p = i;
				while(p < s) {
					this._a[p] = this._a[p + 1];
					++p;
				}
				continue;
			}
			i++;
		}
		var found = this._size - s != 0;
		this._size = s;
		$s.pop();
		return found;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.DA::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		if(purge) {
			var NULL = null;
			var _g1 = 0, _g = this._a.length;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[i] = NULL;
			}
		}
		this._size = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.DA::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.DAIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.DAIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.DA::size");
		var $spos = $s.length;
		var $tmp = this._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.DA::isEmpty");
		var $spos = $s.length;
		var $tmp = this._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.DA::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._size);
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			a[i] = this._a[i];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.DA::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._size);
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			a.set(a._size,this._a[i]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.DA::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var copy = new de.polygonal.ds.DA(this._size,this.maxSize);
		copy._size = this._size;
		if(assign) {
			var _g1 = 0, _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				copy._a[i] = this._a[i];
			}
		} else if(copier == null) {
			var c = null;
			var _g1 = 0, _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				if(true != Std["is"](this._a[i],de.polygonal.ds.Cloneable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Cloneable (%s)",[this._a[i]]),{ fileName : "DA.hx", lineNumber : 947, className : "de.polygonal.ds.DA", methodName : "clone"}); else null;
				c = this._a[i];
				copy._a[i] = c.clone();
			}
		} else {
			var _g1 = 0, _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				copy._a[i] = copier(this._a[i]);
			}
		}
		$s.pop();
		return copy;
		$s.pop();
	}
	,shuffle: function(rval) {
		$s.push("de.polygonal.ds.DA::shuffle");
		var $spos = $s.length;
		var s = this._size;
		if(rval == null) {
			var m = Math;
			while(--s > 1) {
				var i = Std["int"](m.random() * s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		} else {
			if(true != rval._size >= this._size) throw new de.polygonal.ASE("insufficient random values",{ fileName : "DA.hx", lineNumber : 987, className : "de.polygonal.ds.DA", methodName : "shuffle"}); else null;
			var j = 0;
			while(--s > 1) {
				var i = Std["int"](rval.get(j++) * s);
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.DA::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{DA, size: %d}",[this._size]);
		if(this._size == 0) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var _g1 = 0, _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			s += de.polygonal.core.fmt.Sprintf.format("  %4d -> %s\n",[i,Std.string(this._a[i])]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,_quickSort: function(first,k,cmp) {
		$s.push("de.polygonal.ds.DA::_quickSort");
		var $spos = $s.length;
		var last = first + k - 1;
		var lo = first;
		var hi = last;
		if(k > 1) {
			var i0 = first;
			var i1 = i0 + (k >> 1);
			var i2 = i0 + k - 1;
			var t0 = this._a[i0];
			var t1 = this._a[i1];
			var t2 = this._a[i2];
			var mid;
			var t = cmp(t0,t2);
			if(t < 0 && cmp(t0,t1) < 0) mid = cmp(t1,t2) < 0?i1:i2; else if(cmp(t1,t0) < 0 && cmp(t1,t2) < 0) mid = t < 0?i0:i2; else mid = cmp(t2,t0) < 0?i1:i0;
			var pivot = this._a[mid];
			this._a[mid] = this._a[first];
			while(lo < hi) {
				while(cmp(pivot,this._a[hi]) < 0 && lo < hi) hi--;
				if(hi != lo) {
					this._a[lo] = this._a[hi];
					lo++;
				}
				while(cmp(pivot,this._a[lo]) > 0 && lo < hi) lo++;
				if(hi != lo) {
					this._a[hi] = this._a[lo];
					hi--;
				}
			}
			this._a[lo] = pivot;
			this._quickSort(first,lo - first,cmp);
			this._quickSort(lo + 1,last - lo,cmp);
		}
		$s.pop();
	}
	,_quickSortComparable: function(first,k) {
		$s.push("de.polygonal.ds.DA::_quickSortComparable");
		var $spos = $s.length;
		var last = first + k - 1;
		var lo = first;
		var hi = last;
		if(k > 1) {
			var i0 = first;
			var i1 = i0 + (k >> 1);
			var i2 = i0 + k - 1;
			var t0 = this._a[i0];
			var t1 = this._a[i1];
			var t2 = this._a[i2];
			if(true != Std["is"](t0,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(t0)]),{ fileName : "DA.hx", lineNumber : 1098, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
			if(true != Std["is"](t1,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(t1)]),{ fileName : "DA.hx", lineNumber : 1099, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
			if(true != Std["is"](t2,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(t2)]),{ fileName : "DA.hx", lineNumber : 1100, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
			var mid;
			var t = t0.compare(t2);
			if(t < 0 && t0.compare(t1) < 0) mid = t1.compare(t2) < 0?i1:i2; else if(t0.compare(t1) < 0 && t1.compare(t2) < 0) mid = t < 0?i0:i2; else mid = t2.compare(t0) < 0?i1:i0;
			var pivot = this._a[mid];
			this._a[mid] = this._a[first];
			while(lo < hi) {
				if(true != Std["is"](this._a[lo],de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(this._a[lo])]),{ fileName : "DA.hx", lineNumber : 1121, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
				if(true != Std["is"](this._a[hi],de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(this._a[hi])]),{ fileName : "DA.hx", lineNumber : 1122, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
				if(true != Std["is"](pivot,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("element is not of type Comparable (%s)",[Std.string(pivot)]),{ fileName : "DA.hx", lineNumber : 1123, className : "de.polygonal.ds.DA", methodName : "_quickSortComparable"}); else null;
				while(pivot.compare(this._a[hi]) < 0 && lo < hi) hi--;
				if(hi != lo) {
					this._a[lo] = this._a[hi];
					lo++;
				}
				while(pivot.compare(this._a[lo]) > 0 && lo < hi) lo++;
				if(hi != lo) {
					this._a[hi] = this._a[lo];
					hi--;
				}
			}
			this._a[lo] = pivot;
			this._quickSortComparable(first,lo - first);
			this._quickSortComparable(lo + 1,last - lo);
		}
		$s.pop();
	}
	,_insertionSort: function(first,k,cmp) {
		$s.push("de.polygonal.ds.DA::_insertionSort");
		var $spos = $s.length;
		var _g1 = first + 1, _g = first + k;
		while(_g1 < _g) {
			var i = _g1++;
			var x = this._a[i];
			var j = i;
			while(j > first) {
				var y = this._a[j - 1];
				if(cmp(y,x) > 0) {
					this._a[j] = y;
					j--;
				} else break;
			}
			this._a[j] = x;
		}
		$s.pop();
	}
	,_insertionSortComparable: function(first,k) {
		$s.push("de.polygonal.ds.DA::_insertionSortComparable");
		var $spos = $s.length;
		var _g1 = first + 1, _g = first + k;
		while(_g1 < _g) {
			var i = _g1++;
			var x = this._a[i];
			if(true != Std["is"](x,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE("element is not of type Comparable",{ fileName : "DA.hx", lineNumber : 1173, className : "de.polygonal.ds.DA", methodName : "_insertionSortComparable"}); else null;
			var j = i;
			while(j > first) {
				var y = this._a[j - 1];
				if(true != Std["is"](y,de.polygonal.ds.Comparable)) throw new de.polygonal.ASE("element is not of type Comparable",{ fileName : "DA.hx", lineNumber : 1182, className : "de.polygonal.ds.DA", methodName : "_insertionSortComparable"}); else null;
				if(y.compare(x) > 0) {
					this._a[j] = y;
					j--;
				} else break;
			}
			this._a[j] = x;
		}
		$s.pop();
	}
	,__get: function(i) {
		$s.push("de.polygonal.ds.DA::__get");
		var $spos = $s.length;
		var $tmp = this._a[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__set: function(i,x) {
		$s.push("de.polygonal.ds.DA::__set");
		var $spos = $s.length;
		this._a[i] = x;
		$s.pop();
	}
	,__cpy: function(i,j) {
		$s.push("de.polygonal.ds.DA::__cpy");
		var $spos = $s.length;
		this._a[i] = this._a[j];
		$s.pop();
	}
	,__class__: de.polygonal.ds.DA
}
de.polygonal.ds.DAIterator = $hxClasses["de.polygonal.ds.DAIterator"] = function(f) {
	$s.push("de.polygonal.ds.DAIterator::new");
	var $spos = $s.length;
	this._f = f;
	{
		this._a = this._f._a;
		this._s = this._f._size;
		this._i = 0;
		this;
	}
	$s.pop();
}
de.polygonal.ds.DAIterator.__name__ = ["de","polygonal","ds","DAIterator"];
de.polygonal.ds.DAIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.DAIterator.prototype = {
	_f: null
	,_a: null
	,_i: null
	,_s: null
	,reset: function() {
		$s.push("de.polygonal.ds.DAIterator::reset");
		var $spos = $s.length;
		this._a = this._f._a;
		this._s = this._f._size;
		this._i = 0;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.DAIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.DAIterator::next");
		var $spos = $s.length;
		var $tmp = this._a[this._i++];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.DAIterator::remove");
		var $spos = $s.length;
		if(true != this._i > 0) throw new de.polygonal.ASE("call next() before removing an element",{ fileName : "DA.hx", lineNumber : 1239, className : "de.polygonal.ds.DAIterator", methodName : "remove"}); else null;
		this._f.removeAt(--this._i);
		this._s--;
		$s.pop();
	}
	,__a: function(f) {
		$s.push("de.polygonal.ds.DAIterator::__a");
		var $spos = $s.length;
		var $tmp = f._a;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__size: function(f) {
		$s.push("de.polygonal.ds.DAIterator::__size");
		var $spos = $s.length;
		var $tmp = f._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.DAIterator
}
jeash.text.FontType = $hxClasses["jeash.text.FontType"] = { __ename__ : ["jeash","text","FontType"], __constructs__ : ["EMBEDDED","DEVICE"] }
jeash.text.FontType.EMBEDDED = ["EMBEDDED",0];
jeash.text.FontType.EMBEDDED.toString = $estr;
jeash.text.FontType.EMBEDDED.__enum__ = jeash.text.FontType;
jeash.text.FontType.DEVICE = ["DEVICE",1];
jeash.text.FontType.DEVICE.toString = $estr;
jeash.text.FontType.DEVICE.__enum__ = jeash.text.FontType;
com.wighawag.remote.service.Alternative = $hxClasses["remote.service.Alternative"] = function(primary,secondary) {
	$s.push("remote.service.Alternative::new");
	var $spos = $s.length;
	if(primary != null) {
		this.primary = primary;
		this.primaryAvailable = true;
	} else if(secondary != null) this.secondary = secondary; else throw new jeash.errors.Error("if primary not set secondary need to be set");
	$s.pop();
}
com.wighawag.remote.service.Alternative.__name__ = ["com","wighawag","remote","service","Alternative"];
com.wighawag.remote.service.Alternative.prototype = {
	primaryAvailable: null
	,primary: null
	,secondary: null
	,__class__: com.wighawag.remote.service.Alternative
}
com.wighawag.remote.service.RetryMessage = $hxClasses["remote.service.RetryMessage"] = function(text,retry) {
	$s.push("remote.service.RetryMessage::new");
	var $spos = $s.length;
	this.text = text;
	this.retry = retry;
	$s.pop();
}
com.wighawag.remote.service.RetryMessage.__name__ = ["com","wighawag","remote","service","RetryMessage"];
com.wighawag.remote.service.RetryMessage.prototype = {
	retry: null
	,text: null
	,__class__: com.wighawag.remote.service.RetryMessage
}
nme.net.URLVariables = $hxClasses["nme.net.URLVariables"] = function(inEncoded) {
	$s.push("nme.net.URLVariables::new");
	var $spos = $s.length;
	if(inEncoded != null) this.decode(inEncoded);
	$s.pop();
}
nme.net.URLVariables.__name__ = ["nme","net","URLVariables"];
nme.net.URLVariables.prototype = {
	decode: function(inVars) {
		$s.push("nme.net.URLVariables::decode");
		var $spos = $s.length;
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			Reflect.deleteField(this,f);
		}
		var fields1 = inVars.split(";").join("&").split("&");
		var _g = 0;
		while(_g < fields1.length) {
			var f = fields1[_g];
			++_g;
			var eq = f.indexOf("=");
			if(eq > 0) Reflect.setField(this,StringTools.urlDecode(f.substr(0,eq)),StringTools.urlDecode(f.substr(eq + 1))); else if(eq != 0) Reflect.setField(this,StringTools.urlDecode(f),"");
		}
		$s.pop();
	}
	,toString: function() {
		$s.push("nme.net.URLVariables::toString");
		var $spos = $s.length;
		var result = new Array();
		var fields = Reflect.fields(this);
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			result.push(StringTools.urlEncode(f) + "=" + StringTools.urlEncode(Reflect.field(this,f)));
		}
		var $tmp = result.join("&");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: nme.net.URLVariables
}
hxjson2.JSONTokenType = $hxClasses["hxjson2.JSONTokenType"] = { __ename__ : ["hxjson2","JSONTokenType"], __constructs__ : ["tUNKNOWN","tCOMMA","tLEFT_BRACE","tRIGHT_BRACE","tLEFT_BRACKET","tRIGHT_BRACKET","tCOLON","tTRUE","tFALSE","tNULL","tSTRING","tNUMBER","tNAN"] }
hxjson2.JSONTokenType.tUNKNOWN = ["tUNKNOWN",0];
hxjson2.JSONTokenType.tUNKNOWN.toString = $estr;
hxjson2.JSONTokenType.tUNKNOWN.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tCOMMA = ["tCOMMA",1];
hxjson2.JSONTokenType.tCOMMA.toString = $estr;
hxjson2.JSONTokenType.tCOMMA.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tLEFT_BRACE = ["tLEFT_BRACE",2];
hxjson2.JSONTokenType.tLEFT_BRACE.toString = $estr;
hxjson2.JSONTokenType.tLEFT_BRACE.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tRIGHT_BRACE = ["tRIGHT_BRACE",3];
hxjson2.JSONTokenType.tRIGHT_BRACE.toString = $estr;
hxjson2.JSONTokenType.tRIGHT_BRACE.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tLEFT_BRACKET = ["tLEFT_BRACKET",4];
hxjson2.JSONTokenType.tLEFT_BRACKET.toString = $estr;
hxjson2.JSONTokenType.tLEFT_BRACKET.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tRIGHT_BRACKET = ["tRIGHT_BRACKET",5];
hxjson2.JSONTokenType.tRIGHT_BRACKET.toString = $estr;
hxjson2.JSONTokenType.tRIGHT_BRACKET.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tCOLON = ["tCOLON",6];
hxjson2.JSONTokenType.tCOLON.toString = $estr;
hxjson2.JSONTokenType.tCOLON.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tTRUE = ["tTRUE",7];
hxjson2.JSONTokenType.tTRUE.toString = $estr;
hxjson2.JSONTokenType.tTRUE.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tFALSE = ["tFALSE",8];
hxjson2.JSONTokenType.tFALSE.toString = $estr;
hxjson2.JSONTokenType.tFALSE.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tNULL = ["tNULL",9];
hxjson2.JSONTokenType.tNULL.toString = $estr;
hxjson2.JSONTokenType.tNULL.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tSTRING = ["tSTRING",10];
hxjson2.JSONTokenType.tSTRING.toString = $estr;
hxjson2.JSONTokenType.tSTRING.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tNUMBER = ["tNUMBER",11];
hxjson2.JSONTokenType.tNUMBER.toString = $estr;
hxjson2.JSONTokenType.tNUMBER.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONTokenType.tNAN = ["tNAN",12];
hxjson2.JSONTokenType.tNAN.toString = $estr;
hxjson2.JSONTokenType.tNAN.__enum__ = hxjson2.JSONTokenType;
hxjson2.JSONDecoder = $hxClasses["hxjson2.JSONDecoder"] = function(s,strict) {
	$s.push("hxjson2.JSONDecoder::new");
	var $spos = $s.length;
	this.strict = strict;
	this.tokenizer = new hxjson2.JSONTokenizer(s,strict);
	this.nextToken();
	this.value = this.parseValue();
	if(strict && this.nextToken() != null) this.tokenizer.parseError("Unexpected characters left in input stream!");
	$s.pop();
}
hxjson2.JSONDecoder.__name__ = ["hxjson2","JSONDecoder"];
hxjson2.JSONDecoder.prototype = {
	strict: null
	,value: null
	,tokenizer: null
	,token: null
	,getValue: function() {
		$s.push("hxjson2.JSONDecoder::getValue");
		var $spos = $s.length;
		var $tmp = this.value;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,nextToken: function() {
		$s.push("hxjson2.JSONDecoder::nextToken");
		var $spos = $s.length;
		var $tmp = this.token = this.tokenizer.getNextToken();
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,parseArray: function() {
		$s.push("hxjson2.JSONDecoder::parseArray");
		var $spos = $s.length;
		var a = new Array();
		this.nextToken();
		if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACKET) {
			$s.pop();
			return a;
		} else if(!this.strict && this.token.type == hxjson2.JSONTokenType.tCOMMA) {
			this.nextToken();
			if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACKET) {
				$s.pop();
				return a;
			} else this.tokenizer.parseError("Leading commas are not supported.  Expecting ']' but found " + this.token.value);
		}
		while(true) {
			a.push(this.parseValue());
			this.nextToken();
			if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACKET) {
				$s.pop();
				return a;
			} else if(this.token.type == hxjson2.JSONTokenType.tCOMMA) {
				this.nextToken();
				if(!this.strict) {
					if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACKET) {
						$s.pop();
						return a;
					}
				}
			} else this.tokenizer.parseError("Expecting ] or , but found " + this.token.value);
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,parseObject: function() {
		$s.push("hxjson2.JSONDecoder::parseObject");
		var $spos = $s.length;
		var o = { };
		var key;
		this.nextToken();
		if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACE) {
			$s.pop();
			return o;
		} else if(!this.strict && this.token.type == hxjson2.JSONTokenType.tCOMMA) {
			this.nextToken();
			if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACE) {
				$s.pop();
				return o;
			} else this.tokenizer.parseError("Leading commas are not supported.  Expecting '}' but found " + this.token.value);
		}
		while(true) if(this.token.type == hxjson2.JSONTokenType.tSTRING) {
			key = Std.string(this.token.value);
			this.nextToken();
			if(this.token.type == hxjson2.JSONTokenType.tCOLON) {
				this.nextToken();
				Reflect.setField(o,key,this.parseValue());
				this.nextToken();
				if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACE) {
					$s.pop();
					return o;
				} else if(this.token.type == hxjson2.JSONTokenType.tCOMMA) {
					this.nextToken();
					if(!this.strict) {
						if(this.token.type == hxjson2.JSONTokenType.tRIGHT_BRACE) {
							$s.pop();
							return o;
						}
					}
				} else this.tokenizer.parseError("Expecting } or , but found " + this.token.value);
			} else this.tokenizer.parseError("Expecting : but found " + this.token.value);
		} else this.tokenizer.parseError("Expecting string but found " + this.token.value);
		$s.pop();
		return null;
		$s.pop();
	}
	,parseValue: function() {
		$s.push("hxjson2.JSONDecoder::parseValue");
		var $spos = $s.length;
		if(this.token == null) this.tokenizer.parseError("Unexpected end of input");
		switch( (this.token.type)[1] ) {
		case 2:
			var $tmp = this.parseObject();
			$s.pop();
			return $tmp;
		case 4:
			var $tmp = this.parseArray();
			$s.pop();
			return $tmp;
		case 10:
			var $tmp = this.token.value;
			$s.pop();
			return $tmp;
		case 11:
			var $tmp = this.token.value;
			$s.pop();
			return $tmp;
		case 7:
			$s.pop();
			return true;
		case 8:
			$s.pop();
			return false;
		case 9:
			$s.pop();
			return null;
		case 12:
			if(!this.strict) {
				var $tmp = this.token.value;
				$s.pop();
				return $tmp;
			} else this.tokenizer.parseError("Unexpected " + this.token.value);
			break;
		default:
			this.tokenizer.parseError("Unexpected " + this.token.value);
		}
		$s.pop();
		return null;
		$s.pop();
	}
	,__class__: hxjson2.JSONDecoder
}
de.polygonal.ds.HashKey = $hxClasses["de.polygonal.ds.HashKey"] = function() { }
de.polygonal.ds.HashKey.__name__ = ["de","polygonal","ds","HashKey"];
de.polygonal.ds.HashKey.next = function() {
	$s.push("de.polygonal.ds.HashKey::next");
	var $spos = $s.length;
	var $tmp = de.polygonal.ds.HashKey._counter++;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.ds.HashKey.prototype = {
	__class__: de.polygonal.ds.HashKey
}
hxjson2.JSONToken = $hxClasses["hxjson2.JSONToken"] = function(type,value) {
	$s.push("hxjson2.JSONToken::new");
	var $spos = $s.length;
	this.type = type == null?hxjson2.JSONTokenType.tUNKNOWN:type;
	this.value = value;
	$s.pop();
}
hxjson2.JSONToken.__name__ = ["hxjson2","JSONToken"];
hxjson2.JSONToken.prototype = {
	type: null
	,value: null
	,__class__: hxjson2.JSONToken
}
de.polygonal.ds.IntIntHashTable = $hxClasses["de.polygonal.ds.IntIntHashTable"] = function(slotCount,capacity,isResizable,maxSize) {
	$s.push("de.polygonal.ds.IntIntHashTable::new");
	var $spos = $s.length;
	if(maxSize == null) maxSize = -1;
	if(isResizable == null) isResizable = true;
	if(capacity == null) capacity = -1;
	if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("slotCount is not a power of 2",{ fileName : "IntIntHashTable.hx", lineNumber : 180, className : "de.polygonal.ds.IntIntHashTable", methodName : "new"}); else null;
	if(capacity == -1) capacity = slotCount; else {
		if(true != capacity >= 2) throw new de.polygonal.ASE("minimum capacity is 2",{ fileName : "IntIntHashTable.hx", lineNumber : 188, className : "de.polygonal.ds.IntIntHashTable", methodName : "new"}); else null;
		if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("capacity is not a power of 2",{ fileName : "IntIntHashTable.hx", lineNumber : 189, className : "de.polygonal.ds.IntIntHashTable", methodName : "new"}); else null;
	}
	this._isResizable = isResizable;
	this._free = 0;
	this._capacity = capacity;
	this._size = 0;
	this._mask = slotCount - 1;
	this._sizeLevel = 0;
	this._iterator = null;
	this.maxSize = maxSize == -1?2147483647:maxSize;
	this._hash = de.polygonal.ds.ArrayUtil.alloc(slotCount);
	de.polygonal.ds.ArrayUtil.fill(this._hash,-1,slotCount);
	this._data = de.polygonal.ds.ArrayUtil.alloc(this._capacity * 3);
	this._next = de.polygonal.ds.ArrayUtil.alloc(this._capacity);
	var j = 2;
	var _g = 0;
	while(_g < capacity) {
		var i = _g++;
		this._data[j - 1] = -2147483648;
		this._data[j] = -1;
		j += 3;
	}
	var _g1 = 0, _g = this._capacity - 1;
	while(_g1 < _g) {
		var i = _g1++;
		this._next[i] = i + 1;
	}
	this._next[this._capacity - 1] = -1;
	this.key = de.polygonal.ds.HashKey._counter++;
	this.reuseIterator = false;
	$s.pop();
}
de.polygonal.ds.IntIntHashTable.__name__ = ["de","polygonal","ds","IntIntHashTable"];
de.polygonal.ds.IntIntHashTable.__interfaces__ = [de.polygonal.ds.Map];
de.polygonal.ds.IntIntHashTable.prototype = {
	key: null
	,maxSize: null
	,reuseIterator: null
	,_isResizable: null
	,_hash: null
	,_data: null
	,_next: null
	,_mask: null
	,_free: null
	,_capacity: null
	,_size: null
	,_sizeLevel: null
	,_iterator: null
	,loadFactor: null
	,_loadFactorGetter: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::_loadFactorGetter");
		var $spos = $s.length;
		var $tmp = this._size / (this._mask + 1);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,slotCount: null
	,_slotCountGetter: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::_slotCountGetter");
		var $spos = $s.length;
		var $tmp = this._mask + 1;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,capacity: null
	,_capacityGetter: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::_capacityGetter");
		var $spos = $s.length;
		var $tmp = this._capacity;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,getCollisionCount: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::getCollisionCount");
		var $spos = $s.length;
		var c = 0, j;
		var _g1 = 0, _g = this._mask + 1;
		while(_g1 < _g) {
			var i = _g1++;
			j = this._hash[i];
			if(j == -1) continue;
			j = this._data[j + 2];
			while(j != -1) {
				j = this._data[j + 2];
				c++;
			}
		}
		$s.pop();
		return c;
		$s.pop();
	}
	,getFront: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::getFront");
		var $spos = $s.length;
		var b = key * 73856093 & this._mask;
		var i = this._hash[b];
		if(i == -1) {
			$s.pop();
			return -2147483648;
		} else if(this._data[i] == key) {
			var $tmp = this._data[i + 1];
			$s.pop();
			return $tmp;
		} else {
			var v = -2147483648;
			var first = i, i0 = first;
			i = this._data[i + 2];
			while(i != -1) {
				if(this._data[i] == key) {
					v = this._data[i + 1];
					this._data[i0 + 2] = this._data[i + 2];
					this._data[i + 2] = first;
					this._hash[b] = i;
					break;
				}
				i = this._data[(i0 = i) + 2];
			}
			$s.pop();
			return v;
		}
		$s.pop();
	}
	,setIfAbsent: function(key,val) {
		$s.push("de.polygonal.ds.IntIntHashTable::setIfAbsent");
		var $spos = $s.length;
		if(true != (val != -2147483648)) throw new de.polygonal.ASE("val 0x80000000 is reserved",{ fileName : "IntIntHashTable.hx", lineNumber : 361, className : "de.polygonal.ds.IntIntHashTable", methodName : "setIfAbsent"}); else null;
		var b = key * 73856093 & this._mask;
		var j = this._hash[b];
		if(j == -1) {
			if(true != this._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "IntIntHashTable.hx", lineNumber : 375, className : "de.polygonal.ds.IntIntHashTable", methodName : "setIfAbsent"}); else null;
			if(this._size == this._capacity) {
				if(!this._isResizable) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("out of space (%d)",[this._capacity]),{ fileName : "IntIntHashTable.hx", lineNumber : 382, className : "de.polygonal.ds.IntIntHashTable", methodName : "setIfAbsent"});
				if(this._isResizable) this._expand();
			}
			var i = this._free * 3;
			this._free = this._next[this._free];
			this._hash[b] = i;
			this._data[i] = key;
			this._data[i + 1] = val;
			this._size++;
			$s.pop();
			return true;
		} else if(this._data[j] == key) {
			$s.pop();
			return false;
		} else {
			var t = this._data[j + 2];
			while(t != -1) {
				if(this._data[t] == key) {
					j = -1;
					break;
				}
				t = this._data[(j = t) + 2];
			}
			if(j == -1) {
				$s.pop();
				return false;
			} else {
				if(this._size == this._capacity) {
					if(!this._isResizable) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("out of space (%d)",[this._capacity]),{ fileName : "IntIntHashTable.hx", lineNumber : 453, className : "de.polygonal.ds.IntIntHashTable", methodName : "setIfAbsent"});
					if(this._isResizable) this._expand();
				}
				var i = this._free * 3;
				this._free = this._next[this._free];
				this._data[j + 2] = i;
				this._data[i] = key;
				this._data[i + 1] = val;
				this._size++;
				$s.pop();
				return true;
			}
		}
		$s.pop();
	}
	,rehash: function(slotCount) {
		$s.push("de.polygonal.ds.IntIntHashTable::rehash");
		var $spos = $s.length;
		if(true != (slotCount > 0 && (slotCount & slotCount - 1) == 0)) throw new de.polygonal.ASE("slotCount is not a power of 2",{ fileName : "IntIntHashTable.hx", lineNumber : 490, className : "de.polygonal.ds.IntIntHashTable", methodName : "rehash"}); else null;
		if(slotCount == this._mask + 1) {
			$s.pop();
			return;
		}
		var tmp = new de.polygonal.ds.IntIntHashTable(slotCount,this._capacity);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v != -2147483648) tmp.set(this._data[i * 3],v);
		}
		this._hash = tmp._hash;
		this._data = tmp._data;
		this._next = tmp._next;
		this._mask = tmp._mask;
		this._free = tmp._free;
		this._sizeLevel = tmp._sizeLevel;
		$s.pop();
	}
	,remap: function(key,val) {
		$s.push("de.polygonal.ds.IntIntHashTable::remap");
		var $spos = $s.length;
		var i = this._hash[key * 73856093 & this._mask];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(this._data[i] == key) {
			this._data[i + 1] = val;
			$s.pop();
			return true;
		} else {
			i = this._data[i + 2];
			while(i != -1) {
				if(this._data[i] == key) {
					this._data[i + 1] = val;
					break;
				}
				i = this._data[i + 2];
			}
			var $tmp = i != -1;
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,extract: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::extract");
		var $spos = $s.length;
		var b = key * 73856093 & this._mask;
		var i = this._hash[b];
		if(i == -1) {
			$s.pop();
			return -2147483648;
		} else if(key == this._data[i]) {
			var val = this._data[i + 1];
			if(this._data[i + 2] == -1) this._hash[b] = -1; else this._hash[b] = this._data[i + 2];
			var j = Std["int"](i / 3);
			this._next[j] = this._free;
			this._free = j;
			this._data[i + 1] = -2147483648;
			this._data[i + 2] = -1;
			this._size--;
			if(this._sizeLevel > 0) {
				if(this._size == this._capacity >> 2) {
					if(this._isResizable) this._shrink();
				}
			}
			$s.pop();
			return val;
		} else {
			var i0 = i;
			i = this._data[i + 2];
			var val = -2147483648;
			while(i != -1) {
				if(this._data[i] == key) {
					val = this._data[i + 1];
					break;
				}
				i = this._data[(i0 = i) + 2];
			}
			if(val != -2147483648) {
				this._data[i0 + 2] = this._data[i + 2];
				var j = Std["int"](i / 3);
				this._next[j] = this._free;
				this._free = j;
				this._data[i + 1] = -2147483648;
				this._data[i + 2] = -1;
				--this._size;
				if(this._sizeLevel > 0) {
					if(this._size == this._capacity >> 2) {
						if(this._isResizable) this._shrink();
					}
				}
				$s.pop();
				return val;
			} else {
				$s.pop();
				return -2147483648;
			}
		}
		$s.pop();
	}
	,toKeyArray: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toKeyArray");
		var $spos = $s.length;
		if(this._size == 0) {
			var $tmp = new Array();
			$s.pop();
			return $tmp;
		}
		var a = de.polygonal.ds.ArrayUtil.alloc(this._size);
		var j = 0;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._data[i * 3 + 1] != -2147483648) a[j++] = this._data[i * 3];
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toKeyDA: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toKeyDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._size);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			if(this._data[i * 3 + 1] != -2147483648) a.set(a._size,this._data[i * 3]);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toString: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toString");
		var $spos = $s.length;
		var s = de.polygonal.core.fmt.Sprintf.format("{IntIntHashTable, size/capacity: %d/%d, load factor: %.2f}",[this._size,this._capacity,this._size / (this._mask + 1)]);
		if(this._size == 0) {
			$s.pop();
			return s;
		}
		s += "\n|<\n";
		var max = 0.;
		var $it0 = this.keys();
		while( $it0.hasNext() ) {
			var key = $it0.next();
			max = max > key?max:key;
		}
		var i = 1;
		while(max != 0) {
			i++;
			max = Std["int"](max / 10);
		}
		var $it1 = this.keys();
		while( $it1.hasNext() ) {
			var key = $it1.next();
			s += de.polygonal.core.fmt.Sprintf.format("  %- " + i + "d -> %d\n",[key,this.get(key)]);
		}
		s += ">|";
		$s.pop();
		return s;
		$s.pop();
	}
	,has: function(val) {
		$s.push("de.polygonal.ds.IntIntHashTable::has");
		var $spos = $s.length;
		if(true != (val != -2147483648)) throw new de.polygonal.ASE("val 0x80000000 is reserved",{ fileName : "IntIntHashTable.hx", lineNumber : 800, className : "de.polygonal.ds.IntIntHashTable", methodName : "has"}); else null;
		var exists = false;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v == val) {
				exists = true;
				break;
			}
		}
		$s.pop();
		return exists;
		$s.pop();
	}
	,hasKey: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::hasKey");
		var $spos = $s.length;
		var i = this._hash[key * 73856093 & this._mask];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(this._data[i] == key) {
			$s.pop();
			return true;
		} else {
			var exists = false;
			i = this._data[i + 2];
			while(i != -1) {
				if(this._data[i] == key) {
					exists = true;
					break;
				}
				i = this._data[i + 2];
			}
			$s.pop();
			return exists;
		}
		$s.pop();
	}
	,count: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::count");
		var $spos = $s.length;
		var c = 0;
		var i = this._hash[key * 73856093 & this._mask];
		if(i == -1) {
			$s.pop();
			return c;
		} else {
			while(i != -1) {
				if(this._data[i] == key) c++;
				i = this._data[i + 2];
			}
			$s.pop();
			return c;
		}
		$s.pop();
	}
	,get: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::get");
		var $spos = $s.length;
		var i = this._hash[key * 73856093 & this._mask];
		if(i == -1) {
			$s.pop();
			return -2147483648;
		} else if(this._data[i] == key) {
			var $tmp = this._data[i + 1];
			$s.pop();
			return $tmp;
		} else {
			var v = -2147483648;
			i = this._data[i + 2];
			while(i != -1) {
				if(this._data[i] == key) {
					v = this._data[i + 1];
					break;
				}
				i = this._data[i + 2];
			}
			$s.pop();
			return v;
		}
		$s.pop();
	}
	,set: function(key,val) {
		$s.push("de.polygonal.ds.IntIntHashTable::set");
		var $spos = $s.length;
		if(true != (val != -2147483648)) throw new de.polygonal.ASE("val 0x80000000 is reserved",{ fileName : "IntIntHashTable.hx", lineNumber : 957, className : "de.polygonal.ds.IntIntHashTable", methodName : "set"}); else null;
		if(true != this._size < this.maxSize) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("size equals max size (%d)",[this.maxSize]),{ fileName : "IntIntHashTable.hx", lineNumber : 958, className : "de.polygonal.ds.IntIntHashTable", methodName : "set"}); else null;
		if(this._size == this._capacity) {
			if(!this._isResizable) throw new de.polygonal.ASE(de.polygonal.core.fmt.Sprintf.format("out of space (%d)",[this._capacity]),{ fileName : "IntIntHashTable.hx", lineNumber : 965, className : "de.polygonal.ds.IntIntHashTable", methodName : "set"});
			if(this._isResizable) this._expand();
		}
		var i = this._free * 3;
		this._free = this._next[this._free];
		this._data[i] = key;
		this._data[i + 1] = val;
		var b = key * 73856093 & this._mask;
		var j = this._hash[b];
		if(j == -1) {
			this._hash[b] = i;
			this._size++;
			$s.pop();
			return true;
		} else {
			var first = this._data[j] != key;
			var t = this._data[j + 2];
			while(t != -1) {
				if(this._data[t] == key) first = false;
				j = t;
				t = this._data[t + 2];
			}
			this._data[j + 2] = i;
			this._size++;
			$s.pop();
			return first;
		}
		$s.pop();
	}
	,clr: function(key) {
		$s.push("de.polygonal.ds.IntIntHashTable::clr");
		var $spos = $s.length;
		var b = key * 73856093 & this._mask;
		var i = this._hash[b];
		if(i == -1) {
			$s.pop();
			return false;
		} else if(key == this._data[i]) {
			if(this._data[i + 2] == -1) this._hash[b] = -1; else this._hash[b] = this._data[i + 2];
			var j = Std["int"](i / 3);
			this._next[j] = this._free;
			this._free = j;
			this._data[i + 1] = -2147483648;
			this._data[i + 2] = -1;
			this._size--;
			if(this._sizeLevel > 0) {
				if(this._size == this._capacity >> 2) {
					if(this._isResizable) this._shrink();
				}
			}
			$s.pop();
			return true;
		} else {
			var exists = false;
			var i0 = i;
			i = this._data[i + 2];
			while(i != -1) {
				if(this._data[i] == key) {
					exists = true;
					break;
				}
				i = this._data[(i0 = i) + 2];
			}
			if(exists) {
				this._data[i0 + 2] = this._data[i + 2];
				var j = Std["int"](i / 3);
				this._next[j] = this._free;
				this._free = j;
				this._data[i + 1] = -2147483648;
				this._data[i + 2] = -1;
				--this._size;
				if(this._sizeLevel > 0) {
					if(this._size == this._capacity >> 2) {
						if(this._isResizable) this._shrink();
					}
				}
				$s.pop();
				return true;
			} else {
				$s.pop();
				return false;
			}
		}
		$s.pop();
	}
	,toValSet: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toValSet");
		var $spos = $s.length;
		var s = new de.polygonal.ds.IntHashSet(this._capacity);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v != -2147483648) s.set(v);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,toKeySet: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toKeySet");
		var $spos = $s.length;
		var s = new de.polygonal.ds.IntHashSet(this._capacity);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v != -2147483648) s.set(this._data[i * 3]);
		}
		$s.pop();
		return s;
		$s.pop();
	}
	,keys: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::keys");
		var $spos = $s.length;
		var $tmp = new de.polygonal.ds.IntIntHashTableKeyIterator(this);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,free: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::free");
		var $spos = $s.length;
		this._hash = null;
		this._data = null;
		this._next = null;
		this._iterator = null;
		$s.pop();
	}
	,contains: function(val) {
		$s.push("de.polygonal.ds.IntIntHashTable::contains");
		var $spos = $s.length;
		var $tmp = this.has(val);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,remove: function(val) {
		$s.push("de.polygonal.ds.IntIntHashTable::remove");
		var $spos = $s.length;
		if(true != (val != -2147483648)) throw new de.polygonal.ASE("val 0x80000000 is reserved",{ fileName : "IntIntHashTable.hx", lineNumber : 1234, className : "de.polygonal.ds.IntIntHashTable", methodName : "remove"}); else null;
		var c = 0;
		var keys = new Array();
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3];
			if(v == val) keys[c++] = this._data[i * 3];
		}
		if(c > 0) {
			var _g = 0;
			while(_g < keys.length) {
				var key = keys[_g];
				++_g;
				this.clr(key);
			}
			$s.pop();
			return true;
		} else {
			$s.pop();
			return false;
		}
		$s.pop();
	}
	,size: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::size");
		var $spos = $s.length;
		var $tmp = this._size;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,clear: function(purge) {
		$s.push("de.polygonal.ds.IntIntHashTable::clear");
		var $spos = $s.length;
		if(purge == null) purge = false;
		if(purge && this._sizeLevel > 0) {
			this._capacity >>= this._sizeLevel;
			this._sizeLevel = 0;
			this._data = de.polygonal.ds.ArrayUtil.alloc(this._capacity * 3);
			this._next = de.polygonal.ds.ArrayUtil.alloc(this._capacity);
		}
		de.polygonal.ds.ArrayUtil.fill(this._hash,-1,this._mask + 1);
		var j = 2;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			this._data[j - 1] = -2147483648;
			this._data[j] = -1;
			j += 3;
		}
		var _g1 = 0, _g = this._capacity - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[this._capacity - 1] = -1;
		this._free = 0;
		this._size = 0;
		$s.pop();
	}
	,iterator: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::iterator");
		var $spos = $s.length;
		if(this.reuseIterator) {
			if(this._iterator == null) this._iterator = new de.polygonal.ds.IntIntHashTableValIterator(this); else this._iterator.reset();
			var $tmp = this._iterator;
			$s.pop();
			return $tmp;
		} else {
			var $tmp = new de.polygonal.ds.IntIntHashTableValIterator(this);
			$s.pop();
			return $tmp;
		}
		$s.pop();
	}
	,isEmpty: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::isEmpty");
		var $spos = $s.length;
		var $tmp = this._size == 0;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,toArray: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toArray");
		var $spos = $s.length;
		var a = de.polygonal.ds.ArrayUtil.alloc(this._size);
		var j = 0;
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v != -2147483648) a[j++] = v;
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,toDA: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::toDA");
		var $spos = $s.length;
		var a = new de.polygonal.ds.DA(this._size);
		var _g1 = 0, _g = this._capacity;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this._data[i * 3 + 1];
			if(v != -2147483648) a.set(a._size,v);
		}
		$s.pop();
		return a;
		$s.pop();
	}
	,clone: function(assign,copier) {
		$s.push("de.polygonal.ds.IntIntHashTable::clone");
		var $spos = $s.length;
		if(assign == null) assign = true;
		var c = Type.createEmptyInstance(de.polygonal.ds.IntIntHashTable);
		c.key = de.polygonal.ds.HashKey._counter++;
		c.maxSize = this.maxSize;
		c._hash = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._hash,c._hash,null,null);
		c._data = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._data,c._data,null,null);
		c._next = new Array();
		de.polygonal.ds.ArrayUtil.copy(this._next,c._next,null,null);
		c._mask = this._mask;
		c._capacity = this._capacity;
		c._free = this._free;
		c._size = this._size;
		c._sizeLevel = this._sizeLevel;
		$s.pop();
		return c;
		$s.pop();
	}
	,_hashCode: function(x) {
		$s.push("de.polygonal.ds.IntIntHashTable::_hashCode");
		var $spos = $s.length;
		var $tmp = x * 73856093 & this._mask;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_expand: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::_expand");
		var $spos = $s.length;
		this._sizeLevel++;
		var oldSize = this._capacity;
		var newSize = oldSize << 1;
		this._capacity = newSize;
		var copy = de.polygonal.ds.ArrayUtil.alloc(newSize);
		de.polygonal.ds.ArrayUtil.copy(this._next,copy,0,oldSize);
		this._next = copy;
		var copy1 = de.polygonal.ds.ArrayUtil.alloc(newSize * 3);
		de.polygonal.ds.ArrayUtil.copy(this._data,copy1,0,oldSize * 3);
		this._data = copy1;
		var _g1 = oldSize - 1, _g = newSize - 1;
		while(_g1 < _g) {
			var i = _g1++;
			this._next[i] = i + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = oldSize;
		var j = oldSize * 3 + 2;
		var _g = 0;
		while(_g < oldSize) {
			var i = _g++;
			this._data[j - 1] = -2147483648;
			this._data[j] = -1;
			j += 3;
		}
		$s.pop();
	}
	,_shrink: function() {
		$s.push("de.polygonal.ds.IntIntHashTable::_shrink");
		var $spos = $s.length;
		this._sizeLevel--;
		var oldSize = this._capacity;
		var newSize = oldSize >> 1;
		this._capacity = newSize;
		var k = newSize * 3;
		var tmp = de.polygonal.ds.ArrayUtil.alloc(k);
		this._next = de.polygonal.ds.ArrayUtil.alloc(newSize);
		var e = 0;
		var _g1 = 0, _g = this._mask + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var j = this._hash[i];
			if(j == -1) continue;
			this._hash[i] = e;
			tmp[e] = this._data[j];
			tmp[e + 1] = this._data[j + 1];
			tmp[e + 2] = -1;
			e += 3;
			j = this._data[j + 2];
			while(j != -1) {
				tmp[e - 1] = e;
				tmp[e] = this._data[j];
				tmp[e + 1] = this._data[j + 1];
				tmp[e + 2] = -1;
				e += 3;
				j = this._data[j + 2];
			}
		}
		var i = k >> 1;
		while(i < k) {
			tmp[i + 1] = -2147483648;
			tmp[i + 2] = -1;
			i += 3;
		}
		this._data = tmp;
		var _g1 = 0, _g = newSize - 1;
		while(_g1 < _g) {
			var i1 = _g1++;
			this._next[i1] = i1 + 1;
		}
		this._next[newSize - 1] = -1;
		this._free = newSize >> 1;
		$s.pop();
	}
	,__getHash: function(i) {
		$s.push("de.polygonal.ds.IntIntHashTable::__getHash");
		var $spos = $s.length;
		var $tmp = this._hash[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setHash: function(i,x) {
		$s.push("de.polygonal.ds.IntIntHashTable::__setHash");
		var $spos = $s.length;
		this._hash[i] = x;
		$s.pop();
	}
	,__getNext: function(i) {
		$s.push("de.polygonal.ds.IntIntHashTable::__getNext");
		var $spos = $s.length;
		var $tmp = this._next[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setNext: function(i,x) {
		$s.push("de.polygonal.ds.IntIntHashTable::__setNext");
		var $spos = $s.length;
		this._next[i] = x;
		$s.pop();
	}
	,__getData: function(i) {
		$s.push("de.polygonal.ds.IntIntHashTable::__getData");
		var $spos = $s.length;
		var $tmp = this._data[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__setData: function(i,x) {
		$s.push("de.polygonal.ds.IntIntHashTable::__setData");
		var $spos = $s.length;
		this._data[i] = x;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntIntHashTable
	,__properties__: {get_capacity:"_capacityGetter",get_slotCount:"_slotCountGetter",get_loadFactor:"_loadFactorGetter"}
}
de.polygonal.ds.IntIntHashTableValIterator = $hxClasses["de.polygonal.ds.IntIntHashTableValIterator"] = function(hash) {
	$s.push("de.polygonal.ds.IntIntHashTableValIterator::new");
	var $spos = $s.length;
	this._f = hash;
	this._data = this._f._data;
	this._i = 0;
	this._s = this._f._capacity;
	while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
	$s.pop();
}
de.polygonal.ds.IntIntHashTableValIterator.__name__ = ["de","polygonal","ds","IntIntHashTableValIterator"];
de.polygonal.ds.IntIntHashTableValIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.IntIntHashTableValIterator.prototype = {
	_f: null
	,_i: null
	,_s: null
	,_data: null
	,reset: function() {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::reset");
		var $spos = $s.length;
		this._data = this._f._data;
		this._i = 0;
		this._s = this._f._capacity;
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::next");
		var $spos = $s.length;
		var val = this._data[this._i++ * 3 + 1];
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
		return val;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,_scan: function() {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::_scan");
		var $spos = $s.length;
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
	}
	,__getData: function(i) {
		$s.push("de.polygonal.ds.IntIntHashTableValIterator::__getData");
		var $spos = $s.length;
		var $tmp = this._data[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntIntHashTableValIterator
}
de.polygonal.ds.IntIntHashTableKeyIterator = $hxClasses["de.polygonal.ds.IntIntHashTableKeyIterator"] = function(hash) {
	$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::new");
	var $spos = $s.length;
	this._f = hash;
	this._data = this._f._data;
	this._i = 0;
	this._s = this._f._capacity;
	while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
	$s.pop();
}
de.polygonal.ds.IntIntHashTableKeyIterator.__name__ = ["de","polygonal","ds","IntIntHashTableKeyIterator"];
de.polygonal.ds.IntIntHashTableKeyIterator.__interfaces__ = [de.polygonal.ds.Itr];
de.polygonal.ds.IntIntHashTableKeyIterator.prototype = {
	_f: null
	,_i: null
	,_s: null
	,_data: null
	,reset: function() {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::reset");
		var $spos = $s.length;
		this._data = this._f._data;
		this._i = 0;
		this._s = this._f._capacity;
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
		return this;
		$s.pop();
	}
	,hasNext: function() {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::hasNext");
		var $spos = $s.length;
		var $tmp = this._i < this._s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,next: function() {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::next");
		var $spos = $s.length;
		var key = this._data[this._i++ * 3];
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
		return key;
		$s.pop();
	}
	,remove: function() {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::remove");
		var $spos = $s.length;
		throw "unsupported operation";
		$s.pop();
	}
	,_scan: function() {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::_scan");
		var $spos = $s.length;
		while(this._i < this._s && this._data[this._i * 3 + 1] == -2147483648) this._i++;
		$s.pop();
	}
	,__getData: function(i) {
		$s.push("de.polygonal.ds.IntIntHashTableKeyIterator::__getData");
		var $spos = $s.length;
		var $tmp = this._data[i];
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.ds.IntIntHashTableKeyIterator
}
haxe.io.BytesBuffer = $hxClasses["haxe.io.BytesBuffer"] = function() {
	$s.push("haxe.io.BytesBuffer::new");
	var $spos = $s.length;
	this.b = new Array();
	$s.pop();
}
haxe.io.BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe.io.BytesBuffer.prototype = {
	b: null
	,addByte: function($byte) {
		$s.push("haxe.io.BytesBuffer::addByte");
		var $spos = $s.length;
		this.b.push($byte);
		$s.pop();
	}
	,add: function(src) {
		$s.push("haxe.io.BytesBuffer::add");
		var $spos = $s.length;
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = 0, _g = src.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
		$s.pop();
	}
	,addBytes: function(src,pos,len) {
		$s.push("haxe.io.BytesBuffer::addBytes");
		var $spos = $s.length;
		if(pos < 0 || len < 0 || pos + len > src.length) throw haxe.io.Error.OutsideBounds;
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = pos, _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
		$s.pop();
	}
	,getBytes: function() {
		$s.push("haxe.io.BytesBuffer::getBytes");
		var $spos = $s.length;
		var bytes = new haxe.io.Bytes(this.b.length,this.b);
		this.b = null;
		$s.pop();
		return bytes;
		$s.pop();
	}
	,__class__: haxe.io.BytesBuffer
}
if(!com.wighawag.remote.local) com.wighawag.remote.local = {}
com.wighawag.remote.local.DynamicObject = $hxClasses["remote.local.DynamicObject"] = function() {
	$s.push("remote.local.DynamicObject::new");
	var $spos = $s.length;
	$s.pop();
}
com.wighawag.remote.local.DynamicObject.__name__ = ["com","wighawag","remote","local","DynamicObject"];
com.wighawag.remote.local.DynamicObject.prototype = {
	__class__: com.wighawag.remote.local.DynamicObject
}
com.wighawag.remote.local.LocalHighScoreService = $hxClasses["remote.local.LocalHighScoreService"] = function() {
	$s.push("remote.local.LocalHighScoreService::new");
	var $spos = $s.length;
	$s.pop();
}
com.wighawag.remote.local.LocalHighScoreService.__name__ = ["com","wighawag","remote","local","LocalHighScoreService"];
com.wighawag.remote.local.LocalHighScoreService.__interfaces__ = [com.wighawag.remote.service.HighScoreService];
com.wighawag.remote.local.LocalHighScoreService.prototype = {
	echo: function(message) {
		$s.push("remote.local.LocalHighScoreService::echo");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::echo@31");
			var $spos = $s.length;
			response.processSuccess(message);
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,start: function() {
		$s.push("remote.local.LocalHighScoreService::start");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::start@38");
			var $spos = $s.length;
			var seedList = new Array();
			seedList.push(Math.floor(Math.random() * 2147483647));
			seedList.push(Math.floor(Math.random() * 2147483647));
			seedList.push(Math.floor(Math.random() * 2147483647));
			seedList.push(Math.floor(Math.random() * 2147483647));
			var result = new com.wighawag.remote.service.Seed(seedList,"1");
			response.processSuccess(result);
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,setScore: function(score) {
		$s.push("remote.local.LocalHighScoreService::setScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::setScore@59");
			var $spos = $s.length;
			response.processSuccess("success");
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,getOwnHighScore: function() {
		$s.push("remote.local.LocalHighScoreService::getOwnHighScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::getOwnHighScore@68");
			var $spos = $s.length;
			var score = new com.wighawag.remote.service.Score(0,0,null,null,"1");
			response.processSuccess(score);
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,getRandomScore: function() {
		$s.push("remote.local.LocalHighScoreService::getRandomScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::getRandomScore@78");
			var $spos = $s.length;
			response.processError(new com.wighawag.remote.service.ErrorMessage("2147483647"));
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,reviewScore: function(scoreReview) {
		$s.push("remote.local.LocalHighScoreService::reviewScore");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::reviewScore@87");
			var $spos = $s.length;
			response.processSuccess("7");
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,forceReviewTimeUnit: function(value) {
		$s.push("remote.local.LocalHighScoreService::forceReviewTimeUnit");
		var $spos = $s.length;
		var response = new com.wighawag.remote.service.Response();
		haxe.Timer.delay(function() {
			$s.push("remote.local.LocalHighScoreService::forceReviewTimeUnit@99");
			var $spos = $s.length;
			response.processSuccess(0);
			$s.pop();
		},100);
		$s.pop();
		return response;
		$s.pop();
	}
	,__class__: com.wighawag.remote.local.LocalHighScoreService
}
var StringBuf = $hxClasses["StringBuf"] = function() {
	$s.push("StringBuf::new");
	var $spos = $s.length;
	this.b = new Array();
	$s.pop();
}
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		$s.push("StringBuf::add");
		var $spos = $s.length;
		this.b[this.b.length] = x == null?"null":x;
		$s.pop();
	}
	,addSub: function(s,pos,len) {
		$s.push("StringBuf::addSub");
		var $spos = $s.length;
		this.b[this.b.length] = s.substr(pos,len);
		$s.pop();
	}
	,addChar: function(c) {
		$s.push("StringBuf::addChar");
		var $spos = $s.length;
		this.b[this.b.length] = String.fromCharCode(c);
		$s.pop();
	}
	,toString: function() {
		$s.push("StringBuf::toString");
		var $spos = $s.length;
		var $tmp = this.b.join("");
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,b: null
	,__class__: StringBuf
}
de.polygonal.core.math.Mathematics = $hxClasses["de.polygonal.core.math.Mathematics"] = function() { }
de.polygonal.core.math.Mathematics.__name__ = ["de","polygonal","core","math","Mathematics"];
de.polygonal.core.math.Mathematics.toRad = function(deg) {
	$s.push("de.polygonal.core.math.Mathematics::toRad");
	var $spos = $s.length;
	var $tmp = deg * (3.141592653589793 / 180);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.toDeg = function(rad) {
	$s.push("de.polygonal.core.math.Mathematics::toDeg");
	var $spos = $s.length;
	var $tmp = rad * (180 / 3.141592653589793);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.min = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::min");
	var $spos = $s.length;
	var $tmp = x < y?x:y;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.max = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::max");
	var $spos = $s.length;
	var $tmp = x > y?x:y;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.abs = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::abs");
	var $spos = $s.length;
	var $tmp = x < 0?-x:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.sgn = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::sgn");
	var $spos = $s.length;
	var $tmp = x > 0?1:x < 0?-1:0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.clamp = function(x,min,max) {
	$s.push("de.polygonal.core.math.Mathematics::clamp");
	var $spos = $s.length;
	var $tmp = x < min?min:x > max?max:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.clampSym = function(x,i) {
	$s.push("de.polygonal.core.math.Mathematics::clampSym");
	var $spos = $s.length;
	var $tmp = x < -i?-i:x > i?i:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.wrap = function(x,min,max) {
	$s.push("de.polygonal.core.math.Mathematics::wrap");
	var $spos = $s.length;
	var $tmp = x < min?x - min + max + 1:x > max?x - max + min - 1:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fmin = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::fmin");
	var $spos = $s.length;
	var $tmp = x < y?x:y;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fmax = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::fmax");
	var $spos = $s.length;
	var $tmp = x > y?x:y;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fabs = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::fabs");
	var $spos = $s.length;
	var $tmp = x < 0?-x:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fsgn = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::fsgn");
	var $spos = $s.length;
	var $tmp = x > 0.?1:x < 0.?-1:0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fclamp = function(x,min,max) {
	$s.push("de.polygonal.core.math.Mathematics::fclamp");
	var $spos = $s.length;
	var $tmp = x < min?min:x > max?max:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fclampSym = function(x,i) {
	$s.push("de.polygonal.core.math.Mathematics::fclampSym");
	var $spos = $s.length;
	var $tmp = x < -i?-i:x > i?i:x;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.fwrap = function(value,lower,upper) {
	$s.push("de.polygonal.core.math.Mathematics::fwrap");
	var $spos = $s.length;
	var $tmp = value - Std["int"]((value - lower) / (upper - lower)) * (upper - lower);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.eqSgn = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::eqSgn");
	var $spos = $s.length;
	var $tmp = (x ^ y) >= 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.isEven = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::isEven");
	var $spos = $s.length;
	var $tmp = (x & 1) == 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.isPow2 = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::isPow2");
	var $spos = $s.length;
	var $tmp = x > 0 && (x & x - 1) == 0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.lerp = function(a,b,t) {
	$s.push("de.polygonal.core.math.Mathematics::lerp");
	var $spos = $s.length;
	var $tmp = a + (b - a) * t;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.slerp = function(a,b,t) {
	$s.push("de.polygonal.core.math.Mathematics::slerp");
	var $spos = $s.length;
	var m = Math;
	var c1 = m.sin(a * .5);
	var r1 = m.cos(a * .5);
	var c2 = m.sin(b * .5);
	var r2 = m.cos(b * .5);
	var c = r1 * r2 + c1 * c2;
	if(c < 0.) {
		if(1. + c > 1e-6) {
			var o = m.acos(-c);
			var s = m.sin(o);
			var s0 = m.sin((1 - t) * o) / s;
			var s1 = m.sin(t * o) / s;
			var $tmp = m.atan2(s0 * c1 - s1 * c2,s0 * r1 - s1 * r2) * 2.;
			$s.pop();
			return $tmp;
		} else {
			var s0 = 1 - t;
			var s1 = t;
			var $tmp = m.atan2(s0 * c1 - s1 * c2,s0 * r1 - s1 * r2) * 2;
			$s.pop();
			return $tmp;
		}
	} else if(1 - c > 1e-6) {
		var o = m.acos(c);
		var s = m.sin(o);
		var s0 = m.sin((1 - t) * o) / s;
		var s1 = m.sin(t * o) / s;
		var $tmp = m.atan2(s0 * c1 + s1 * c2,s0 * r1 + s1 * r2) * 2.;
		$s.pop();
		return $tmp;
	} else {
		var s0 = 1 - t;
		var s1 = t;
		var $tmp = m.atan2(s0 * c1 + s1 * c2,s0 * r1 + s1 * r2) * 2;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.core.math.Mathematics.nextPow2 = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::nextPow2");
	var $spos = $s.length;
	var t = x;
	t |= t >> 1;
	t |= t >> 2;
	t |= t >> 3;
	t |= t >> 4;
	t |= t >> 5;
	var $tmp = t + 1;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.exp = function(a,n) {
	$s.push("de.polygonal.core.math.Mathematics::exp");
	var $spos = $s.length;
	var t = 1;
	var r = 0;
	while(true) {
		if((n & 1) != 0) t = a * t;
		n >>= 1;
		if(n == 0) {
			r = t;
			break;
		} else a *= a;
	}
	$s.pop();
	return r;
	$s.pop();
}
de.polygonal.core.math.Mathematics.log10 = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::log10");
	var $spos = $s.length;
	var $tmp = Math.log(x) * 0.4342944819032517;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.roundTo = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::roundTo");
	var $spos = $s.length;
	var $tmp = de.polygonal.core.math.Mathematics.round(x / y) * y;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.round = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::round");
	var $spos = $s.length;
	var $tmp = Std["int"](x > 0?x + .5:x < 0?x - .5:0);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.ceil = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::ceil");
	var $spos = $s.length;
	var f = Std["int"](x);
	if(x == f) {
		$s.pop();
		return f;
	} else {
		x += 1;
		var f1 = Std["int"](x);
		if(x < 0 && f1 != x) f1--;
		$s.pop();
		return f1;
	}
	$s.pop();
}
de.polygonal.core.math.Mathematics.floor = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::floor");
	var $spos = $s.length;
	var f = Std["int"](x);
	if(x < 0 && f != x) f--;
	$s.pop();
	return f;
	$s.pop();
}
de.polygonal.core.math.Mathematics.invSqrt = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::invSqrt");
	var $spos = $s.length;
	var $tmp = 1 / Math.sqrt(x);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.cmpAbs = function(x,y,eps) {
	$s.push("de.polygonal.core.math.Mathematics::cmpAbs");
	var $spos = $s.length;
	var d = x - y;
	var $tmp = d > 0?d < eps:-d < eps;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.cmpZero = function(x,eps) {
	$s.push("de.polygonal.core.math.Mathematics::cmpZero");
	var $spos = $s.length;
	var $tmp = x > 0?x < eps:-x < eps;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.snap = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::snap");
	var $spos = $s.length;
	var $tmp = de.polygonal.core.math.Mathematics.floor((x + y * .5) / y);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.inRange = function(x,min,max) {
	$s.push("de.polygonal.core.math.Mathematics::inRange");
	var $spos = $s.length;
	var $tmp = x >= min && x <= max;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.wrapToPI = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::wrapToPI");
	var $spos = $s.length;
	x += 3.141592653589793;
	var $tmp = x - 6.283185307179586 * Math.floor(x / 6.283185307179586) - 3.141592653589793;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.wrapToPI2 = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::wrapToPI2");
	var $spos = $s.length;
	var $tmp = x - 6.283185307179586 * Math.floor(x / 6.283185307179586);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.gcd = function(x,y) {
	$s.push("de.polygonal.core.math.Mathematics::gcd");
	var $spos = $s.length;
	var d = 0;
	var r = 0;
	x = x < 0?-x:x;
	y = y < 0?-y:y;
	while(true) if(y == 0) {
		d = x;
		break;
	} else {
		r = x % y;
		x = y;
		y = r;
	}
	$s.pop();
	return d;
	$s.pop();
}
de.polygonal.core.math.Mathematics.maxPrecision = function(x,precision) {
	$s.push("de.polygonal.core.math.Mathematics::maxPrecision");
	var $spos = $s.length;
	if(x == 0) {
		$s.pop();
		return x;
	} else {
		var correction = 10;
		var _g1 = 0, _g = precision - 1;
		while(_g1 < _g) {
			var i = _g1++;
			correction *= 10;
		}
		var $tmp = de.polygonal.core.math.Mathematics.round(correction * x) / correction;
		$s.pop();
		return $tmp;
	}
	$s.pop();
}
de.polygonal.core.math.Mathematics.ofBool = function(x) {
	$s.push("de.polygonal.core.math.Mathematics::ofBool");
	var $spos = $s.length;
	var $tmp = x?1:0;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.math.Mathematics.prototype = {
	__class__: de.polygonal.core.math.Mathematics
}
if(!jeash.system) jeash.system = {}
jeash.system.LoaderContext = $hxClasses["jeash.system.LoaderContext"] = function(checkPolicyFile,applicationDomain,securityDomain) {
	$s.push("jeash.system.LoaderContext::new");
	var $spos = $s.length;
	if(checkPolicyFile == null) checkPolicyFile = false;
	this.checkPolicyFile = checkPolicyFile;
	$s.pop();
}
jeash.system.LoaderContext.__name__ = ["jeash","system","LoaderContext"];
jeash.system.LoaderContext.prototype = {
	applicationDomain: null
	,checkPolicyFile: null
	,securityDomain: null
	,__class__: jeash.system.LoaderContext
}
hxjson2.JSONEncoder = $hxClasses["hxjson2.JSONEncoder"] = function(value) {
	$s.push("hxjson2.JSONEncoder::new");
	var $spos = $s.length;
	this.jsonString = this.convertToString(value);
	$s.pop();
}
hxjson2.JSONEncoder.__name__ = ["hxjson2","JSONEncoder"];
hxjson2.JSONEncoder.prototype = {
	jsonString: null
	,getString: function() {
		$s.push("hxjson2.JSONEncoder::getString");
		var $spos = $s.length;
		var $tmp = this.jsonString;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,convertToString: function(value) {
		$s.push("hxjson2.JSONEncoder::convertToString");
		var $spos = $s.length;
		if(Std["is"](value,List) || Std["is"](value,IntHash)) value = Lambda.array(value);
		if(Std["is"](value,Hash)) value = this.mapHash(value);
		if(Std["is"](value,String)) {
			var $tmp = this.escapeString((function($this) {
				var $r;
				var $t = value;
				if(Std["is"]($t,String)) $t; else throw "Class cast error";
				$r = $t;
				return $r;
			}(this)));
			$s.pop();
			return $tmp;
		} else if(Std["is"](value,Float)) {
			var $tmp = Math.isFinite((function($this) {
				var $r;
				var $t = value;
				if(Std["is"]($t,Float)) $t; else throw "Class cast error";
				$r = $t;
				return $r;
			}(this)))?value + "":"null";
			$s.pop();
			return $tmp;
		} else if(Std["is"](value,Bool)) {
			var $tmp = value?"true":"false";
			$s.pop();
			return $tmp;
		} else if(Std["is"](value,Array)) {
			var $tmp = this.arrayToString((function($this) {
				var $r;
				var $t = value;
				if(Std["is"]($t,Array)) $t; else throw "Class cast error";
				$r = $t;
				return $r;
			}(this)));
			$s.pop();
			return $tmp;
		} else if(Std["is"](value,Dynamic) && value != null) {
			var $tmp = this.objectToString(value);
			$s.pop();
			return $tmp;
		}
		$s.pop();
		return "null";
		$s.pop();
	}
	,mapHash: function(value) {
		$s.push("hxjson2.JSONEncoder::mapHash");
		var $spos = $s.length;
		var ret = { };
		var $it0 = value.keys();
		while( $it0.hasNext() ) {
			var i = $it0.next();
			Reflect.setField(ret,i,value.get(i));
		}
		$s.pop();
		return ret;
		$s.pop();
	}
	,escapeString: function(str) {
		$s.push("hxjson2.JSONEncoder::escapeString");
		var $spos = $s.length;
		var s = "";
		var ch;
		var len = str.length;
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			ch = str.charAt(i);
			switch(ch) {
			case "/":
				s += "\\/";
				break;
			case "\"":
				s += "\\\"";
				break;
			case "\\":
				s += "\\\\";
				break;
			case "\n":
				s += "\\n";
				break;
			case "\r":
				s += "\\r";
				break;
			case "\t":
				s += "\\t";
				break;
			default:
				var code = ch.charCodeAt(0);
				if(ch < " " || code > 127) {
					var hexCode = StringTools.hex(ch.charCodeAt(0));
					var zeroPad = "";
					var _g2 = 0, _g1 = 4 - hexCode.length;
					while(_g2 < _g1) {
						var j = _g2++;
						zeroPad += "0";
					}
					s += "\\u" + zeroPad + hexCode;
				} else s += ch;
			}
		}
		var $tmp = "\"" + s + "\"";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,arrayToString: function(a) {
		$s.push("hxjson2.JSONEncoder::arrayToString");
		var $spos = $s.length;
		var s = "";
		var _g1 = 0, _g = a.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(s.length > 0) s += ",";
			s += this.convertToString(a[i]);
		}
		var $tmp = "[" + s + "]";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,objectToString: function(o) {
		$s.push("hxjson2.JSONEncoder::objectToString");
		var $spos = $s.length;
		var s = "";
		var value;
		var _g = 0, _g1 = Reflect.fields(o);
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			value = Reflect.field(o,key);
			if(!Reflect.isFunction(value)) {
				if(s.length > 0) s += ",";
				s += this.escapeString(key) + ":" + this.convertToString(value);
			}
		}
		var $tmp = "{" + s + "}";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: hxjson2.JSONEncoder
}
var Lambda = $hxClasses["Lambda"] = function() { }
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	$s.push("Lambda::array");
	var $spos = $s.length;
	var a = new Array();
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var i = $it0.next();
		a.push(i);
	}
	$s.pop();
	return a;
	$s.pop();
}
Lambda.list = function(it) {
	$s.push("Lambda::list");
	var $spos = $s.length;
	var l = new List();
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var i = $it0.next();
		l.add(i);
	}
	$s.pop();
	return l;
	$s.pop();
}
Lambda.map = function(it,f) {
	$s.push("Lambda::map");
	var $spos = $s.length;
	var l = new List();
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		l.add(f(x));
	}
	$s.pop();
	return l;
	$s.pop();
}
Lambda.mapi = function(it,f) {
	$s.push("Lambda::mapi");
	var $spos = $s.length;
	var l = new List();
	var i = 0;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		l.add(f(i++,x));
	}
	$s.pop();
	return l;
	$s.pop();
}
Lambda.has = function(it,elt,cmp) {
	$s.push("Lambda::has");
	var $spos = $s.length;
	if(cmp == null) {
		var $it0 = it.iterator();
		while( $it0.hasNext() ) {
			var x = $it0.next();
			if(x == elt) {
				$s.pop();
				return true;
			}
		}
	} else {
		var $it1 = it.iterator();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			if(cmp(x,elt)) {
				$s.pop();
				return true;
			}
		}
	}
	$s.pop();
	return false;
	$s.pop();
}
Lambda.exists = function(it,f) {
	$s.push("Lambda::exists");
	var $spos = $s.length;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(f(x)) {
			$s.pop();
			return true;
		}
	}
	$s.pop();
	return false;
	$s.pop();
}
Lambda.foreach = function(it,f) {
	$s.push("Lambda::foreach");
	var $spos = $s.length;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(!f(x)) {
			$s.pop();
			return false;
		}
	}
	$s.pop();
	return true;
	$s.pop();
}
Lambda.iter = function(it,f) {
	$s.push("Lambda::iter");
	var $spos = $s.length;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		f(x);
	}
	$s.pop();
}
Lambda.filter = function(it,f) {
	$s.push("Lambda::filter");
	var $spos = $s.length;
	var l = new List();
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(f(x)) l.add(x);
	}
	$s.pop();
	return l;
	$s.pop();
}
Lambda.fold = function(it,f,first) {
	$s.push("Lambda::fold");
	var $spos = $s.length;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		first = f(x,first);
	}
	$s.pop();
	return first;
	$s.pop();
}
Lambda.count = function(it,pred) {
	$s.push("Lambda::count");
	var $spos = $s.length;
	var n = 0;
	if(pred == null) {
		var $it0 = it.iterator();
		while( $it0.hasNext() ) {
			var _ = $it0.next();
			n++;
		}
	} else {
		var $it1 = it.iterator();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			if(pred(x)) n++;
		}
	}
	$s.pop();
	return n;
	$s.pop();
}
Lambda.empty = function(it) {
	$s.push("Lambda::empty");
	var $spos = $s.length;
	var $tmp = !it.iterator().hasNext();
	$s.pop();
	return $tmp;
	$s.pop();
}
Lambda.indexOf = function(it,v) {
	$s.push("Lambda::indexOf");
	var $spos = $s.length;
	var i = 0;
	var $it0 = it.iterator();
	while( $it0.hasNext() ) {
		var v2 = $it0.next();
		if(v == v2) {
			$s.pop();
			return i;
		}
		i++;
	}
	$s.pop();
	return -1;
	$s.pop();
}
Lambda.concat = function(a,b) {
	$s.push("Lambda::concat");
	var $spos = $s.length;
	var l = new List();
	var $it0 = a.iterator();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		l.add(x);
	}
	var $it1 = b.iterator();
	while( $it1.hasNext() ) {
		var x = $it1.next();
		l.add(x);
	}
	$s.pop();
	return l;
	$s.pop();
}
Lambda.prototype = {
	__class__: Lambda
}
de.polygonal.core.fmt.Sprintf = $hxClasses["de.polygonal.core.fmt.Sprintf"] = function() {
	$s.push("de.polygonal.core.fmt.Sprintf::new");
	var $spos = $s.length;
	this._bits = new Array();
	var format = "-+ #0hlLcdieEfgGosuxXpnb";
	var _g = 0;
	while(_g < 255) {
		var i = _g++;
		this._bits[i] = 0;
	}
	var _g1 = 0, _g = format.length;
	while(_g1 < _g) {
		var i = _g1++;
		this._bits[format.cca(i)] = 1 << i;
	}
	$s.pop();
}
de.polygonal.core.fmt.Sprintf.__name__ = ["de","polygonal","core","fmt","Sprintf"];
de.polygonal.core.fmt.Sprintf.format = function(fmt,arg) {
	$s.push("de.polygonal.core.fmt.Sprintf::format");
	var $spos = $s.length;
	if(de.polygonal.core.fmt.Sprintf._instance == null) de.polygonal.core.fmt.Sprintf._instance = new de.polygonal.core.fmt.Sprintf();
	var $tmp = de.polygonal.core.fmt.Sprintf._instance._format(fmt,arg);
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.fmt.Sprintf.prototype = {
	_bits: null
	,_format: function(fmt,arg) {
		$s.push("de.polygonal.core.fmt.Sprintf::_format");
		var $spos = $s.length;
		var a = 0;
		var o = "";
		var i = 0;
		var k = fmt.length;
		while(i < k) {
			var c = fmt.cca(i++);
			if(c == 37) {
				c = fmt.cca(i++);
				if(c == 37) o += "%"; else {
					var bits = 0;
					while((this._bits[c] & 31) != 0) {
						bits = bits | this._bits[c];
						c = fmt.cca(i++);
					}
					if((bits & 17) == 17) bits = bits & -17;
					if((bits & 6) == 6) bits = bits & -5;
					var widthFromArgument = false;
					var width = 0;
					if(c == 42) {
						widthFromArgument = true;
						c = fmt.cca(i++);
					} else if(c >= 48 && c <= 57) {
						width = c - 48;
						c = fmt.cca(i++);
						if(c >= 48 && c <= 57) {
							width = c - 48 + width * 10;
							c = fmt.cca(i++);
							if(c >= 48 && c <= 57) while(c >= 48 && c <= 57) c = fmt.cca(i++);
						}
					}
					var precision = -1;
					if(c == 46) {
						c = fmt.cca(i++);
						if(c == 42) {
							precision = Std["int"](arg[a++]);
							c = fmt.cca(i++);
						} else if(c >= 48 && c <= 57) {
							precision = c - 48;
							c = fmt.cca(i++);
							if(c >= 48 && c <= 57) {
								precision = c - 48 + precision * 10;
								c = fmt.cca(i++);
								if(c >= 48 && c <= 57) while(c >= 48 && c <= 57) c = fmt.cca(i++);
							}
						} else precision = 0;
					}
					while((this._bits[c] & 224) != 0) {
						bits = bits | this._bits[c];
						c = fmt.cca(i++);
					}
					var x = "";
					if(widthFromArgument) width = arg[a++];
					var f = this._bits[c];
					if((f & 16776960) != 0) {
						if((f & 8192) != 0) {
							if(precision == -1) precision = 6;
							var n = arg[a++];
							if(precision == 0) {
								x = Std.string(Std["int"](n > 0?n + .5:n < 0?n - .5:0));
								if((bits & 8) != 0) x += ".";
							} else {
								n = de.polygonal.core.math.Mathematics.roundTo(n,Math.pow(.1,precision));
								x = de.polygonal.core.fmt.NumberFormat.toFixed(n,precision);
							}
							if((bits & 2) != 0 && n >= 0) x = "+" + x; else if((bits & 4) != 0 && n >= 0) x = " " + x;
							o += this._padNumber(x,n,bits,width);
						} else if((f & 131328) != 0) {
							if((bits & 2) != 0) bits = bits & -3;
							if((bits & 4) != 0) bits = bits & -5; else if((bits & 16) != 0) bits = bits & -17; else if((bits & 8) != 0) bits = bits & -9;
							if(f == 131072) {
								x = Std.string(arg[a++]);
								if(precision > 0) x = x.substr(0,precision);
							} else x = String.fromCharCode(arg[a++]);
							var k1 = x.length;
							if(width > 0 && k1 < width) {
								width -= k1;
								if((bits & 1) != 0) x = this._rpad(x," ",width); else x = this._lpad(x," ",width);
							}
							o += x;
						} else if((f & 10290688) != 0) {
							if(precision == -1) precision = 1;
							var n = arg[a++];
							if(precision == 0 && n == 0) x = ""; else {
								if((f & 32) != 0) n &= 65535; else if((f & 65536) != 0) {
									x = de.polygonal.core.fmt.NumberFormat.toOct(n);
									if((bits & 8) != 0) x = "0" + x;
								} else if((f & 524288) != 0) {
									x = de.polygonal.core.fmt.NumberFormat.toHex(n).toLowerCase();
									if((bits & 8) != 0 && n != 0) x = "0x" + x;
								} else if((f & 1048576) != 0) {
									x = de.polygonal.core.fmt.NumberFormat.toHex(n).toUpperCase();
									if((bits & 8) != 0 && n != 0) x = "0X" + x;
								} else if((f & 8388608) != 0) {
									x = de.polygonal.core.fmt.NumberFormat.toBin(n);
									if(precision > 1) {
										if(x.length < precision) {
											precision -= x.length;
											var _g = 0;
											while(_g < precision) {
												var i1 = _g++;
												x = "0" + x;
											}
										}
										precision = 0;
									}
									if((bits & 8) != 0) x = "b" + x;
								} else x = Std.string(n);
								if(precision > 1 && x.length < precision) {
									if(n > 0) {
										var _g1 = 0, _g = precision - 1;
										while(_g1 < _g) {
											var i1 = _g1++;
											x = "0" + x;
										}
									} else {
										x = "0" + -n;
										var _g1 = 0, _g = precision - 2;
										while(_g1 < _g) {
											var i1 = _g1++;
											x = "0" + x;
										}
										x = "-" + x;
									}
								}
							}
							if(n >= 0) {
								if((bits & 2) != 0) x = "+" + x; else if((bits & 4) != 0) x = " " + x;
							}
							o += this._padNumber(x,n,bits,width);
						} else if((f & 6144) != 0) {
							if(precision == -1) precision = 6;
							var n = arg[a++];
							var sign;
							var exponent;
							if(n == 0) {
								sign = 0;
								exponent = 0;
								x += "0";
								if(precision > 0) {
									x += ".";
									var _g = 0;
									while(_g < precision) {
										var i1 = _g++;
										x += "0";
									}
								}
							} else {
								sign = n > 0.?1:n < 0.?-1:0;
								n = n < 0?-n:n;
								exponent = de.polygonal.core.math.Mathematics.floor(Math.log(n) / 2.302585092994046);
								n = n / de.polygonal.core.math.Mathematics.exp(10,exponent);
								var t = .1;
								var _g1 = 0, _g = precision - 1;
								while(_g1 < _g) {
									var i1 = _g1++;
									t *= .1;
								}
								n = de.polygonal.core.math.Mathematics.round(n / t) * t;
							}
							x += sign < 0?"-":(bits & 2) != 0?"+":"";
							if(n != 0) x += Std.string(n).substr(0,precision + 2);
							x += (f & 2048) != 0?"e":"E";
							x += exponent >= 0?"+":"-";
							if(exponent < 10) x = this._rpad(x,"0",2); else if(exponent < 100) x = this._rpad(x,"0",1);
							x += Std.string(exponent < 0?-exponent:exponent);
							o += x;
						} else if((f & 49152) != 0) {
							precision = 0;
							var flags = "";
							if((bits & 1) != 0) flags += "-";
							if((bits & 2) != 0) flags += "+";
							if((bits & 4) != 0) flags += " ";
							if((bits & 16) != 0) flags += "0";
							var n = arg[a++];
							var a1 = this._format("%" + flags + "." + precision + "f",[n]);
							var b = this._format("%" + flags + "." + precision + (c == 71?"E":"e"),[n]);
							if((bits & 8) != 0) {
								if(a1.indexOf(".") != -1) {
									var pos = a1.length - 1;
									while(a1.cca(pos) == 48) pos--;
									a1 = a1.substr(0,pos);
								}
							}
							o += a1.length < b.length?a1:b;
						} else if((f & 6291456) != 0) throw "warning: specifier 'p' and 'n' are not supported";
					} else throw "malformed format string: no specifier found";
				}
			} else o += fmt.charAt(i - 1);
		}
		$s.pop();
		return o;
		$s.pop();
	}
	,_padNumber: function(x,n,bits,width) {
		$s.push("de.polygonal.core.fmt.Sprintf::_padNumber");
		var $spos = $s.length;
		var k = x.length;
		if(width > 0 && k < width) {
			width -= k;
			if((bits & 1) != 0) x = this._rpad(x," ",width); else if(n >= 0) x = this._lpad(x,(bits & 16) != 0?"0":" ",width); else if((bits & 16) != 0) x = "-" + this._lpad(x.substr(1),"0",width); else x = this._lpad(x," ",width);
		}
		$s.pop();
		return x;
		$s.pop();
	}
	,_lpad: function(s,c,k) {
		$s.push("de.polygonal.core.fmt.Sprintf::_lpad");
		var $spos = $s.length;
		var t = c;
		var _g1 = 0, _g = k - 1;
		while(_g1 < _g) {
			var i = _g1++;
			t += c;
		}
		var $tmp = t + s;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,_rpad: function(s,c,k) {
		$s.push("de.polygonal.core.fmt.Sprintf::_rpad");
		var $spos = $s.length;
		var t = c;
		var _g1 = 0, _g = k - 1;
		while(_g1 < _g) {
			var i = _g1++;
			t += c;
		}
		var $tmp = s + t;
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,cca: function(s,pos) {
		$s.push("de.polygonal.core.fmt.Sprintf::cca");
		var $spos = $s.length;
		var $tmp = s.cca(pos);
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,__class__: de.polygonal.core.fmt.Sprintf
}
haxe.Timer = $hxClasses["haxe.Timer"] = function(time_ms) {
	$s.push("haxe.Timer::new");
	var $spos = $s.length;
	this.id = haxe.Timer.arr.length;
	haxe.Timer.arr[this.id] = this;
	this.timerId = window.setInterval("haxe.Timer.arr[" + this.id + "].run();",time_ms);
	$s.pop();
}
haxe.Timer.__name__ = ["haxe","Timer"];
haxe.Timer.delay = function(f,time_ms) {
	$s.push("haxe.Timer::delay");
	var $spos = $s.length;
	var t = new haxe.Timer(time_ms);
	t.run = function() {
		$s.push("haxe.Timer::delay@58");
		var $spos = $s.length;
		t.stop();
		f();
		$s.pop();
	};
	$s.pop();
	return t;
	$s.pop();
}
haxe.Timer.measure = function(f,pos) {
	$s.push("haxe.Timer::measure");
	var $spos = $s.length;
	var t0 = haxe.Timer.stamp();
	var r = f();
	haxe.Log.trace(haxe.Timer.stamp() - t0 + "s",pos);
	$s.pop();
	return r;
	$s.pop();
}
haxe.Timer.stamp = function() {
	$s.push("haxe.Timer::stamp");
	var $spos = $s.length;
	var $tmp = Date.now().getTime() / 1000;
	$s.pop();
	return $tmp;
	$s.pop();
}
haxe.Timer.prototype = {
	id: null
	,timerId: null
	,stop: function() {
		$s.push("haxe.Timer::stop");
		var $spos = $s.length;
		if(this.id == null) {
			$s.pop();
			return;
		}
		window.clearInterval(this.timerId);
		haxe.Timer.arr[this.id] = null;
		if(this.id > 100 && this.id == haxe.Timer.arr.length - 1) {
			var p = this.id - 1;
			while(p >= 0 && haxe.Timer.arr[p] == null) p--;
			haxe.Timer.arr = haxe.Timer.arr.slice(0,p + 1);
		}
		this.id = null;
		$s.pop();
	}
	,run: function() {
		$s.push("haxe.Timer::run");
		var $spos = $s.length;
		$s.pop();
	}
	,__class__: haxe.Timer
}
jeash.utils.Endian = $hxClasses["jeash.utils.Endian"] = { __ename__ : ["jeash","utils","Endian"], __constructs__ : ["BIG_ENDIAN","LITTLE_ENDIAN"] }
jeash.utils.Endian.BIG_ENDIAN = ["BIG_ENDIAN",0];
jeash.utils.Endian.BIG_ENDIAN.toString = $estr;
jeash.utils.Endian.BIG_ENDIAN.__enum__ = jeash.utils.Endian;
jeash.utils.Endian.LITTLE_ENDIAN = ["LITTLE_ENDIAN",1];
jeash.utils.Endian.LITTLE_ENDIAN.toString = $estr;
jeash.utils.Endian.LITTLE_ENDIAN.__enum__ = jeash.utils.Endian;
jeash.net.URLRequestHeader = $hxClasses["jeash.net.URLRequestHeader"] = function(name,value) {
	$s.push("jeash.net.URLRequestHeader::new");
	var $spos = $s.length;
	this.name = name;
	this.value = value;
	$s.pop();
}
jeash.net.URLRequestHeader.__name__ = ["jeash","net","URLRequestHeader"];
jeash.net.URLRequestHeader.prototype = {
	name: null
	,value: null
	,__class__: jeash.net.URLRequestHeader
}
jeash.display.GfxPoint = $hxClasses["jeash.display.GfxPoint"] = function(inX,inY,inCX,inCY,inType) {
	$s.push("jeash.display.GfxPoint::new");
	var $spos = $s.length;
	this.x = inX;
	this.y = inY;
	this.cx = inCX;
	this.cy = inCY;
	this.type = inType;
	$s.pop();
}
jeash.display.GfxPoint.__name__ = ["jeash","display","GfxPoint"];
jeash.display.GfxPoint.prototype = {
	x: null
	,y: null
	,cx: null
	,cy: null
	,type: null
	,__class__: jeash.display.GfxPoint
}
jeash.display.LineJob = $hxClasses["jeash.display.LineJob"] = function(inGrad,inPoint_idx0,inPoint_idx1,inThickness,inAlpha,inColour,inPixel_hinting,inJoints,inCaps,inScale_mode,inMiter_limit) {
	$s.push("jeash.display.LineJob::new");
	var $spos = $s.length;
	this.grad = inGrad;
	this.point_idx0 = inPoint_idx0;
	this.point_idx1 = inPoint_idx1;
	this.thickness = inThickness;
	this.alpha = inAlpha;
	this.colour = inColour;
	this.pixel_hinting = inPixel_hinting;
	this.joints = inJoints;
	this.caps = inCaps;
	this.scale_mode = inScale_mode;
	this.miter_limit = inMiter_limit;
	$s.pop();
}
jeash.display.LineJob.__name__ = ["jeash","display","LineJob"];
jeash.display.LineJob.prototype = {
	grad: null
	,point_idx0: null
	,point_idx1: null
	,thickness: null
	,alpha: null
	,colour: null
	,pixel_hinting: null
	,joints: null
	,caps: null
	,scale_mode: null
	,miter_limit: null
	,__class__: jeash.display.LineJob
}
jeash.display.PointInPathMode = $hxClasses["jeash.display.PointInPathMode"] = { __ename__ : ["jeash","display","PointInPathMode"], __constructs__ : ["USER_SPACE","DEVICE_SPACE"] }
jeash.display.PointInPathMode.USER_SPACE = ["USER_SPACE",0];
jeash.display.PointInPathMode.USER_SPACE.toString = $estr;
jeash.display.PointInPathMode.USER_SPACE.__enum__ = jeash.display.PointInPathMode;
jeash.display.PointInPathMode.DEVICE_SPACE = ["DEVICE_SPACE",1];
jeash.display.PointInPathMode.DEVICE_SPACE.toString = $estr;
jeash.display.PointInPathMode.DEVICE_SPACE.__enum__ = jeash.display.PointInPathMode;
jeash.display.Graphics = $hxClasses["jeash.display.Graphics"] = function(inSurface) {
	$s.push("jeash.display.Graphics::new");
	var $spos = $s.length;
	if(inSurface == null) {
		this.jeashSurface = js.Lib.document.createElement("canvas");
		this.jeashSurface.width = 0;
		this.jeashSurface.height = 0;
	} else this.jeashSurface = inSurface;
	this.mMatrix = new jeash.geom.Matrix();
	this.mLastMoveID = 0;
	this.mPenX = 0.0;
	this.mPenY = 0.0;
	this.originX = 0;
	this.originY = 0;
	this.mDrawList = new Array();
	this.mPoints = [];
	this.mSolidGradient = null;
	this.mBitmap = null;
	this.mFilling = false;
	this.mFillColour = 0;
	this.mFillAlpha = 0.0;
	this.mLastMoveID = 0;
	this.mNoClip = false;
	this.jeashClearLine();
	this.mLineJobs = [];
	this.jeashChanged = true;
	this.nextDrawIndex = 0;
	this.jeashRenderFrame = 0;
	this.jeashExtentBuffer = 0;
	this.jeashIsTile = false;
	this.jeashExtent = new jeash.geom.Rectangle();
	this.jeashClearNextCycle = true;
	$s.pop();
}
jeash.display.Graphics.__name__ = ["jeash","display","Graphics"];
jeash.display.Graphics.jeashDetectIsPointInPathMode = function() {
	$s.push("jeash.display.Graphics::jeashDetectIsPointInPathMode");
	var $spos = $s.length;
	var canvas = js.Lib.document.createElement("canvas");
	var ctx = canvas.getContext("2d");
	if(ctx.isPointInPath == null) {
		var $tmp = jeash.display.PointInPathMode.USER_SPACE;
		$s.pop();
		return $tmp;
	}
	ctx.save();
	ctx.translate(1,0);
	ctx.beginPath();
	ctx.rect(0,0,1,1);
	var rv = ctx.isPointInPath(0.3,0.3)?jeash.display.PointInPathMode.USER_SPACE:jeash.display.PointInPathMode.DEVICE_SPACE;
	ctx.restore();
	$s.pop();
	return rv;
	$s.pop();
}
jeash.display.Graphics.prototype = {
	jeashSurface: null
	,jeashChanged: null
	,mPoints: null
	,mSolid: null
	,mFilling: null
	,mFillColour: null
	,mFillAlpha: null
	,mSolidGradient: null
	,mBitmap: null
	,mCurrentLine: null
	,mLineJobs: null
	,mNoClip: null
	,mDrawList: null
	,mLineDraws: null
	,mPenX: null
	,mPenY: null
	,mLastMoveID: null
	,mMatrix: null
	,owner: null
	,mBoundsDirty: null
	,jeashExtent: null
	,originX: null
	,originY: null
	,nextDrawIndex: null
	,jeashRenderFrame: null
	,jeashExtentBuffer: null
	,jeashIsTile: null
	,jeashClearNextCycle: null
	,SetSurface: function(inSurface) {
		$s.push("jeash.display.Graphics::SetSurface");
		var $spos = $s.length;
		this.jeashSurface = inSurface;
		$s.pop();
	}
	,createCanvasColor: function(color,alpha) {
		$s.push("jeash.display.Graphics::createCanvasColor");
		var $spos = $s.length;
		var r;
		var g;
		var b;
		r = (16711680 & color) >> 16;
		g = (65280 & color) >> 8;
		b = 255 & color;
		var $tmp = "rgba" + "(" + r + "," + g + "," + b + "," + alpha + ")";
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,createCanvasGradient: function(ctx,g) {
		$s.push("jeash.display.Graphics::createCanvasGradient");
		var $spos = $s.length;
		var gradient;
		var matrix = g.matrix;
		if((g.flags & jeash.display.Graphics.RADIAL) == 0) {
			var p1 = matrix.transformPoint(new jeash.geom.Point(-819.2,0));
			var p2 = matrix.transformPoint(new jeash.geom.Point(819.2,0));
			gradient = ctx.createLinearGradient(p1.x,p1.y,p2.x,p2.y);
		} else {
			var p1 = matrix.transformPoint(new jeash.geom.Point(g.focal * 819.2,0));
			var p2 = matrix.transformPoint(new jeash.geom.Point(0,819.2));
			gradient = ctx.createRadialGradient(p1.x,p1.y,0,p2.x,p1.y,p2.y);
		}
		var _g = 0, _g1 = g.points;
		while(_g < _g1.length) {
			var point = _g1[_g];
			++_g;
			var color = this.createCanvasColor(point.col,point.alpha);
			var pos = point.ratio / 255;
			gradient.addColorStop(pos,color);
		}
		$s.pop();
		return gradient;
		$s.pop();
	}
	,jeashRender: function(maskHandle,matrix) {
		$s.push("jeash.display.Graphics::jeashRender");
		var $spos = $s.length;
		if(!this.jeashChanged) {
			$s.pop();
			return false;
		}
		this.ClosePolygon(true);
		if(this.jeashExtent.width - this.jeashExtent.x != this.jeashSurface.width || this.jeashExtent.height - this.jeashExtent.y != this.jeashSurface.height) this.jeashAdjustSurface();
		if(this.jeashClearNextCycle) {
			this.jeashClearCanvas();
			this.jeashClearNextCycle = false;
		}
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.jeashSurface.getContext("2d");
			} catch( e ) {
				$r = (function($this) {
					var $r;
					$e = [];
					while($s.length >= $spos) $e.unshift($s.pop());
					$s.push($e[0]);
					jeash.Lib.trace("2d canvas API not implemented for: " + $this.jeashSurface);
					$r = null;
					return $r;
				}($this));
			}
			return $r;
		}(this));
		if(ctx == null) {
			$s.pop();
			return false;
		}
		var len = this.mDrawList.length;
		ctx.save();
		if(this.jeashExtent.x != 0 || this.jeashExtent.y != 0) ctx.translate(-this.jeashExtent.x,-this.jeashExtent.y);
		var _g = this.nextDrawIndex;
		while(_g < len) {
			var i = _g++;
			var d = this.mDrawList[len - 1 - i];
			if(d.lineJobs.length > 0) {
				var _g1 = 0, _g2 = d.lineJobs;
				while(_g1 < _g2.length) {
					var lj = _g2[_g1];
					++_g1;
					ctx.lineWidth = lj.thickness;
					switch(lj.joints) {
					case jeash.display.Graphics.CORNER_ROUND:
						ctx.lineJoin = "round";
						break;
					case jeash.display.Graphics.CORNER_MITER:
						ctx.lineJoin = "miter";
						break;
					case jeash.display.Graphics.CORNER_BEVEL:
						ctx.lineJoin = "bevel";
						break;
					}
					switch(lj.caps) {
					case jeash.display.Graphics.END_ROUND:
						ctx.lineCap = "round";
						break;
					case jeash.display.Graphics.END_SQUARE:
						ctx.lineCap = "square";
						break;
					case jeash.display.Graphics.END_NONE:
						ctx.lineCap = "butt";
						break;
					}
					ctx.miterLimit = lj.miter_limit;
					if(lj.grad != null) ctx.strokeStyle = this.createCanvasGradient(ctx,lj.grad); else ctx.strokeStyle = this.createCanvasColor(lj.colour,lj.alpha);
					ctx.beginPath();
					var _g4 = lj.point_idx0, _g3 = lj.point_idx1 + 1;
					while(_g4 < _g3) {
						var i1 = _g4++;
						var p = d.points[i1];
						switch(p.type) {
						case jeash.display.Graphics.MOVE:
							ctx.moveTo(p.x,p.y);
							break;
						case jeash.display.Graphics.CURVE:
							ctx.quadraticCurveTo(p.cx,p.cy,p.x,p.y);
							break;
						default:
							ctx.lineTo(p.x,p.y);
						}
					}
					ctx.closePath();
					ctx.stroke();
				}
			} else {
				ctx.beginPath();
				var _g1 = 0, _g2 = d.points;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					switch(p.type) {
					case jeash.display.Graphics.MOVE:
						ctx.moveTo(p.x,p.y);
						break;
					case jeash.display.Graphics.CURVE:
						ctx.quadraticCurveTo(p.cx,p.cy,p.x,p.y);
						break;
					default:
						ctx.lineTo(p.x,p.y);
					}
				}
				ctx.closePath();
			}
			var fillColour = d.fillColour;
			var fillAlpha = d.fillAlpha;
			if(fillAlpha >= 0. && fillAlpha <= 1.) {
				var g = d.solidGradient;
				if(g != null) ctx.fillStyle = this.createCanvasGradient(ctx,g); else ctx.fillStyle = this.createCanvasColor(fillColour,fillAlpha);
			}
			ctx.fill();
			ctx.save();
			var bitmap = d.bitmap;
			if(bitmap != null) {
				ctx.clip();
				if(this.jeashExtent.x != 0 || this.jeashExtent.y != 0) ctx.translate(-this.jeashExtent.x,-this.jeashExtent.y);
				var img = bitmap.texture_buffer;
				var matrix1 = bitmap.matrix;
				if(matrix1 != null) ctx.transform(matrix1.a,matrix1.b,matrix1.c,matrix1.d,matrix1.tx,matrix1.ty);
				ctx.drawImage(img,0,0);
			}
			ctx.restore();
		}
		ctx.restore();
		this.jeashChanged = false;
		this.nextDrawIndex = len;
		$s.pop();
		return true;
		$s.pop();
	}
	,jeashHitTest: function(inX,inY) {
		$s.push("jeash.display.Graphics::jeashHitTest");
		var $spos = $s.length;
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.jeashSurface.getContext("2d");
			} catch( e ) {
				$r = (function($this) {
					var $r;
					$e = [];
					while($s.length >= $spos) $e.unshift($s.pop());
					$s.push($e[0]);
					jeash.Lib.trace("2d canvas API not implemented for: " + $this.jeashSurface);
					$r = null;
					return $r;
				}($this));
			}
			return $r;
		}(this));
		if(ctx == null) {
			$s.pop();
			return false;
		}
		ctx.save();
		var _g = 0, _g1 = this.mDrawList;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			ctx.beginPath();
			var _g2 = 0, _g3 = d.points;
			while(_g2 < _g3.length) {
				var p = _g3[_g2];
				++_g2;
				switch(p.type) {
				case jeash.display.Graphics.MOVE:
					ctx.moveTo(p.x,p.y);
					break;
				case jeash.display.Graphics.CURVE:
					ctx.quadraticCurveTo(p.cx,p.cy,p.x,p.y);
					break;
				default:
					ctx.lineTo(p.x,p.y);
				}
			}
			ctx.closePath();
			if(ctx.isPointInPath(inX,inY)) {
				$s.pop();
				return true;
			}
		}
		ctx.restore();
		$s.pop();
		return false;
		$s.pop();
	}
	,blit: function(inTexture) {
		$s.push("jeash.display.Graphics::blit");
		var $spos = $s.length;
		this.ClosePolygon(true);
		var ctx = (function($this) {
			var $r;
			try {
				$r = $this.jeashSurface.getContext("2d");
			} catch( e ) {
				$r = (function($this) {
					var $r;
					$e = [];
					while($s.length >= $spos) $e.unshift($s.pop());
					$s.push($e[0]);
					jeash.Lib.trace("2d canvas API not implemented for: " + $this.jeashSurface);
					$r = null;
					return $r;
				}($this));
			}
			return $r;
		}(this));
		if(ctx != null) ctx.drawImage(inTexture.mTextureBuffer,this.mPenX,this.mPenY);
		$s.pop();
	}
	,lineStyle: function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit) {
		$s.push("jeash.display.Graphics::lineStyle");
		var $spos = $s.length;
		this.AddLineSegment();
		if(thickness == null) {
			this.jeashClearLine();
			$s.pop();
			return;
		} else {
			this.mCurrentLine.grad = null;
			this.mCurrentLine.thickness = thickness;
			this.mCurrentLine.colour = color == null?0:color;
			this.mCurrentLine.alpha = alpha == null?1.0:alpha;
			this.mCurrentLine.miter_limit = miterLimit == null?3.0:miterLimit;
			this.mCurrentLine.pixel_hinting = pixelHinting == null || !pixelHinting?0:jeash.display.Graphics.PIXEL_HINTING;
		}
		if(caps != null) {
			switch( (caps)[1] ) {
			case 1:
				this.mCurrentLine.caps = jeash.display.Graphics.END_ROUND;
				break;
			case 2:
				this.mCurrentLine.caps = jeash.display.Graphics.END_SQUARE;
				break;
			case 0:
				this.mCurrentLine.caps = jeash.display.Graphics.END_NONE;
				break;
			}
		}
		this.mCurrentLine.scale_mode = jeash.display.Graphics.SCALE_NORMAL;
		if(scaleMode != null) {
			switch( (scaleMode)[1] ) {
			case 2:
				this.mCurrentLine.scale_mode = jeash.display.Graphics.SCALE_NORMAL;
				break;
			case 3:
				this.mCurrentLine.scale_mode = jeash.display.Graphics.SCALE_VERTICAL;
				break;
			case 0:
				this.mCurrentLine.scale_mode = jeash.display.Graphics.SCALE_HORIZONTAL;
				break;
			case 1:
				this.mCurrentLine.scale_mode = jeash.display.Graphics.SCALE_NONE;
				break;
			}
		}
		this.mCurrentLine.joints = jeash.display.Graphics.CORNER_ROUND;
		if(joints != null) {
			switch( (joints)[1] ) {
			case 1:
				this.mCurrentLine.joints = jeash.display.Graphics.CORNER_ROUND;
				break;
			case 0:
				this.mCurrentLine.joints = jeash.display.Graphics.CORNER_MITER;
				break;
			case 2:
				this.mCurrentLine.joints = jeash.display.Graphics.CORNER_BEVEL;
				break;
			}
		}
		$s.pop();
	}
	,lineGradientStyle: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		$s.push("jeash.display.Graphics::lineGradientStyle");
		var $spos = $s.length;
		this.mCurrentLine.grad = this.CreateGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
		$s.pop();
	}
	,beginFill: function(color,alpha) {
		$s.push("jeash.display.Graphics::beginFill");
		var $spos = $s.length;
		this.ClosePolygon(true);
		this.mFillColour = color;
		this.mFillAlpha = alpha == null?1.0:alpha;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.mBitmap = null;
		$s.pop();
	}
	,endFill: function() {
		$s.push("jeash.display.Graphics::endFill");
		var $spos = $s.length;
		this.ClosePolygon(true);
		$s.pop();
	}
	,DrawEllipse: function(x,y,rx,ry) {
		$s.push("jeash.display.Graphics::DrawEllipse");
		var $spos = $s.length;
		this.moveTo(x + rx,y);
		this.curveTo(rx + x,-0.4142 * ry + y,0.7071 * rx + x,-0.7071 * ry + y);
		this.curveTo(0.4142 * rx + x,-ry + y,x,-ry + y);
		this.curveTo(-0.4142 * rx + x,-ry + y,-0.7071 * rx + x,-0.7071 * ry + y);
		this.curveTo(-rx + x,-0.4142 * ry + y,-rx + x,y);
		this.curveTo(-rx + x,0.4142 * ry + y,-0.7071 * rx + x,0.7071 * ry + y);
		this.curveTo(-0.4142 * rx + x,ry + y,x,ry + y);
		this.curveTo(0.4142 * rx + x,ry + y,0.7071 * rx + x,0.7071 * ry + y);
		this.curveTo(rx + x,0.4142 * ry + y,rx + x,y);
		$s.pop();
	}
	,drawEllipse: function(x,y,rx,ry) {
		$s.push("jeash.display.Graphics::drawEllipse");
		var $spos = $s.length;
		this.ClosePolygon(false);
		rx /= 2;
		ry /= 2;
		this.DrawEllipse(x + rx,y + ry,rx,ry);
		this.ClosePolygon(false);
		$s.pop();
	}
	,drawCircle: function(x,y,rad) {
		$s.push("jeash.display.Graphics::drawCircle");
		var $spos = $s.length;
		this.ClosePolygon(false);
		this.DrawEllipse(x,y,rad,rad);
		this.ClosePolygon(false);
		$s.pop();
	}
	,drawRect: function(x,y,width,height) {
		$s.push("jeash.display.Graphics::drawRect");
		var $spos = $s.length;
		this.ClosePolygon(false);
		this.moveTo(x,y);
		this.lineTo(x + width,y);
		this.lineTo(x + width,y + height);
		this.lineTo(x,y + height);
		this.lineTo(x,y);
		this.ClosePolygon(false);
		$s.pop();
	}
	,drawRoundRect: function(x,y,width,height,rx,ry) {
		$s.push("jeash.display.Graphics::drawRoundRect");
		var $spos = $s.length;
		rx *= 0.5;
		ry *= 0.5;
		var w = width * 0.5;
		x += w;
		if(rx > w) rx = w;
		var lw = w - rx;
		var w_ = lw + rx * Math.sin(Math.PI / 4);
		var cw_ = lw + rx * Math.tan(Math.PI / 8);
		var h = height * 0.5;
		y += h;
		if(ry > h) ry = h;
		var lh = h - ry;
		var h_ = lh + ry * Math.sin(Math.PI / 4);
		var ch_ = lh + ry * Math.tan(Math.PI / 8);
		this.ClosePolygon(false);
		this.moveTo(x + w,y + lh);
		this.curveTo(x + w,y + ch_,x + w_,y + h_);
		this.curveTo(x + cw_,y + h,x + lw,y + h);
		this.lineTo(x - lw,y + h);
		this.curveTo(x - cw_,y + h,x - w_,y + h_);
		this.curveTo(x - w,y + ch_,x - w,y + lh);
		this.lineTo(x - w,y - lh);
		this.curveTo(x - w,y - ch_,x - w_,y - h_);
		this.curveTo(x - cw_,y - h,x - lw,y - h);
		this.lineTo(x + lw,y - h);
		this.curveTo(x + cw_,y - h,x + w_,y - h_);
		this.curveTo(x + w,y - ch_,x + w,y - lh);
		this.lineTo(x + w,y + lh);
		this.ClosePolygon(false);
		$s.pop();
	}
	,CreateGradient: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		$s.push("jeash.display.Graphics::CreateGradient");
		var $spos = $s.length;
		var points = new Array();
		var _g1 = 0, _g = colors.length;
		while(_g1 < _g) {
			var i = _g1++;
			points.push({ col : colors[i], alpha : alphas[i], ratio : ratios[i]});
		}
		var flags = 0;
		if(type == jeash.display.GradientType.RADIAL) flags |= jeash.display.Graphics.RADIAL;
		if(spreadMethod == jeash.display.SpreadMethod.REPEAT) flags |= jeash.display.Graphics.SPREAD_REPEAT; else if(spreadMethod == jeash.display.SpreadMethod.REFLECT) flags |= jeash.display.Graphics.SPREAD_REFLECT;
		if(matrix == null) {
			matrix = new jeash.geom.Matrix();
			matrix.createGradientBox(25,25);
		} else matrix = matrix.clone();
		var focal = focalPointRatio == null?0:focalPointRatio;
		var $tmp = { points : points, matrix : matrix, flags : flags, focal : focal};
		$s.pop();
		return $tmp;
		$s.pop();
	}
	,beginGradientFill: function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio) {
		$s.push("jeash.display.Graphics::beginGradientFill");
		var $spos = $s.length;
		this.ClosePolygon(true);
		this.mFilling = true;
		this.mBitmap = null;
		this.mSolidGradient = this.CreateGradient(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio);
		$s.pop();
	}
	,beginBitmapFill: function(bitmap,matrix,in_repeat,in_smooth) {
		$s.push("jeash.display.Graphics::beginBitmapFill");
		var $spos = $s.length;
		this.ClosePolygon(true);
		var repeat = in_repeat == null?true:in_repeat;
		var smooth = in_smooth == null?false:in_smooth;
		this.mFilling = true;
		this.mSolidGradient = null;
		this.jeashExpandStandardExtent(bitmap.mTextureBuffer != null?bitmap.mTextureBuffer.width:0,bitmap.mTextureBuffer != null?bitmap.mTextureBuffer.height:0);
		this.mBitmap = { texture_buffer : bitmap.mTextureBuffer, matrix : matrix == null?matrix:matrix.clone(), flags : (repeat?jeash.display.Graphics.BMP_REPEAT:0) | (smooth?jeash.display.Graphics.BMP_SMOOTH:0)};
		$s.pop();
	}
	,jeashClearLine: function() {
		$s.push("jeash.display.Graphics::jeashClearLine");
		var $spos = $s.length;
		this.mCurrentLine = new jeash.display.LineJob(null,-1,-1,0.0,0.0,0,1,jeash.display.Graphics.CORNER_ROUND,jeash.display.Graphics.END_ROUND,jeash.display.Graphics.SCALE_NORMAL,3.0);
		$s.pop();
	}
	,jeashClearCanvas: function() {
		$s.push("jeash.display.Graphics::jeashClearCanvas");
		var $spos = $s.length;
		if(this.jeashSurface != null) {
			var w = this.jeashSurface.width;
			this.jeashSurface.width = w;
		}
		$s.pop();
	}
	,clear: function() {
		$s.push("jeash.display.Graphics::clear");
		var $spos = $s.length;
		this.jeashClearLine();
		this.mPenX = 0.0;
		this.mPenY = 0.0;
		this.mDrawList = new Array();
		this.nextDrawIndex = 0;
		this.mPoints = [];
		this.mSolidGradient = null;
		this.mFilling = false;
		this.mFillColour = 0;
		this.mFillAlpha = 0.0;
		this.mLastMoveID = 0;
		this.jeashClearNextCycle = true;
		this.mLineJobs = [];
		if(!this.mBoundsDirty) {
			this.mBoundsDirty = true;
			if(this.owner != null) this.owner.jeashInvalidateBounds();
		}
		$s.pop();
	}
	,jeashExpandStandardExtent: function(x,y) {
		$s.push("jeash.display.Graphics::jeashExpandStandardExtent");
		var $spos = $s.length;
		var maxX, minX, maxY, minY;
		minX = this.jeashExtent.x;
		minY = this.jeashExtent.y;
		maxX = this.jeashExtent.width + minX;
		maxY = this.jeashExtent.height + minY;
		maxX = x > maxX?x:maxX;
		minX = x < minX?x:minX;
		maxY = y > maxY?y:maxY;
		minY = y < minY?y:minY;
		this.jeashExtent.x = minX;
		this.jeashExtent.y = minY;
		this.jeashExtent.width = maxX - minX + 1;
		this.jeashExtent.height = maxY - minY + 1;
		$s.pop();
	}
	,moveTo: function(inX,inY) {
		$s.push("jeash.display.Graphics::moveTo");
		var $spos = $s.length;
		this.mPenX = inX;
		this.mPenY = inY;
		this.jeashExpandStandardExtent(inX,inY);
		if(!this.mFilling) this.ClosePolygon(false); else {
			this.AddLineSegment();
			this.mLastMoveID = this.mPoints.length;
			this.mPoints.push(new jeash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,jeash.display.Graphics.MOVE));
		}
		$s.pop();
	}
	,lineTo: function(inX,inY) {
		$s.push("jeash.display.Graphics::lineTo");
		var $spos = $s.length;
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new jeash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,jeash.display.Graphics.MOVE));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.jeashExpandStandardExtent(inX,inY);
		this.mPoints.push(new jeash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,jeash.display.Graphics.LINE));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
		if(!this.mFilling) this.ClosePolygon(false);
		$s.pop();
	}
	,curveTo: function(inCX,inCY,inX,inY) {
		$s.push("jeash.display.Graphics::curveTo");
		var $spos = $s.length;
		var pid = this.mPoints.length;
		if(pid == 0) {
			this.mPoints.push(new jeash.display.GfxPoint(this.mPenX,this.mPenY,0.0,0.0,jeash.display.Graphics.MOVE));
			pid++;
		}
		this.mPenX = inX;
		this.mPenY = inY;
		this.jeashExpandStandardExtent(inX,inY);
		this.mPoints.push(new jeash.display.GfxPoint(inX,inY,inCX,inCY,jeash.display.Graphics.CURVE));
		if(this.mCurrentLine.grad != null || this.mCurrentLine.alpha > 0) {
			if(this.mCurrentLine.point_idx0 < 0) this.mCurrentLine.point_idx0 = pid - 1;
			this.mCurrentLine.point_idx1 = pid;
		}
		$s.pop();
	}
	,flush: function() {
		$s.push("jeash.display.Graphics::flush");
		var $spos = $s.length;
		this.ClosePolygon(true);
		$s.pop();
	}
	,AddDrawable: function(inDrawable) {
		$s.push("jeash.display.Graphics::AddDrawable");
		var $spos = $s.length;
		if(inDrawable == null) {
			$s.pop();
			return;
		}
		this.mDrawList.unshift(inDrawable);
		$s.pop();
	}
	,AddLineSegment: function() {
		$s.push("jeash.display.Graphics::AddLineSegment");
		var $spos = $s.length;
		if(this.mCurrentLine.point_idx1 > 0) this.mLineJobs.push(new jeash.display.LineJob(this.mCurrentLine.grad,this.mCurrentLine.point_idx0,this.mCurrentLine.point_idx1,this.mCurrentLine.thickness,this.mCurrentLine.alpha,this.mCurrentLine.colour,this.mCurrentLine.pixel_hinting,this.mCurrentLine.joints,this.mCurrentLine.caps,this.mCurrentLine.scale_mode,this.mCurrentLine.miter_limit));
		this.mCurrentLine.point_idx0 = this.mCurrentLine.point_idx1 = -1;
		$s.pop();
	}
	,ClosePolygon: function(inCancelFill) {
		$s.push("jeash.display.Graphics::ClosePolygon");
		var $spos = $s.length;
		var l = this.mPoints.length;
		if(l > 0) {
			if(l > 1) {
				if(this.mFilling && l > 2) {
					if(this.mPoints[this.mLastMoveID].x != this.mPoints[l - 1].x || this.mPoints[this.mLastMoveID].y != this.mPoints[l - 1].y) this.lineTo(this.mPoints[this.mLastMoveID].x,this.mPoints[this.mLastMoveID].y);
				}
				this.AddLineSegment();
				var drawable = { points : this.mPoints, fillColour : this.mFillColour, fillAlpha : this.mFillAlpha, solidGradient : this.mSolidGradient, bitmap : this.mBitmap, lineJobs : this.mLineJobs};
				this.AddDrawable(drawable);
			}
			this.mLineJobs = [];
			this.mPoints = [];
		}
		if(inCancelFill) {
			this.mFillAlpha = 0;
			this.mSolidGradient = null;
			this.mBitmap = null;
			this.mFilling = false;
		}
		this.jeashChanged = true;
		if(!this.mBoundsDirty) {
			this.mBoundsDirty = true;
			if(this.owner != null) this.owner.jeashInvalidateBounds();
		}
		$s.pop();
	}
	,drawGraphicsData: function(points) {
		$s.push("jeash.display.Graphics::drawGraphicsData");
		var $spos = $s.length;
		var _g = 0;
		while(_g < points.length) {
			var data = points[_g];
			++_g;
			if(data == null) this.mFilling = true; else switch(data.jeashGraphicsDataType) {
			case jeash.display.GraphicsDataType.STROKE:
				var stroke = data;
				if(stroke.fill == null) this.lineStyle(stroke.thickness,0,1.,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit); else switch(stroke.fill.jeashGraphicsFillType) {
				case jeash.display.GraphicsFillType.SOLID_FILL:
					var fill = stroke.fill;
					this.lineStyle(stroke.thickness,fill.color,fill.alpha,stroke.pixelHinting,stroke.scaleMode,stroke.caps,stroke.joints,stroke.miterLimit);
					break;
				case jeash.display.GraphicsFillType.GRADIENT_FILL:
					var fill = stroke.fill;
					this.lineGradientStyle(fill.type,fill.colors,fill.alphas,fill.ratios,fill.matrix,fill.spreadMethod,fill.interpolationMethod,fill.focalPointRatio);
					break;
				}
				break;
			case jeash.display.GraphicsDataType.PATH:
				var path = data;
				var j = 0;
				var _g2 = 0, _g1 = path.commands.length;
				while(_g2 < _g1) {
					var i = _g2++;
					var command = path.commands[i];
					switch(command) {
					case 1:
						this.moveTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 2:
						this.lineTo(path.data[j],path.data[j + 1]);
						j = j + 2;
						break;
					case 3:
						this.curveTo(path.data[j],path.data[j + 1],path.data[j + 2],path.data[j + 3]);
						j = j + 4;
						break;
					}
				}
				break;
			case jeash.display.GraphicsDataType.SOLID:
				var fill = data;
				this.beginFill(fill.color,fill.alpha);
				break;
			case jeash.display.GraphicsDataType.GRADIENT:
				var fill = data;
				this.beginGradientFill(fill.type,fill.colors,fill.alphas,fill.ratios,fill.matrix,fill.spreadMethod,fill.interpolationMethod,fill.focalPointRatio);
				break;
			}
		}
		$s.pop();
	}
	,drawTiles: function(sheet,xyid,smooth,flags) {
		$s.push("jeash.display.Graphics::drawTiles");
		var $spos = $s.length;
		if(flags == null) flags = 0;
		if(smooth == null) smooth = false;
		this.jeashIsTile = true;
		jeash.Lib.jeashDrawSurfaceRect(sheet.jeashSurface,this.jeashSurface,xyid[0],xyid[1],sheet.jeashTileRects[xyid[2]]);
		if(flags != 0) {
			if((flags & 1) == 1) jeash.Lib.jeashSetSurfaceScale(this.jeashSurface,xyid[3]);
			if((flags & 2) == 2) jeash.Lib.jeashSetSurfaceRotation(this.jeashSurface,xyid[4]);
			if((flags & 8) == 8) jeash.Lib.jeashSetSurfaceOpacity(this.jeashSurface,xyid[8]);
		}
		$s.pop();
	}
	,markBoundsClean: function() {
		$s.push("jeash.display.Graphics::markBoundsClean");
		var $spos = $s.length;
		this.mBoundsDirty = false;
		$s.pop();
	}
	,markBoundsDirty: function() {
		$s.push("jeash.display.Graphics::markBoundsDirty");
		var $spos = $s.length;
		if(!this.mBoundsDirty) {
			this.mBoundsDirty = true;
			if(this.owner != null) this.owner.jeashInvalidateBounds();
		}
		$s.pop();
	}
	,getContext: function() {
		$s.push("jeash.display.Graphics::getContext");
		var $spos = $s.length;
		try {
			var $tmp = this.jeashSurface.getContext("2d");
			$s.pop();
			return $tmp;
		} catch( e ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			jeash.Lib.trace("2d canvas API not implemented for: " + this.jeashSurface);
			$s.pop();
			return null;
		}
		$s.pop();
	}
	,jeashAdjustSurface: function() {
		$s.push("jeash.display.Graphics::jeashAdjustSurface");
		var $spos = $s.length;
		var width = Math.ceil(this.jeashExtent.width - this.jeashExtent.x);
		var height = Math.ceil(this.jeashExtent.height - this.jeashExtent.y);
		if(width > 5000 || height > 5000) {
			$s.pop();
			return;
		}
		var dstCanvas = js.Lib.document.createElement("canvas");
		var ctx = dstCanvas.getContext("2d");
		dstCanvas.width = width;
		dstCanvas.height = height;
		jeash.Lib.jeashDrawToSurface(this.jeashSurface,dstCanvas);
		if(jeash.Lib.jeashIsOnStage(this.jeashSurface)) {
			jeash.Lib.jeashAppendSurface(dstCanvas);
			jeash.Lib.jeashCopyStyle(this.jeashSurface,dstCanvas);
			jeash.Lib.jeashSwapSurface(this.jeashSurface,dstCanvas);
			jeash.Lib.jeashRemoveSurface(this.jeashSurface);
		}
		this.jeashSurface = dstCanvas;
		$s.pop();
	}
	,__class__: jeash.display.Graphics
}
de.polygonal.core.time.TimebaseEvent = $hxClasses["de.polygonal.core.time.TimebaseEvent"] = function() { }
de.polygonal.core.time.TimebaseEvent.__name__ = ["de","polygonal","core","time","TimebaseEvent"];
de.polygonal.core.time.TimebaseEvent.getName = function(x) {
	$s.push("de.polygonal.core.time.TimebaseEvent::getName");
	var $spos = $s.length;
	var output = new Array();
	var mask = 1;
	if((x & mask) > 0) output.push("TICK");
	var mask1 = 2;
	if((x & mask1) > 0) output.push("RENDER");
	var mask2 = 4;
	if((x & mask2) > 0) output.push("HALT");
	var mask3 = 8;
	if((x & mask3) > 0) output.push("CLAMP");
	var mask4 = 16;
	if((x & mask4) > 0) output.push("RESUME");
	var mask5 = 32;
	if((x & mask5) > 0) output.push("FREEZE_BEGIN");
	var mask6 = 64;
	if((x & mask6) > 0) output.push("FREEZE_END");
	$s.pop();
	return output;
	$s.pop();
}
de.polygonal.core.time.TimebaseEvent.group = function(x) {
	$s.push("de.polygonal.core.time.TimebaseEvent::group");
	var $spos = $s.length;
	var $tmp = x >>> 27;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.TimebaseEvent.has = function(x) {
	$s.push("de.polygonal.core.time.TimebaseEvent::has");
	var $spos = $s.length;
	var $tmp = 0 == x >>> 27;
	$s.pop();
	return $tmp;
	$s.pop();
}
de.polygonal.core.time.TimebaseEvent.prototype = {
	__class__: de.polygonal.core.time.TimebaseEvent
}
js.Boot.__res = {}
$s = [];
$e = [];
js.Boot.__init();
{
	String.prototype.__class__ = $hxClasses["String"] = String;
	String.__name__ = ["String"];
	Array.prototype.__class__ = $hxClasses["Array"] = Array;
	Array.__name__ = ["Array"];
	Int = $hxClasses["Int"] = { __name__ : ["Int"]};
	Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
	Float = $hxClasses["Float"] = Number;
	Float.__name__ = ["Float"];
	Bool = $hxClasses["Bool"] = { __ename__ : ["Bool"]};
	Class = $hxClasses["Class"] = { __name__ : ["Class"]};
	Enum = { };
	Void = $hxClasses["Void"] = { __ename__ : ["Void"]};
}
{
	/*! jQuery v1.6.4 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&&f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i<j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&&a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&&a.type==="click")){a.namespace&&(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i<s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j<k;j++){m=e[j];for(i=0;i<s.length;i++){g=s[i];if(m.selector===g.selector&&(!n||n.test(g.namespace))&&!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&&f.contains(h,d)&&(d=h);(!d||d!==h)&&p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j<k;j++){e=p[j];if(c&&e.level>c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&&(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&&(d==="queue"||!f.data(a,g,b,!0))&&(d==="mark"||!f.data(a,h,b,!0))&&setTimeout(function(){!f.data(a,g,b,!0)&&!f.data(a,h,b,!0)&&(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(j,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.4",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;B.resolveWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!E.call(a,"constructor")&&!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c<d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&&(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&&(C=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&&(k=b,b=0);for(g=0,h=c.length;g<h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&&a.push(i);k&&e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&&!b&&!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&&f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&&a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length>1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred();if(d>1){for(;c<d;c++)b[c]&&f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&&g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&&f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&&f.expando;if((!m||e&&m&&l[m]&&!l[m][i])&&j&&d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&&(g[i]||(g[i]={}),g=g[i]),d!==b&&(g[f.camelCase(c)]=d);if(c==="events"&&!g[c])return g[i]&&g[i].events;j?(h=g[c],h==null&&(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&&(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h<i;h++)g=e[h].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&&this.length&&(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&&j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&&(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&&(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(n," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&&"get"in c&&(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c<0)return null;for(var h=g?c:0,i=g?c+1:e.length;h<i;h++){var j=e[h];if(j.selected&&(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&&(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&&!d.length&&e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&&(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&&(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&&"set"in i&&j&&(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&&"get"in i&&j&&(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&&(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&&(c=f.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(u&&f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&&f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&&(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&&"set"in h&&(g=h.set(a,d,c))!==b?g:a[c]=d:h&&"get"in h&&(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&&(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")>-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&&a.attachEvent("on"+l,k)}p.add&&(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&&a.nodeType!==8){d===!1&&(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&&f._data(a),t=s&&s.events;if(!s||!t)return;c&&c.type&&(d=c.handler,c=c.type);if(!c||typeof c=="string"&&c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")<0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j<p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j<p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&&p.splice(j--,1),o.remove&&o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&&p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&&f.removeEvent(a,h,s.handle),g=null,delete 
t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&&(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&&f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")>=0&&(h=h.slice(0,-1),j=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if(!!e&&!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&&b.events&&b.events[h]&&f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")<0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&&m.apply(k,d),l&&f.acceptData(k)&&k[l]&&k[l].apply(k,d)===!1&&(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&&a}while(k&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)){try{l&&e[h]&&(n=e[l],n&&(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&&(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h<i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&&(c.result=k,k===!1&&(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&&a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&&i.scrollLeft||j&&j.scrollLeft||0)-(i&&i.clientLeft||j&&j.clientLeft||0),a.pageY=a.clientY+(i&&i.scrollTop||j&&j.scrollTop||0)-(i&&i.clientTop||j&&j.clientTop||0)}a.which==null&&(a.charCode!=null||a.keyCode!=null)&&(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=a.button&1?1:a.button&2?3:a.button&4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?D:C):this.type=a,b&&f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&&c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&&a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="submit"||c==="image")&&f(b).closest("form").length&&J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="text"||c==="password")&&f(b).closest("form").length&&a.keyCode===13&&J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex>-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&&(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&&!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&&f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&&I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&&!f.nodeName(b,"textarea")||a.keyCode===32&&(c==="checkbox"||c==="radio")||c==="select-multiple")&&I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&&c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i<j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&&!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d<e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&&!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&&!a&&g&&g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&&(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p<q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g<h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&&!f&&(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length>1&&m.exec(b))if(x.length===2&&l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&&(b+=x.shift()),j=v(b,j)}else{!g&&x.length>1&&d.nodeType===9&&!w&&l.match.ID.test(x[0])&&!l.match.ID.test(x[x.length-1])&&(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&&(x[0]==="~"||x[0]==="+")&&d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length>0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&&(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&&d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&&(n[t]===!0||n[t].nodeType===1&&k.contains(d,n[t]))&&f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&&n[t].nodeType===1&&f.push(j[t]);else p(n,f);o&&(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e<f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);while(a&&c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&&f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&&(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&o!=null?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!j.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&&!j.test(b)&&(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&&f===0)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&&j/e>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c<f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&&(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&&!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&&l.find.CLASS&&e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return p([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&"):e.setAttribute("id",o),r&&q&&(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g<h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&&a.length){for(d=0,e=a.length;d<e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&&g.ownerDocument&&g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)>-1:f(g).is(h))&&c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(l?l.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!T[a]?f.unique(e):e,(this.length>1||P.test(d))&&O.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*<!(?:\[CDATA\[|\-\-)/,be={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof a[0]=="string"&&a[0].length<512&&i===c&&a[0].charAt(0)==="<"&&!ba.test(a[0])&&(f.support.checkClone||!bb.test(a[0]))&&(g=!0,h=f.fragments[a[0]],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean
(a,i,e,d)),g&&(f.fragments[a[0]]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&&bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&&f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&&d[c][e];if(b&&b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&&(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&&j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=br.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bx=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;!bp.test(d)&&bq.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&])_=[^&]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bJ,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&&(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&&r[2]==bS[2]&&(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bI.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(ca.test(b.url)||e&&ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(ca,l),b.url===j&&(e&&(k=k.replace(ca,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,cb&&delete cd[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&&(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d<e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&&!f._data(this[d],"olddisplay")&&f._data(this[d],"olddisplay",g)}for(d=0;d<e;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&&(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&&(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&&this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&&f.timers.push(g)&&!cl&&(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b>=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&&(c=!1);if(c){e.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&&f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.offset.supportsFixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&&(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!ct.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);;
	var q = window.jQuery;
	js.JQuery = q;
	q.fn.iterator = function() {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var $tmp = { pos : 0, j : this, hasNext : function() {
			$s.push("de.polygonal.core.time.TimebaseEvent::has@322");
			var $spos = $s.length;
			var $tmp = this.pos < this.j.length;
			$s.pop();
			return $tmp;
			$s.pop();
		}, next : function() {
			$s.push("de.polygonal.core.time.TimebaseEvent::has@322");
			var $spos = $s.length;
			var $tmp = $(this.j[this.pos++]);
			$s.pop();
			return $tmp;
			$s.pop();
		}};
		$s.pop();
		return $tmp;
		$s.pop();
	};
}
haxe.Resource.content = [];
{
	Xml.Element = "element";
	Xml.PCData = "pcdata";
	Xml.CData = "cdata";
	Xml.Comment = "comment";
	Xml.DocType = "doctype";
	Xml.Prolog = "prolog";
	Xml.Document = "document";
}
js["XMLHttpRequest"] = window.XMLHttpRequest?XMLHttpRequest:window.ActiveXObject?function() {
	$s.push("de.polygonal.core.time.TimebaseEvent::has");
	var $spos = $s.length;
	try {
		var $tmp = new ActiveXObject("Msxml2.XMLHTTP");
		$s.pop();
		return $tmp;
	} catch( e ) {
		$e = [];
		while($s.length >= $spos) $e.unshift($s.pop());
		$s.push($e[0]);
		try {
			var $tmp = new ActiveXObject("Microsoft.XMLHTTP");
			$s.pop();
			return $tmp;
		} catch( e1 ) {
			$e = [];
			while($s.length >= $spos) $e.unshift($s.pop());
			$s.push($e[0]);
			throw "Unable to create XMLHttpRequest object.";
		}
	}
	$s.pop();
}:(function($this) {
	var $r;
	throw "Unable to create XMLHttpRequest object.";
	return $r;
}(this));
{
	js.Lib.document = document;
	js.Lib.window = window;
	onerror = function(msg,url,line) {
		var stack = $s.copy();
		var f = js.Lib.onerror;
		$s.splice(0,$s.length);
		if( f == null ) {
			var i = stack.length;
			var s = "";
			while( --i >= 0 )
				s += "Called from "+stack[i]+"\n";
			alert(msg+"\n\n"+s);
			return false;
		}
		return f(msg,stack);
	}
}
{
	var d = Date;
	d.now = function() {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var $tmp = new Date();
		$s.pop();
		return $tmp;
		$s.pop();
	};
	d.fromTime = function(t) {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var d1 = new Date();
		d1["setTime"](t);
		$s.pop();
		return d1;
		$s.pop();
	};
	d.fromString = function(s) {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		switch(s.length) {
		case 8:
			var k = s.split(":");
			var d1 = new Date();
			d1["setTime"](0);
			d1["setUTCHours"](k[0]);
			d1["setUTCMinutes"](k[1]);
			d1["setUTCSeconds"](k[2]);
			$s.pop();
			return d1;
		case 10:
			var k = s.split("-");
			var $tmp = new Date(k[0],k[1] - 1,k[2],0,0,0);
			$s.pop();
			return $tmp;
		case 19:
			var k = s.split(" ");
			var y = k[0].split("-");
			var t = k[1].split(":");
			var $tmp = new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
			$s.pop();
			return $tmp;
		default:
			throw "Invalid date format : " + s;
		}
		$s.pop();
	};
	d.prototype["toString"] = function() {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var date = this;
		var m = date.getMonth() + 1;
		var d1 = date.getDate();
		var h = date.getHours();
		var mi = date.getMinutes();
		var s = date.getSeconds();
		var $tmp = date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d1 < 10?"0" + d1:"" + d1) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
		$s.pop();
		return $tmp;
		$s.pop();
	};
	d.prototype.__class__ = $hxClasses["Date"] = d;
	d.__name__ = ["Date"];
}
{
	Math.__name__ = ["Math"];
	Math.NaN = Number["NaN"];
	Math.NEGATIVE_INFINITY = Number["NEGATIVE_INFINITY"];
	Math.POSITIVE_INFINITY = Number["POSITIVE_INFINITY"];
	$hxClasses["Math"] = Math;
	Math.isFinite = function(i) {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var $tmp = isFinite(i);
		$s.pop();
		return $tmp;
		$s.pop();
	};
	Math.isNaN = function(i) {
		$s.push("de.polygonal.core.time.TimebaseEvent::has");
		var $spos = $s.length;
		var $tmp = isNaN(i);
		$s.pop();
		return $tmp;
		$s.pop();
	};
}
com.wighawag.log.EventSignaler.instance = new com.wighawag.log.EventSignaler();
com.wighawag.log.EventSignaler.event = new hsl.haxe.DirectSignaler(com.wighawag.log.EventSignaler.instance);
com.wighawag.log.EventSignaler.warning = new hsl.haxe.DirectSignaler(com.wighawag.log.EventSignaler.instance);
com.wighawag.log.EventSignaler.error = new hsl.haxe.DirectSignaler(com.wighawag.log.EventSignaler.instance);
com.wighawag.log.EventSignaler.criticalError = new hsl.haxe.DirectSignaler(com.wighawag.log.EventSignaler.instance);
de.polygonal.core.event.Observable._nextGUID = 1;
de.polygonal.ui.UI.BIT_CTRL = 1;
de.polygonal.ui.UI.BIT_ALT = 2;
de.polygonal.ui.UI.BIT_SHIFT = 4;
de.polygonal.ui.UI.BIT_MOUSE_DOWN = 8;
jeash.errors.Error.DEFAULT_TO_STRING = "Error";
haxe.xml.Check.blanks = new EReg("^[ \r\n\t]*$","");
jeash.events.Listener.sIDs = 1;
de.polygonal.ds.Bits.BIT_01 = 1;
de.polygonal.ds.Bits.BIT_02 = 2;
de.polygonal.ds.Bits.BIT_03 = 4;
de.polygonal.ds.Bits.BIT_04 = 8;
de.polygonal.ds.Bits.BIT_05 = 16;
de.polygonal.ds.Bits.BIT_06 = 32;
de.polygonal.ds.Bits.BIT_07 = 64;
de.polygonal.ds.Bits.BIT_08 = 128;
de.polygonal.ds.Bits.BIT_09 = 256;
de.polygonal.ds.Bits.BIT_10 = 512;
de.polygonal.ds.Bits.BIT_11 = 1024;
de.polygonal.ds.Bits.BIT_12 = 2048;
de.polygonal.ds.Bits.BIT_13 = 4096;
de.polygonal.ds.Bits.BIT_14 = 8192;
de.polygonal.ds.Bits.BIT_15 = 16384;
de.polygonal.ds.Bits.BIT_16 = 32768;
de.polygonal.ds.Bits.BIT_17 = 65536;
de.polygonal.ds.Bits.BIT_18 = 131072;
de.polygonal.ds.Bits.BIT_19 = 262144;
de.polygonal.ds.Bits.BIT_20 = 524288;
de.polygonal.ds.Bits.BIT_21 = 1048576;
de.polygonal.ds.Bits.BIT_22 = 2097152;
de.polygonal.ds.Bits.BIT_23 = 4194304;
de.polygonal.ds.Bits.BIT_24 = 8388608;
de.polygonal.ds.Bits.BIT_25 = 16777216;
de.polygonal.ds.Bits.BIT_26 = 33554432;
de.polygonal.ds.Bits.BIT_27 = 67108864;
de.polygonal.ds.Bits.BIT_28 = 134217728;
de.polygonal.ds.Bits.BIT_29 = 268435456;
de.polygonal.ds.Bits.BIT_30 = 536870912;
de.polygonal.ds.Bits.BIT_31 = 1073741824;
de.polygonal.ds.Bits.BIT_32 = -2147483648;
de.polygonal.ds.Bits.ALL = -1;
jeash.text.Font.DEFAULT_FONT_SCALE = 9.0;
jeash.text.Font.DEFAULT_FONT_NAME = "Bitstream_Vera_Sans";
jeash.text.Font.DEFAULT_CLASS_NAME = "jeash.text.Font";
jeash.text.Font.DEFAULT_FONT_DATA = "q:55oy6:ascentd950.5y4:dataad84d277.5d564d277.5d564d320.5d293d1024d187.5d1024d442.5d362.5d84d362.5d84d277.5hy6:_widthd651.5y4:xMaxd564y4:xMind84y4:yMaxd746.5y4:yMind0y7:_heightd662.5y7:leadingd168y7:descentd241.5y8:charCodei55y15:leftsideBearingd84y12:advanceWidthd651.5y8:commandsai1i2i2i2i2i2i2i2hg:111oR0d950.5R1ad313.5d528.5d239.5d528.5d196.5d586.25d153.5d644d153.5d744.5d153.5d845d196.25d902.75d239d960.5d313.5d960.5d387d960.5d430d902.5d473d844.5d473d744.5d473d645d430d586.75d387d528.5d313.5d528.5d313.5d450.5d433.5d450.5d502d528.5d570.5d606.5d570.5d744.5d570.5d882d502d960.25d433.5d1038.5d313.5d1038.5d193d1038.5d124.75d960.25d56.5d882d56.5d744.5d56.5d606.5d124.75d528.5d193d450.5d313.5d450.5hR2d626.5R3d570.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i111R11d56.5R12d626.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:54oR0d950.5R1ad338d610.5d270d610.5d230.25d657d190.5d703.5d190.5d784.5d190.5d865d230.25d911.75d270d958.5d338d958.5d406d958.5d445.75d911.75d485.5d865d485.5d784.5d485.5d703.5d445.75d657d406d610.5d338d610.5d538.5d294d538.5d386d500.5d368d461.75d358.5d423d349d385d349d285d349d232.25d416.5d179.5d484d172d620.5d201.5d577d246d553.75d290.5d530.5d344d530.5d456.5d530.5d521.75d598.75d587d667d587d784.5d587d899.5d519d969d451d1038.5d338d1038.5d208.5d1038.5d140d939.25d71.5d840d71.5d651.5d71.5d474.5d155.5d369.25d239.5d264d381d264d419d264d457.75d271.5d496.5d279d538.5d294hR2d651.5R3d587R4d71.5R5d760R6d-14.5R7d688.5R8d168R9d241.5R10i54R11d71.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3hg:110oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i110R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:53oR0d950.5R1ad110.5d277.5d507d277.5d507d362.5d203d362.5d203d545.5d225d538d247d534.25d269d530.5d291d530.5d416d530.5d489d599d562d667.5d562d784.5d562d905d487d971.75d412d1038.5d275.5d1038.5d228.5d1038.5d179.75d1030.5d131d1022.5d79d1006.5d79d905d124d929.5d172d941.5d220d953.5d273.5d953.5d360d953.5d410.5d908d461d862.5d461d784.5d461d706.5d410.5d661d360d615.5d273.5d615.5d233d615.5d192.75d624.5d152.5d633.5d110.5d652.5d110.5d277.5hR2d651.5R3d562R4d79R5d746.5R6d-14.5R7d667.5R8d168R9d241.5R10i53R11d79R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i2hg:109oR0d950.5R1ad532.5d571.5d567d509.5d615d480d663d450.5d728d450.5d815.5d450.5d863d511.75d910.5d573d910.5d686d910.5d1024d818d1024d818d689d818d608.5d789.5d569.5d761d530.5d702.5d530.5d631d530.5d589.5d578d548d625.5d548d707.5d548d1024d455.5d1024d455.5d689d455.5d608d427d569.25d398.5d530.5d339d530.5d268.5d530.5d227d578.25d185.5d626d185.5d707.5d185.5d1024d93d1024d93d464d185.5d464d185.5d551d217d499.5d261d475d305d450.5d365.5d450.5d426.5d450.5d469.25d481.5d512d512.5d532.5d571.5hR2d997.5R3d910.5R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i109R11d93R12d997.5R13ai1i3i3i3i3i2i2i2i3i3i3i3i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:52oR0d950.5R1ad387d365.5d132d764d387d764d387d365.5d360.5d277.5d487.5d277.5d487.5d764d594d764d594d848d487.5d848d487.5d1024d387d1024d387d848d50d848d50d750.5d360.5d277.5hR2d651.5R3d594R4d50R5d746.5R6d0R7d696.5R8d168R9d241.5R10i52R11d50R12d651.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2hg:108oR0d950.5R1ad96.5d246d188.5d246d188.5d1024d96.5d1024d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i108R11d96.5R12d284.5R13ai1i2i2i2i2hg:51oR0d950.5R1ad415.5d621.5d488d637d528.75d686d569.5d735d569.5d807d569.5d917.5d493.5d978d417.5d1038.5d277.5d1038.5d230.5d1038.5d180.75d1029.25d131d1020d78d1001.5d78d904d120d928.5d170d941d220d953.5d274.5d953.5d369.5d953.5d419.25d916d469d878.5d469d807d469d741d422.75d703.75d376.5d666.5d294d666.5d207d666.5d207d583.5d298d583.5d372.5d583.5d412d553.75d451.5d524d451.5d468d451.5d410.5d410.75d379.75d370d349d294d349d252.5d349d205d358d157.5d367d100.5d386d100.5d296d158d280d208.25d272d258.5d264d303d264d418d264d485d316.25d552d368.5d552d457.5d552d519.5d516.5d562.25d481d605d415.5d621.5hR2d651.5R3d569.5R4d78R5d760R6d-14.5R7d682R8d168R9d241.5R10i51R11d78R12d651.5R13ai1i3i3i3i3i3i3i2i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:107oR0d950.5R1ad93d246d185.5d246d185.5d705.5d460d464d577.5d464d280.5d726d590d1024d470d1024d185.5d750.5d185.5d1024d93d1024d93d246hR2d593R3d590R4d93R5d778R6d0R7d685R8d168R9d241.5R10i107R11d93R12d593R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:50oR0d950.5R1ad196.5d939d549d939d549d1024d75d1024d75d939d132.5d879.5d231.75d779.25d331d679d356.5d650d405d595.5d424.25d557.75d443.5d520d443.5d483.5d443.5d424d401.75d386.5d360d349d293d349d245.5d349d192.75d365.5d140d382d80d415.5d80d313.5d141d289d194d276.5d247d264d291d264d407d264d476d322d545d380d545d477d545d523d527.75d564.25d510.5d605.5d465d661.5d452.5d676d385.5d745.25d318.5d814.5d196.5d939hR2d651.5R3d549R4d75R5d760R6d0R7d685R8d168R9d241.5R10i50R11d75R12d651.5R13ai1i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:106oR0d950.5R1ad96.5d464d188.5d464d188.5d1034d188.5d1141d147.75d1189d107d1237d16.5d1237d-18.5d1237d-18.5d1159d6d1159d58.5d1159d77.5d1134.75d96.5d1110.5d96.5d1034d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d-18.5R5d778R6d-213R7d796.5R8d168R9d241.5R10i106R11d-18.5R12d284.5R13ai1i2i2i3i3i2i2i2i3i3i2i1i2i2i2i2hg:49oR0d950.5R1ad127d939d292d939d292d369.5d112.5d405.5d112.5d313.5d291d277.5d392d277.5d392d939d557d939d557d1024d127d1024d127d939hR2d651.5R3d557R4d112.5R5d746.5R6d0R7d634R8d168R9d241.5R10i49R11d112.5R12d651.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:105oR0d950.5R1ad96.5d464d188.5d464d188.5d1024d96.5d1024d96.5d464d96.5d246d188.5d246d188.5d362.5d96.5d362.5d96.5d246hR2d284.5R3d188.5R4d96.5R5d778R6d0R7d681.5R8d168R9d241.5R10i105R11d96.5R12d284.5R13ai1i2i2i2i2i1i2i2i2i2hg:48oR0d950.5R1ad325.5d344d247.5d344d208.25d420.75d169d497.5d169d651.5d169d805d208.25d881.75d247.5d958.5d325.5d958.5d404d958.5d443.25d881.75d482.5d805d482.5d651.5d482.5d497.5d443.25d420.75d404d344d325.5d344d325.5d264d451d264d517.25d363.25d583.5d462.5d583.5d651.5d583.5d840d517.25d939.25d451d1038.5d325.5d1038.5d200d1038.5d133.75d939.25d67.5d840d67.5d651.5d67.5d462.5d133.75d363.25d200d264d325.5d264hR2d651.5R3d583.5R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i48R11d67.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:104oR0d950.5R1ad562d686d562d1024d470d1024d470d689d470d609.5d439d570d408d530.5d346d530.5d271.5d530.5d228.5d578d185.5d625.5d185.5d707.5d185.5d1024d93d1024d93d246d185.5d246d185.5d551d218.5d500.5d263.25d475.5d308d450.5d366.5d450.5d463d450.5d512.5d510.25d562d570d562d686hR2d649R3d562R4d93R5d778R6d0R7d685R8d168R9d241.5R10i104R11d93R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:47oR0d950.5R1ad260d277.5d345d277.5d85d1119d0d1119d260d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i47R11d0R12d345R13ai1i2i2i2i2hg:103oR0d950.5R1ad465d737.5d465d637.5d423.75d582.5d382.5d527.5d308d527.5d234d527.5d192.75d582.5d151.5d637.5d151.5d737.5d151.5d837d192.75d892d234d947d308d947d382.5d947d423.75d892d465d837d465d737.5d557d954.5d557d1097.5d493.5d1167.25d430d1237d299d1237d250.5d1237d207.5d1229.75d164.5d1222.5d124d1207.5d124d1118d164.5d1140d204d1150.5d243.5d1161d284.5d1161d375d1161d420d1113.75d465d1066.5d465d971d465d925.5d436.5d975d392d999.5d347.5d1024d285.5d1024d182.5d1024d119.5d945.5d56.5d867d56.5d737.5d56.5d607.5d119.5d529d182.5d450.5d285.5d450.5d347.5d450.5d392d475d436.5d499.5d465d549d465d464d557d464d557d954.5hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i103R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i2i3i3i3i3i2i3i3i3i3i3i3i3i3i2i2i2hg:46oR0d950.5R1ad109.5d897d215d897d215d1024d109.5d1024d109.5d897hR2d325.5R3d215R4d109.5R5d127R6d0R7d17.5R8d168R9d241.5R10i46R11d109.5R12d325.5R13ai1i2i2i2i2hg:102oR0d950.5R1ad380d246d380d322.5d292d322.5d242.5d322.5d223.25d342.5d204d362.5d204d414.5d204d464d355.5d464d355.5d535.5d204d535.5d204d1024d111.5d1024d111.5d535.5d23.5d535.5d23.5d464d111.5d464d111.5d425d111.5d331.5d155d288.75d198.5d246d293d246d380d246hR2d360.5R3d380R4d23.5R5d778R6d0R7d754.5R8d168R9d241.5R10i102R11d23.5R12d360.5R13ai1i2i2i3i3i2i2i2i2i2i2i2i2i2i2i2i3i3i2hg:45oR0d950.5R1ad50d702.5d319.5d702.5d319.5d784.5d50d784.5d50d702.5hR2d369.5R3d319.5R4d50R5d321.5R6d239.5R7d271.5R8d168R9d241.5R10i45R11d50R12d369.5R13ai1i2i2i2i2hg:101oR0d950.5R1ad575.5d721d575.5d766d152.5d766d158.5d861d209.75d910.75d261d960.5d352.5d960.5d405.5d960.5d455.25d947.5d505d934.5d554d908.5d554d995.5d504.5d1016.5d452.5d1027.5d400.5d1038.5d347d1038.5d213d1038.5d134.75d960.5d56.5d882.5d56.5d749.5d56.5d612d130.75d531.25d205d450.5d331d450.5d444d450.5d509.75d523.25d575.5d596d575.5d721d483.5d694d482.5d618.5d441.25d573.5d400d528.5d332d528.5d255d528.5d208.75d572d162.5d615.5d155.5d694.5d483.5d694hR2d630R3d575.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i101R11d56.5R12d630R13ai1i2i2i3i3i3i3i2i3i3i3i3i3i3i3i3i1i3i3i3i3i2hg:44oR0d950.5R1ad120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d325.5R3d225.5R4d79R5d127R6d-119R7d48R8d168R9d241.5R10i44R11d79R12d325.5R13ai1i2i2i2i2i2i2hg:100oR0d950.5R1ad465d549d465d246d557d246d557d1024d465d1024d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5hR2d650R3d557R4d56.5R5d778R6d-14.5R7d721.5R8d168R9d241.5R10i100R11d56.5R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:43oR0d950.5R1ad471d382d471d660.5d749.5d660.5d749.5d745.5d471d745.5d471d1024d387d1024d387d745.5d108.5d745.5d108.5d660.5d387d660.5d387d382d471d382hR2d858R3d749.5R4d108.5R5d642R6d0R7d533.5R8d168R9d241.5R10i43R11d108.5R12d858R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:99oR0d950.5R1ad499.5d485.5d499.5d571.5d460.5d550d421.25d539.25d382d528.5d342d528.5d252.5d528.5d203d585.25d153.5d642d153.5d744.5d153.5d847d203d903.75d252.5d960.5d342d960.5d382d960.5d421.25d949.75d460.5d939d499.5d917.5d499.5d1002.5d461d1020.5d419.75d1029.5d378.5d1038.5d332d1038.5d205.5d1038.5d131d959d56.5d879.5d56.5d744.5d56.5d607.5d131.75d529d207d450.5d338d450.5d380.5d450.5d421d459.25d461.5d468d499.5d485.5hR2d563R3d499.5R4d56.5R5d573.5R6d-14.5R7d517R8d168R9d241.5R10i99R11d56.5R12d563R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:42oR0d950.5R1ad481.5d400.5d302d497.5d481.5d595d452.5d644d284.5d542.5d284.5d731d227.5d731d227.5d542.5d59.5d644d30.5d595d210d497.5d30.5d400.5d59.5d351d227.5d452.5d227.5d264d284.5d264d284.5d452.5d452.5d351d481.5d400.5hR2d512R3d481.5R4d30.5R5d760R6d293R7d729.5R8d168R9d241.5R10i42R11d30.5R12d512R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:98oR0d950.5R1ad498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d185.5d1024d93d1024d93d246d185.5d246d185.5d549hR2d650R3d594R4d93R5d778R6d-14.5R7d685R8d168R9d241.5R10i98R11d93R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:41oR0d950.5R1ad82d247d162d247d237d365d274.25d478d311.5d591d311.5d702.5d311.5d814.5d274.25d928d237d1041.5d162d1159d82d1159d148.5d1044.5d181.25d931.25d214d818d214d702.5d214d587d181.25d474.5d148.5d362d82d247hR2d399.5R3d311.5R4d82R5d777R6d-135R7d695R8d168R9d241.5R10i41R11d82R12d399.5R13ai1i2i3i3i3i3i2i3i3i3i3hg:97oR0d950.5R1ad351d742.5d239.5d742.5d196.5d768d153.5d793.5d153.5d855d153.5d904d185.75d932.75d218d961.5d273.5d961.5d350d961.5d396.25d907.25d442.5d853d442.5d763d442.5d742.5d351d742.5d534.5d704.5d534.5d1024d442.5d1024d442.5d939d411d990d364d1014.25d317d1038.5d249d1038.5d163d1038.5d112.25d990.25d61.5d942d61.5d861d61.5d766.5d124.75d718.5d188d670.5d313.5d670.5d442.5d670.5d442.5d661.5d442.5d598d400.75d563.25d359d528.5d283.5d528.5d235.5d528.5d190d540d144.5d551.5d102.5d574.5d102.5d489.5d153d470d200.5d460.25d248d450.5d293d450.5d414.5d450.5d474.5d513.5d534.5d576.5d534.5d704.5hR2d627.5R3d534.5R4d61.5R5d573.5R6d-14.5R7d512R8d168R9d241.5R10i97R11d61.5R12d627.5R13ai1i3i3i3i3i3i3i2i2i1i2i2i2i3i3i3i3i3i3i2i2i3i3i3i3i2i3i3i3i3hg:40oR0d950.5R1ad317.5d247d250.5d362d218d474.5d185.5d587d185.5d702.5d185.5d818d218.25d931.25d251d1044.5d317.5d1159d237.5d1159d162.5d1041.5d125.25d928d88d814.5d88d702.5d88d591d125d478d162d365d237.5d247d317.5d247hR2d399.5R3d317.5R4d88R5d777R6d-135R7d689R8d168R9d241.5R10i40R11d88R12d399.5R13ai1i3i3i3i3i2i3i3i3i3i2hg:96oR0d950.5R1ad183.5d205d324.5d392d248d392d85d205d183.5d205hR2d512R3d324.5R4d85R5d819R6d632R7d734R8d168R9d241.5R10i96R11d85R12d512R13ai1i2i2i2i2hg:39oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5hR2d281.5R3d183.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i39R11d98.5R12d281.5R13ai1i2i2i2i2hg:95oR0d950.5R1ad522d1194d522d1265.5d-10d1265.5d-10d1194d522d1194hR2d512R3d522R4d-10R5d-170R6d-241.5R7d-160R8d168R9d241.5R10i95R11d-10R12d512R13ai1i2i2i2i2hg:38oR0d950.5R1ad249d622.5d203.5d663d182.25d703.25d161d743.5d161d787.5d161d860.5d214d909d267d957.5d347d957.5d394.5d957.5d436d941.75d477.5d926d514d894d249d622.5d319.5d566.5d573.5d826.5d603d782d619.5d731.25d636d680.5d639d623.5d732d623.5d726d689.5d700d754d674d818.5d627.5d881.5d767d1024d641d1024d569.5d950.5d517.5d995d460.5d1016.75d403.5d1038.5d338d1038.5d217.5d1038.5d141d969.75d64.5d901d64.5d793.5d64.5d729.5d98d673.25d131.5d617d198.5d567.5d174.5d536d162d504.75d149.5d473.5d149.5d443.5d149.5d362.5d205d313.25d260.5d264d352.5d264d394d264d435.25d273d476.5d282d519d300d519d391d475.5d367.5d436d355.25d396.5d343d362.5d343d310d343d277.25d370.75d244.5d398.5d244.5d442.5d244.5d468d259.25d493.75d274d519.5d319.5d566.5hR2d798.5R3d767R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i38R11d64.5R12d798.5R13ai1i3i3i3i3i3i3i2i1i2i3i3i2i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3hg:94oR0d950.5R1ad478d277.5d749.5d556d649d556d429d358.5d209d556d108.5d556d380d277.5d478d277.5hR2d858R3d749.5R4d108.5R5d746.5R6d468R7d638R8d168R9d241.5R10i94R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:37oR0d950.5R1ad744.5d695.5d701d695.5d676.25d732.5d651.5d769.5d651.5d835.5d651.5d900.5d676.25d937.75d701d975d744.5d975d787d975d811.75d937.75d836.5d900.5d836.5d835.5d836.5d770d811.75d732.75d787d695.5d744.5d695.5d744.5d632d823.5d632d870d687d916.5d742d916.5d835.5d916.5d929d869.75d983.75d823d1038.5d744.5d1038.5d664.5d1038.5d618d983.75d571.5d929d571.5d835.5d571.5d741.5d618.25d686.75d665d632d744.5d632d228.5d327.5d185.5d327.5d160.75d364.75d136d402d136d467d136d533d160.5d570d185d607d228.5d607d272d607d296.75d570d321.5d533d321.5d467d321.5d402.5d296.5d365d271.5d327.5d228.5d327.5d680d264d760d264d293d1038.5d213d1038.5d680d264d228.5d264d307.5d264d354.5d318.75d401.5d373.5d401.5d467d401.5d561.5d354.75d616d308d670.5d228.5d670.5d149d670.5d102.75d615.75d56.5d561d56.5d467d56.5d374d103d319d149.5d264d228.5d264hR2d973R3d916.5R4d56.5R5d760R6d-14.5R7d703.5R8d168R9d241.5R10i37R11d56.5R12d973R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i1i2i2i2i2i1i3i3i3i3i3i3i3i3hg:93oR0d950.5R1ad311.5d246d311.5d1159d99.5d1159d99.5d1087.5d219d1087.5d219d317.5d99.5d317.5d99.5d246d311.5d246hR2d399.5R3d311.5R4d99.5R5d778R6d-135R7d678.5R8d168R9d241.5R10i93R11d99.5R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:36oR0d950.5R1ad346d1174.5d296d1174.5d295.5d1024d243d1023d190.5d1011.75d138d1000.5d85d978d85d888d136d920d188.25d936.25d240.5d952.5d296d953d296d725d185.5d707d135.25d664d85d621d85d546d85d464.5d139.5d417.5d194d370.5d296d363.5d296d246d346d246d346d362d392.5d364d436d371.75d479.5d379.5d521d393d521d480.5d479.5d459.5d435.75d448d392d436.5d346d434.5d346d648d459.5d665.5d513d710.5d566.5d755.5d566.5d833.5d566.5d918d509.75d966.75d453d1015.5d346d1023d346d1174.5d296d639d296d434d238d440.5d207.5d467d177d493.5d177d537.5d177d580.5d205.25d604.5d233.5d628.5d296d639d346d735d346d951.5d409.5d943d441.75d915.5d474d888d474d843d474d799d443.25d773d412.5d747d346d735hR2d651.5R3d566.5R4d85R5d778R6d-150.5R7d693R8d168R9d241.5R10i36R11d85R12d651.5R13ai1i2i2i3i3i2i3i3i2i3i3i3i3i2i2i2i3i3i2i3i3i2i3i3i3i3i2i1i2i3i3i3i3i1i2i3i3i3i3hg:92oR0d950.5R1ad85d277.5d345d1119d260d1119d0d277.5d85d277.5hR2d345R3d345R4d0R5d746.5R6d-95R7d746.5R8d168R9d241.5R10i92R11d0R12d345R13ai1i2i2i2i2hg:35oR0d950.5R1ad523.5d573.5d378d573.5d336d740.5d482.5d740.5d523.5d573.5d448.5d289d396.5d496.5d542.5d496.5d595d289d675d289d623.5d496.5d779.5d496.5d779.5d573.5d604d573.5d563d740.5d722d740.5d722d817d543.5d817d491.5d1024d411.5d1024d463d817d316.5d817d265d1024d184.5d1024d236.5d817d79d817d79d740.5d255d740.5d297d573.5d136d573.5d136d496.5d316.5d496.5d367.5d289d448.5d289hR2d858R3d779.5R4d79R5d735R6d0R7d656R8d168R9d241.5R10i35R11d79R12d858R13ai1i2i2i2i2i1i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2i2hg:91oR0d950.5R1ad88d246d300d246d300d317.5d180d317.5d180d1087.5d300d1087.5d300d1159d88d1159d88d246hR2d399.5R3d300R4d88R5d778R6d-135R7d690R8d168R9d241.5R10i91R11d88R12d399.5R13ai1i2i2i2i2i2i2i2i2hg:34oR0d950.5R1ad183.5d277.5d183.5d555d98.5d555d98.5d277.5d183.5d277.5d372.5d277.5d372.5d555d287.5d555d287.5d277.5d372.5d277.5hR2d471R3d372.5R4d98.5R5d746.5R6d469R7d648R8d168R9d241.5R10i34R11d98.5R12d471R13ai1i2i2i2i2i1i2i2i2i2hg:90oR0d950.5R1ad57.5d277.5d644d277.5d644d354.5d172d939d655.5d939d655.5d1024d46d1024d46d947d518d362.5d57.5d362.5d57.5d277.5hR2d701.5R3d655.5R4d46R5d746.5R6d0R7d700.5R8d168R9d241.5R10i90R11d46R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:33oR0d950.5R1ad154.5d897d256d897d256d1024d154.5d1024d154.5d897d154.5d277.5d256d277.5d256d605d246d783.5d165d783.5d154.5d605d154.5d277.5hR2d410.5R3d256R4d154.5R5d746.5R6d0R7d592R8d168R9d241.5R10i33R11d154.5R12d410.5R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:89oR0d950.5R1ad-2d277.5d106.5d277.5d313.5d584.5d519d277.5d627.5d277.5d363.5d668.5d363.5d1024d262d1024d262d668.5d-2d277.5hR2d625.5R3d627.5R4d-2R5d746.5R6d0R7d748.5R8d168R9d241.5R10i89R11d-2R12d625.5R13ai1i2i2i2i2i2i2i2i2i2hg:32oR0d950.5R1ahR2d325.5R3d0R4d0R5d0R6d0R7d0R8d168R9d241.5R10i32R11d0R12d325.5R13ahg:88oR0d950.5R1ad64.5d277.5d173d277.5d358.5d555d545d277.5d653.5d277.5d413.5d636d669.5d1024d561d1024d351d706.5d139.5d1024d30.5d1024d297d625.5d64.5d277.5hR2d701.5R3d669.5R4d30.5R5d746.5R6d0R7d716R8d168R9d241.5R10i88R11d30.5R12d701.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:87oR0d950.5R1ad34d277.5d136d277.5d293d908.5d449.5d277.5d563d277.5d720d908.5d876.5d277.5d979d277.5d791.5d1024d664.5d1024d507d376d348d1024d221d1024d34d277.5hR2d1012.5R3d979R4d34R5d746.5R6d0R7d712.5R8d168R9d241.5R10i87R11d34R12d1012.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:86oR0d950.5R1ad293d1024d8d277.5d113.5d277.5d350d906d587d277.5d692d277.5d407.5d1024d293d1024hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i86R11d8R12d700.5R13ai1i2i2i2i2i2i2i2hg:85oR0d950.5R1ad89d277.5d190.5d277.5d190.5d731d190.5d851d234d903.75d277.5d956.5d375d956.5d472d956.5d515.5d903.75d559d851d559d731d559d277.5d660.5d277.5d660.5d743.5d660.5d889.5d588.25d964d516d1038.5d375d1038.5d233.5d1038.5d161.25d964d89d889.5d89d743.5d89d277.5hR2d749.5R3d660.5R4d89R5d746.5R6d-14.5R7d657.5R8d168R9d241.5R10i85R11d89R12d749.5R13ai1i2i2i3i3i3i3i2i2i2i3i3i3i3i2hg:84oR0d950.5R1ad-3d277.5d628.5d277.5d628.5d362.5d363.5d362.5d363.5d1024d262d1024d262d362.5d-3d362.5d-3d277.5hR2d625.5R3d628.5R4d-3R5d746.5R6d0R7d749.5R8d168R9d241.5R10i84R11d-3R12d625.5R13ai1i2i2i2i2i2i2i2i2hg:83oR0d950.5R1ad548d302d548d400.5d490.5d373d439.5d359.5d388.5d346d341d346d258.5d346d213.75d378d169d410d169d469d169d518.5d198.75d543.75d228.5d569d311.5d584.5d372.5d597d485.5d618.5d539.25d672.75d593d727d593d818d593d926.5d520.25d982.5d447.5d1038.5d307d1038.5d254d1038.5d194.25d1026.5d134.5d1014.5d70.5d991d70.5d887d132d921.5d191d939d250d956.5d307d956.5d393.5d956.5d440.5d922.5d487.5d888.5d487.5d825.5d487.5d770.5d453.75d739.5d420d708.5d343d693d281.5d681d168.5d658.5d118d610.5d67.5d562.5d67.5d477d67.5d378d137.25d321d207d264d329.5d264d382d264d436.5d273.5d491d283d548d302hR2d650R3d593R4d67.5R5d760R6d-14.5R7d692.5R8d168R9d241.5R10i83R11d67.5R12d650R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:82oR0d950.5R1ad454.5d674d487d685d517.75d721d548.5d757d579.5d820d682d1024d573.5d1024d478d832.5d441d757.5d406.25d733d371.5d708.5d311.5d708.5d201.5d708.5d201.5d1024d100.5d1024d100.5d277.5d328.5d277.5d456.5d277.5d519.5d331d582.5d384.5d582.5d492.5d582.5d563d549.75d609.5d517d656d454.5d674d201.5d360.5d201.5d625.5d328.5d625.5d401.5d625.5d438.75d591.75d476d558d476d492.5d476d427d438.75d393.75d401.5d360.5d328.5d360.5d201.5d360.5hR2d711.5R3d682R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i82R11d100.5R12d711.5R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i3i3i3i3i1i2i2i3i3i3i3i2hg:81oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d545d1010.5d678d1156d556d1156d445.5d1036.5d429d1037.5d420.25d1038d411.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.25d57.5d828d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d781.5d696.25d874d644d966.5d545d1010.5hR2d806R3d748.5R4d57.5R5d760R6d-132R7d702.5R8d168R9d241.5R10i81R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i2i2i2i3i3i3i3i3i3i3i3i3i3hg:80oR0d950.5R1ad201.5d360.5d201.5d641d328.5d641d399d641d437.5d604.5d476d568d476d500.5d476d433.5d437.5d397d399d360.5d328.5d360.5d201.5d360.5d100.5d277.5d328.5d277.5d454d277.5d518.25d334.25d582.5d391d582.5d500.5d582.5d611d518.25d667.5d454d724d328.5d724d201.5d724d201.5d1024d100.5d1024d100.5d277.5hR2d617.5R3d582.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i80R11d100.5R12d617.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2i2i2hg:79oR0d950.5R1ad403.5d346d293.5d346d228.75d428d164d510d164d651.5d164d792.5d228.75d874.5d293.5d956.5d403.5d956.5d513.5d956.5d577.75d874.5d642d792.5d642d651.5d642d510d577.75d428d513.5d346d403.5d346d403.5d264d560.5d264d654.5d369.25d748.5d474.5d748.5d651.5d748.5d828d654.5d933.25d560.5d1038.5d403.5d1038.5d246d1038.5d151.75d933.5d57.5d828.5d57.5d651.5d57.5d474.5d151.75d369.25d246d264d403.5d264hR2d806R3d748.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i79R11d57.5R12d806R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:78oR0d950.5R1ad100.5d277.5d236.5d277.5d567.5d902d567.5d277.5d665.5d277.5d665.5d1024d529.5d1024d198.5d399.5d198.5d1024d100.5d1024d100.5d277.5hR2d766R3d665.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i78R11d100.5R12d766R13ai1i2i2i2i2i2i2i2i2i2i2hg:77oR0d950.5R1ad100.5d277.5d251d277.5d441.5d785.5d633d277.5d783.5d277.5d783.5d1024d685d1024d685d368.5d492.5d880.5d391d880.5d198.5d368.5d198.5d1024d100.5d1024d100.5d277.5hR2d883.5R3d783.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i77R11d100.5R12d883.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:76oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d939d565d939d565d1024d100.5d1024d100.5d277.5hR2d570.5R3d565R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i76R11d100.5R12d570.5R13ai1i2i2i2i2i2i2hg:75oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d593d536.5d277.5d666.5d277.5d296d625.5d693d1024d560d1024d201.5d664.5d201.5d1024d100.5d1024d100.5d277.5hR2d671.5R3d693R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i75R11d100.5R12d671.5R13ai1i2i2i2i2i2i2i2i2i2i2i2hg:74oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d972d201.5d1107d150.25d1168d99d1229d-14.5d1229d-53d1229d-53d1144d-21.5d1144d45.5d1144d73d1106.5d100.5d1069d100.5d972d100.5d277.5hR2d302R3d201.5R4d-53R5d746.5R6d-205R7d799.5R8d168R9d241.5R10i74R11d-53R12d302R13ai1i2i2i3i3i2i2i2i3i3i2hg:73oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d1024d100.5d1024d100.5d277.5hR2d302R3d201.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i73R11d100.5R12d302R13ai1i2i2i2i2hg:72oR0d950.5R1ad100.5d277.5d201.5d277.5d201.5d583.5d568.5d583.5d568.5d277.5d669.5d277.5d669.5d1024d568.5d1024d568.5d668.5d201.5d668.5d201.5d1024d100.5d1024d100.5d277.5hR2d770R3d669.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i72R11d100.5R12d770R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:71oR0d950.5R1ad609.5d917.5d609.5d717d444.5d717d444.5d634d709.5d634d709.5d954.5d651d996d580.5d1017.25d510d1038.5d430d1038.5d255d1038.5d156.25d936.25d57.5d834d57.5d651.5d57.5d468.5d156.25d366.25d255d264d430d264d503d264d568.75d282d634.5d300d690d335d690d442.5d634d395d571d371d508d347d438.5d347d301.5d347d232.75d423.5d164d500d164d651.5d164d802.5d232.75d879d301.5d955.5d438.5d955.5d492d955.5d534d946.25d576d937d609.5d917.5hR2d793.5R3d709.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i71R11d57.5R12d793.5R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:70oR0d950.5R1ad100.5d277.5d529.5d277.5d529.5d362.5d201.5d362.5d201.5d582.5d497.5d582.5d497.5d667.5d201.5d667.5d201.5d1024d100.5d1024d100.5d277.5hR2d589R3d529.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i70R11d100.5R12d589R13ai1i2i2i2i2i2i2i2i2i2i2hg:126oR0d950.5R1ad749.5d615.5d749.5d704.5d697d744d652.25d761d607.5d778d559d778d504d778d431d748.5d425.5d746.5d423d745.5d419.5d744d412d741.5d334.5d710.5d287.5d710.5d243.5d710.5d200.5d729.75d157.5d749d108.5d790.5d108.5d701.5d161d662d205.75d644.75d250.5d627.5d299d627.5d354d627.5d427.5d657.5d432.5d659.5d435d660.5d439d662d446d664.5d523.5d695.5d570.5d695.5d613.5d695.5d655.75d676.5d698d657.5d749.5d615.5hR2d858R3d749.5R4d108.5R5d408.5R6d233.5R7d300R8d168R9d241.5R10i126R11d108.5R12d858R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:69oR0d950.5R1ad100.5d277.5d572.5d277.5d572.5d362.5d201.5d362.5d201.5d583.5d557d583.5d557d668.5d201.5d668.5d201.5d939d581.5d939d581.5d1024d100.5d1024d100.5d277.5hR2d647R3d581.5R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i69R11d100.5R12d647R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:125oR0d950.5R1ad128d1119d163d1119d233d1119d254.25d1097.5d275.5d1076d275.5d1004.5d275.5d880.5d275.5d802.5d298d767d320.5d731.5d376d718d320.5d705.5d298d670d275.5d634.5d275.5d556d275.5d432d275.5d361d254.25d339.25d233d317.5d163d317.5d128d317.5d128d246d159.5d246d284d246d325.75d282.75d367.5d319.5d367.5d430d367.5d550d367.5d624.5d394.5d653.25d421.5d682d492.5d682d523.5d682d523.5d753.5d492.5d753.5d421.5d753.5d394.5d782.5d367.5d811.5d367.5d887d367.5d1006.5d367.5d1117d325.75d1154d284d1191d159.5d1191d128d1191d128d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i125R11d128R12d651.5R13ai1i2i3i3i2i3i3i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2hg:68oR0d950.5R1ad201.5d360.5d201.5d941d323.5d941d478d941d549.75d871d621.5d801d621.5d650d621.5d500d549.75d430.25d478d360.5d323.5d360.5d201.5d360.5d100.5d277.5d308d277.5d525d277.5d626.5d367.75d728d458d728d650d728d843d626d933.5d524d1024d308d1024d100.5d1024d100.5d277.5hR2d788.5R3d728R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i68R11d100.5R12d788.5R13ai1i2i2i3i3i3i3i2i1i2i3i3i3i3i2i2hg:124oR0d950.5R1ad215d241.5d215d1265.5d130d1265.5d130d241.5d215d241.5hR2d345R3d215R4d130R5d782.5R6d-241.5R7d652.5R8d168R9d241.5R10i124R11d130R12d345R13ai1i2i2i2i2hg:67oR0d950.5R1ad659.5d335d659.5d441.5d608.5d394d550.75d370.5d493d347d428d347d300d347d232d425.25d164d503.5d164d651.5d164d799d232d877.25d300d955.5d428d955.5d493d955.5d550.75d932d608.5d908.5d659.5d861d659.5d966.5d606.5d1002.5d547.25d1020.5d488d1038.5d422d1038.5d252.5d1038.5d155d934.75d57.5d831d57.5d651.5d57.5d471.5d155d367.75d252.5d264d422d264d489d264d548.25d281.75d607.5d299.5d659.5d335hR2d715R3d659.5R4d57.5R5d760R6d-14.5R7d702.5R8d168R9d241.5R10i67R11d57.5R12d715R13ai1i2i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3hg:123oR0d950.5R1ad523.5d1119d523.5d1191d492.5d1191d368d1191d325.75d1154d283.5d1117d283.5d1006.5d283.5d887d283.5d811.5d256.5d782.5d229.5d753.5d158.5d753.5d128d753.5d128d682d158.5d682d230d682d256.75d653.25d283.5d624.5d283.5d550d283.5d430d283.5d319.5d325.75d282.75d368d246d492.5d246d523.5d246d523.5d317.5d489.5d317.5d419d317.5d397.5d339.5d376d361.5d376d432d376d556d376d634.5d353.25d670d330.5d705.5d275.5d718d331d731.5d353.5d767d376d802.5d376d880.5d376d1004.5d376d1075d397.5d1097d419d1119d489.5d1119d523.5d1119hR2d651.5R3d523.5R4d128R5d778R6d-167R7d650R8d168R9d241.5R10i123R11d128R12d651.5R13ai1i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i2i2i2i3i3i2i3i3i3i3i2i3i3i2hg:66oR0d950.5R1ad201.5d667.5d201.5d941d363.5d941d445d941d484.25d907.25d523.5d873.5d523.5d804d523.5d734d484.25d700.75d445d667.5d363.5d667.5d201.5d667.5d201.5d360.5d201.5d585.5d351d585.5d425d585.5d461.25d557.75d497.5d530d497.5d473d497.5d416.5d461.25d388.5d425d360.5d351d360.5d201.5d360.5d100.5d277.5d358.5d277.5d474d277.5d536.5d325.5d599d373.5d599d462d599d530.5d567d571d535d611.5d473d621.5d547.5d637.5d588.75d688.25d630d739d630d815d630d915d562d969.5d494d1024d368.5d1024d100.5d1024d100.5d277.5hR2d702.5R3d630R4d100.5R5d746.5R6d0R7d646R8d168R9d241.5R10i66R11d100.5R12d702.5R13ai1i2i2i3i3i3i3i2i1i2i2i3i3i3i3i2i1i2i3i3i3i3i3i3i3i3i2i2hg:122oR0d950.5R1ad56.5d464d493.5d464d493.5d548d147.5d950.5d493.5d950.5d493.5d1024d44d1024d44d940d390d537.5d56.5d537.5d56.5d464hR2d537.5R3d493.5R4d44R5d560R6d0R7d516R8d168R9d241.5R10i122R11d44R12d537.5R13ai1i2i2i2i2i2i2i2i2i2i2hg:65oR0d950.5R1ad350d377d213d748.5d487.5d748.5d350d377d293d277.5d407.5d277.5d692d1024d587d1024d519d832.5d182.5d832.5d114.5d1024d8d1024d293d277.5hR2d700.5R3d692R4d8R5d746.5R6d0R7d738.5R8d168R9d241.5R10i65R11d8R12d700.5R13ai1i2i2i2i1i2i2i2i2i2i2i2i2hg:121oR0d950.5R1ad329.5d1076d290.5d1176d253.5d1206.5d216.5d1237d154.5d1237d81d1237d81d1160d135d1160d173d1160d194d1142d215d1124d240.5d1057d257d1015d30.5d464d128d464d303d902d478d464d575.5d464d329.5d1076hR2d606R3d575.5R4d30.5R5d560R6d-213R7d529.5R8d168R9d241.5R10i121R11d30.5R12d606R13ai1i3i3i2i2i2i3i3i2i2i2i2i2i2i2hg:64oR0d950.5R1ad381d755.5d381d827d416.5d867.75d452d908.5d514d908.5d575.5d908.5d610.75d867.5d646d826.5d646d755.5d646d685.5d610d644.25d574d603d513d603d452.5d603d416.75d644d381d685d381d755.5d653.5d905d623.5d943.5d584.75d961.75d546d980d494.5d980d408.5d980d354.75d917.75d301d855.5d301d755.5d301d655.5d355d593d409d530.5d494.5d530.5d546d530.5d585d549.25d624d568d653.5d606d653.5d540.5d725d540.5d725d908.5d798d897.5d839.25d841.75d880.5d786d880.5d697.5d880.5d644d864.75d597d849d550d817d510d765d444.5d690.25d409.75d615.5d375d527.5d375d466d375d409.5d391.25d353d407.5d305d439.5d226.5d490.5d182.25d573.25d138d656d138d752.5d138d832d166.75d901.5d195.5d971d250d1024d302.5d1076d371.5d1103.25d440.5d1130.5d519d1130.5d583.5d1130.5d645.75d1108.75d708d1087d760d1046.5d805d1102d742.5d1150.5d668.75d1176.25d595d1202d519d1202d426.5d1202d344.5d1169.25d262.5d1136.5d198.5d1074d134.5d1011.5d101d929.25d67.5d847d67.5d752.5d67.5d661.5d101.5d579d135.5d496.5d198.5d434d263d370.5d347.5d336.75d432d303d526.5d303d632.5d303d723.25d346.5d814d390d875.5d470d913d519d932.75d576.5d952.5d634d952.5d695.5d952.5d827d873d903d793.5d979d653.5d982d653.5d905hR2d1024R3d952.5R4d67.5R5d721R6d-178R7d653.5R8d168R9d241.5R10i64R11d67.5R12d1024R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i2hg:120oR0d950.5R1ad562d464d359.5d736.5d572.5d1024d464d1024d301d804d138d1024d29.5d1024d247d731d48d464d156.5d464d305d663.5d453.5d464d562d464hR2d606R3d572.5R4d29.5R5d560R6d0R7d530.5R8d168R9d241.5R10i120R11d29.5R12d606R13ai1i2i2i2i2i2i2i2i2i2i2i2i2hg:63oR0d950.5R1ad195.5d897d297d897d297d1024d195.5d1024d195.5d897d294d823.5d198.5d823.5d198.5d746.5d198.5d696d212.5d663.5d226.5d631d271.5d588d316.5d543.5d345d517d357.75d493.5d370.5d470d370.5d445.5d370.5d401d337.75d373.5d305d346d251d346d211.5d346d166.75d363.5d122d381d73.5d414.5d73.5d320.5d120.5d292d168.75d278d217d264d268.5d264d360.5d264d416.25d312.5d472d361d472d440.5d472d478.5d454d512.75d436d547d391d590d347d633d323.5d656.5d313.75d669.75d304d683d300d695.5d297d706d295.5d721d294d736d294d762d294d823.5hR2d543.5R3d472R4d73.5R5d760R6d0R7d686.5R8d168R9d241.5R10i63R11d73.5R12d543.5R13ai1i2i2i2i2i1i2i2i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i2hg:119oR0d950.5R1ad43d464d135d464d250d901d364.5d464d473d464d588d901d702.5d464d794.5d464d648d1024d539.5d1024d419d565d298d1024d189.5d1024d43d464hR2d837.5R3d794.5R4d43R5d560R6d0R7d517R8d168R9d241.5R10i119R11d43R12d837.5R13ai1i2i2i2i2i2i2i2i2i2i2i2i2i2hg:62oR0d950.5R1ad108.5d520d108.5d429d749.5d661.5d749.5d744.5d108.5d977d108.5d886d623.5d703.5d108.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i62R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:118oR0d950.5R1ad30.5d464d128d464d303d934d478d464d575.5d464d365.5d1024d240.5d1024d30.5d464hR2d606R3d575.5R4d30.5R5d560R6d0R7d529.5R8d168R9d241.5R10i118R11d30.5R12d606R13ai1i2i2i2i2i2i2i2hg:61oR0d950.5R1ad108.5d559d749.5d559d749.5d643d108.5d643d108.5d559d108.5d763d749.5d763d749.5d848d108.5d848d108.5d763hR2d858R3d749.5R4d108.5R5d465R6d176R7d356.5R8d168R9d241.5R10i61R11d108.5R12d858R13ai1i2i2i2i2i1i2i2i2i2hg:117oR0d950.5R1ad87d803d87d464d179d464d179d799.5d179d879d210d918.75d241d958.5d303d958.5d377.5d958.5d420.75d911d464d863.5d464d781.5d464d464d556d464d556d1024d464d1024d464d938d430.5d989d386.25d1013.75d342d1038.5d283.5d1038.5d187d1038.5d137d978.5d87d918.5d87d803hR2d649R3d556R4d87R5d560R6d-14.5R7d473R8d168R9d241.5R10i117R11d87R12d649R13ai1i2i2i2i3i3i3i3i2i2i2i2i2i3i3i3i3hg:60oR0d950.5R1ad749.5d520d233.5d703.5d749.5d886d749.5d977d108.5d744.5d108.5d661.5d749.5d429d749.5d520hR2d858R3d749.5R4d108.5R5d595R6d47R7d486.5R8d168R9d241.5R10i60R11d108.5R12d858R13ai1i2i2i2i2i2i2i2hg:116oR0d950.5R1ad187.5d305d187.5d464d377d464d377d535.5d187.5d535.5d187.5d839.5d187.5d908d206.25d927.5d225d947d282.5d947d377d947d377d1024d282.5d1024d176d1024d135.5d984.25d95d944.5d95d839.5d95d535.5d27.5d535.5d27.5d464d95d464d95d305d187.5d305hR2d401.5R3d377R4d27.5R5d719R6d0R7d691.5R8d168R9d241.5R10i116R11d27.5R12d401.5R13ai1i2i2i2i2i2i3i3i2i2i2i3i3i2i2i2i2i2i2hg:59oR0d950.5R1ad120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5d120d897d225.5d897d225.5d983d143.5d1143d79d1143d120d983d120d897hR2d345R3d225.5R4d79R5d529.5R6d-119R7d450.5R8d168R9d241.5R10i59R11d79R12d345R13ai1i2i2i2i2i1i2i2i2i2i2i2hg:115oR0d950.5R1ad453.5d480.5d453.5d567.5d414.5d547.5d372.5d537.5d330.5d527.5d285.5d527.5d217d527.5d182.75d548.5d148.5d569.5d148.5d611.5d148.5d643.5d173d661.75d197.5d680d271.5d696.5d303d703.5d401d724.5d442.25d762.75d483.5d801d483.5d869.5d483.5d947.5d421.75d993d360d1038.5d252d1038.5d207d1038.5d158.25d1029.75d109.5d1021d55.5d1003.5d55.5d908.5d106.5d935d156d948.25d205.5d961.5d254d961.5d319d961.5d354d939.25d389d917d389d876.5d389d839d363.75d819d338.5d799d253d780.5d221d773d135.5d755d97.5d717.75d59.5d680.5d59.5d615.5d59.5d536.5d115.5d493.5d171.5d450.5d274.5d450.5d325.5d450.5d370.5d458d415.5d465.5d453.5d480.5hR2d533.5R3d483.5R4d55.5R5d573.5R6d-14.5R7d518R8d168R9d241.5R10i115R11d55.5R12d533.5R13ai1i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3i2i3i3i3i3i3i3hg:58oR0d950.5R1ad120d897d225.5d897d225.5d1024d120d1024d120d897d120d494.5d225.5d494.5d225.5d621.5d120d621.5d120d494.5hR2d345R3d225.5R4d120R5d529.5R6d0R7d409.5R8d168R9d241.5R10i58R11d120R12d345R13ai1i2i2i2i2i1i2i2i2i2hg:114oR0d950.5R1ad421d550d405.5d541d387.25d536.75d369d532.5d347d532.5d269d532.5d227.25d583.25d185.5d634d185.5d729d185.5d1024d93d1024d93d464d185.5d464d185.5d551d214.5d500d261d475.25d307.5d450.5d374d450.5d383.5d450.5d395d451.75d406.5d453d420.5d455.5d421d550hR2d421R3d421R4d93R5d573.5R6d0R7d480.5R8d168R9d241.5R10i114R11d93R12d421R13ai1i3i3i3i3i2i2i2i2i2i3i3i3i3i2hg:57oR0d950.5R1ad112.5d1008.5d112.5d916.5d150.5d934.5d189.5d944d228.5d953.5d266d953.5d366d953.5d418.75d886.25d471.5d819d479d682d450d725d405.5d748d361d771d307d771d195d771d129.75d703.25d64.5d635.5d64.5d518d64.5d403d132.5d333.5d200.5d264d313.5d264d443d264d511.25d363.25d579.5d462.5d579.5d651.5d579.5d828d495.75d933.25d412d1038.5d270.5d1038.5d232.5d1038.5d193.5d1031d154.5d1023.5d112.5d1008.5d313.5d692d381.5d692d421.25d645.5d461d599d461d518d461d437.5d421.25d390.75d381.5d344d313.5d344d245.5d344d205.75d390.75d166d437.5d166d518d166d599d205.75d645.5d245.5d692d313.5d692hR2d651.5R3d579.5R4d64.5R5d760R6d-14.5R7d695.5R8d168R9d241.5R10i57R11d64.5R12d651.5R13ai1i2i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:113oR0d950.5R1ad151.5d744.5d151.5d846d193.25d903.75d235d961.5d308d961.5d381d961.5d423d903.75d465d846d465d744.5d465d643d423d585.25d381d527.5d308d527.5d235d527.5d193.25d585.25d151.5d643d151.5d744.5d465d940d436d990d391.75d1014.25d347.5d1038.5d285.5d1038.5d184d1038.5d120.25d957.5d56.5d876.5d56.5d744.5d56.5d612.5d120.25d531.5d184d450.5d285.5d450.5d347.5d450.5d391.75d474.75d436d499d465d549d465d464d557d464d557d1237d465d1237d465d940hR2d650R3d557R4d56.5R5d573.5R6d-213R7d517R8d168R9d241.5R10i113R11d56.5R12d650R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i2i2i2i2i2hg:56oR0d950.5R1ad325.5d669.5d253.5d669.5d212.25d708d171d746.5d171d814d171d881.5d212.25d920d253.5d958.5d325.5d958.5d397.5d958.5d439d919.75d480.5d881d480.5d814d480.5d746.5d439.25d708d398d669.5d325.5d669.5d224.5d626.5d159.5d610.5d123.25d566d87d521.5d87d457.5d87d368d150.75d316d214.5d264d325.5d264d437d264d500.5d316d564d368d564d457.5d564d521.5d527.75d566d491.5d610.5d427d626.5d500d643.5d540.75d693d581.5d742.5d581.5d814d581.5d922.5d515.25d980.5d449d1038.5d325.5d1038.5d202d1038.5d135.75d980.5d69.5d922.5d69.5d814d69.5d742.5d110.5d693d151.5d643.5d224.5d626.5d187.5d467d187.5d525d223.75d557.5d260d590d325.5d590d390.5d590d427.25d557.5d464d525d464d467d464d409d427.25d376.5d390.5d344d325.5d344d260d344d223.75d376.5d187.5d409d187.5d467hR2d651.5R3d581.5R4d69.5R5d760R6d-14.5R7d690.5R8d168R9d241.5R10i56R11d69.5R12d651.5R13ai1i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hg:112oR0d950.5R1ad185.5d940d185.5d1237d93d1237d93d464d185.5d464d185.5d549d214.5d499d258.75d474.75d303d450.5d364.5d450.5d466.5d450.5d530.25d531.5d594d612.5d594d744.5d594d876.5d530.25d957.5d466.5d1038.5d364.5d1038.5d303d1038.5d258.75d1014.25d214.5d990d185.5d940d498.5d744.5d498.5d643d456.75d585.25d415d527.5d342d527.5d269d527.5d227.25d585.25d185.5d643d185.5d744.5d185.5d846d227.25d903.75d269d961.5d342d961.5d415d961.5d456.75d903.75d498.5d846d498.5d744.5hR2d650R3d594R4d93R5d573.5R6d-213R7d480.5R8d168R9d241.5R10i112R11d93R12d650R13ai1i2i2i2i2i2i3i3i3i3i3i3i3i3i1i3i3i3i3i3i3i3i3hgh";
nme.installer.Assets.cachedBitmapData = new Hash();
jeash.events.Event.ACTIVATE = "activate";
jeash.events.Event.ADDED = "added";
jeash.events.Event.ADDED_TO_STAGE = "addedToStage";
jeash.events.Event.CANCEL = "cancel";
jeash.events.Event.CHANGE = "change";
jeash.events.Event.CLOSE = "close";
jeash.events.Event.COMPLETE = "complete";
jeash.events.Event.CONNECT = "connect";
jeash.events.Event.DEACTIVATE = "deactivate";
jeash.events.Event.ENTER_FRAME = "enterFrame";
jeash.events.Event.ID3 = "id3";
jeash.events.Event.INIT = "init";
jeash.events.Event.MOUSE_LEAVE = "mouseLeave";
jeash.events.Event.OPEN = "open";
jeash.events.Event.REMOVED = "removed";
jeash.events.Event.REMOVED_FROM_STAGE = "removedFromStage";
jeash.events.Event.RENDER = "render";
jeash.events.Event.RESIZE = "resize";
jeash.events.Event.SCROLL = "scroll";
jeash.events.Event.SELECT = "select";
jeash.events.Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
jeash.events.Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
jeash.events.Event.TAB_INDEX_CHANGE = "tabIndexChange";
jeash.events.Event.UNLOAD = "unload";
jeash.events.Event.SOUND_COMPLETE = "soundComplete";
jeash.events.KeyboardEvent.KEY_DOWN = "KEY_DOWN";
jeash.events.KeyboardEvent.KEY_UP = "KEY_UP";
de.polygonal.ui.Key.ZERO = 48;
de.polygonal.ui.Key.ONE = 49;
de.polygonal.ui.Key.TWO = 50;
de.polygonal.ui.Key.THREE = 51;
de.polygonal.ui.Key.FOUR = 52;
de.polygonal.ui.Key.FIVE = 53;
de.polygonal.ui.Key.SIX = 54;
de.polygonal.ui.Key.SEVEN = 55;
de.polygonal.ui.Key.EIGHT = 56;
de.polygonal.ui.Key.NINE = 57;
de.polygonal.ui.Key.A = 65;
de.polygonal.ui.Key.B = 66;
de.polygonal.ui.Key.C = 67;
de.polygonal.ui.Key.D = 68;
de.polygonal.ui.Key.E = 69;
de.polygonal.ui.Key.F = 70;
de.polygonal.ui.Key.G = 71;
de.polygonal.ui.Key.H = 72;
de.polygonal.ui.Key.I = 73;
de.polygonal.ui.Key.J = 74;
de.polygonal.ui.Key.K = 75;
de.polygonal.ui.Key.L = 76;
de.polygonal.ui.Key.M = 77;
de.polygonal.ui.Key.N = 78;
de.polygonal.ui.Key.O = 79;
de.polygonal.ui.Key.P = 80;
de.polygonal.ui.Key.Q = 81;
de.polygonal.ui.Key.R = 82;
de.polygonal.ui.Key.S = 83;
de.polygonal.ui.Key.T = 84;
de.polygonal.ui.Key.U = 85;
de.polygonal.ui.Key.V = 86;
de.polygonal.ui.Key.W = 87;
de.polygonal.ui.Key.X = 88;
de.polygonal.ui.Key.Y = 89;
de.polygonal.ui.Key.Z = 90;
de.polygonal.ui.Key.SPACE = 32;
de.polygonal.ui.Key.BACKSPACE = 8;
de.polygonal.ui.Key.LEFT = 37;
de.polygonal.ui.Key.UP = 38;
de.polygonal.ui.Key.RIGHT = 39;
de.polygonal.ui.Key.DOWN = 40;
de.polygonal.ui.Key.F1 = 112;
de.polygonal.ui.Key.F2 = 113;
de.polygonal.ui.Key.F3 = 114;
de.polygonal.ui.Key.F4 = 115;
de.polygonal.ui.Key.F5 = 116;
de.polygonal.ui.Key.F6 = 117;
de.polygonal.ui.Key.F7 = 118;
de.polygonal.ui.Key.F8 = 119;
de.polygonal.ui.Key.F9 = 120;
de.polygonal.ui.Key.F11 = 122;
de.polygonal.ui.Key.F12 = 123;
de.polygonal.ui.Key.F13 = 124;
de.polygonal.ui.Key.F14 = 125;
de.polygonal.ui.Key.F15 = 126;
jeash.events.IOErrorEvent.IO_ERROR = "IO_ERROR";
jeash.display.DisplayObject.mNameID = 0;
de.polygonal.ds.IntHashSet.VAL_ABSENT = -2147483648;
de.polygonal.ds.IntHashSet.EMPTY_SLOT = -1;
de.polygonal.ds.IntHashSet.NULL_POINTER = -1;
de.polygonal.core.fmt.ASCII.BACKSPACE = 8;
de.polygonal.core.fmt.ASCII.TAB = 9;
de.polygonal.core.fmt.ASCII.NEWLINE = 10;
de.polygonal.core.fmt.ASCII.CARRIAGERETURN = 13;
de.polygonal.core.fmt.ASCII.SPACE = 32;
de.polygonal.core.fmt.ASCII.EXCLAM = 33;
de.polygonal.core.fmt.ASCII.QUOTEDBL = 34;
de.polygonal.core.fmt.ASCII.NUMBERSIGN = 35;
de.polygonal.core.fmt.ASCII.DOLLAR = 36;
de.polygonal.core.fmt.ASCII.PERCENT = 37;
de.polygonal.core.fmt.ASCII.AMPERSAND = 38;
de.polygonal.core.fmt.ASCII.QUOTESINGLE = 39;
de.polygonal.core.fmt.ASCII.PARENLEFT = 40;
de.polygonal.core.fmt.ASCII.PARENRIGHT = 41;
de.polygonal.core.fmt.ASCII.ASTERISK = 42;
de.polygonal.core.fmt.ASCII.PLUS = 43;
de.polygonal.core.fmt.ASCII.COMMA = 44;
de.polygonal.core.fmt.ASCII.HYPHEN = 45;
de.polygonal.core.fmt.ASCII.PERIOD = 46;
de.polygonal.core.fmt.ASCII.SLASH = 47;
de.polygonal.core.fmt.ASCII.ZERO = 48;
de.polygonal.core.fmt.ASCII.ONE = 49;
de.polygonal.core.fmt.ASCII.TWO = 50;
de.polygonal.core.fmt.ASCII.THREE = 51;
de.polygonal.core.fmt.ASCII.FOUR = 52;
de.polygonal.core.fmt.ASCII.FIVE = 53;
de.polygonal.core.fmt.ASCII.SIX = 54;
de.polygonal.core.fmt.ASCII.SEVEN = 55;
de.polygonal.core.fmt.ASCII.EIGHT = 56;
de.polygonal.core.fmt.ASCII.NINE = 57;
de.polygonal.core.fmt.ASCII.COLON = 58;
de.polygonal.core.fmt.ASCII.SEMICOLON = 59;
de.polygonal.core.fmt.ASCII.LESS = 60;
de.polygonal.core.fmt.ASCII.EQUAL = 61;
de.polygonal.core.fmt.ASCII.GREATER = 62;
de.polygonal.core.fmt.ASCII.QUESTION = 63;
de.polygonal.core.fmt.ASCII.AT = 64;
de.polygonal.core.fmt.ASCII.A = 65;
de.polygonal.core.fmt.ASCII.B = 66;
de.polygonal.core.fmt.ASCII.C = 67;
de.polygonal.core.fmt.ASCII.D = 68;
de.polygonal.core.fmt.ASCII.E = 69;
de.polygonal.core.fmt.ASCII.F = 70;
de.polygonal.core.fmt.ASCII.G = 71;
de.polygonal.core.fmt.ASCII.H = 72;
de.polygonal.core.fmt.ASCII.I = 73;
de.polygonal.core.fmt.ASCII.J = 74;
de.polygonal.core.fmt.ASCII.K = 75;
de.polygonal.core.fmt.ASCII.L = 76;
de.polygonal.core.fmt.ASCII.M = 77;
de.polygonal.core.fmt.ASCII.N = 78;
de.polygonal.core.fmt.ASCII.O = 79;
de.polygonal.core.fmt.ASCII.P = 80;
de.polygonal.core.fmt.ASCII.Q = 81;
de.polygonal.core.fmt.ASCII.R = 82;
de.polygonal.core.fmt.ASCII.S = 83;
de.polygonal.core.fmt.ASCII.T = 84;
de.polygonal.core.fmt.ASCII.U = 85;
de.polygonal.core.fmt.ASCII.V = 86;
de.polygonal.core.fmt.ASCII.W = 87;
de.polygonal.core.fmt.ASCII.X = 88;
de.polygonal.core.fmt.ASCII.Y = 89;
de.polygonal.core.fmt.ASCII.Z = 90;
de.polygonal.core.fmt.ASCII.BRACKETLEFT = 91;
de.polygonal.core.fmt.ASCII.BACKSLASH = 92;
de.polygonal.core.fmt.ASCII.BRACKETRIGHT = 93;
de.polygonal.core.fmt.ASCII.CIRCUM = 94;
de.polygonal.core.fmt.ASCII.UNDERSCORE = 95;
de.polygonal.core.fmt.ASCII.GRAVE = 96;
de.polygonal.core.fmt.ASCII.a = 97;
de.polygonal.core.fmt.ASCII.b = 98;
de.polygonal.core.fmt.ASCII.c = 99;
de.polygonal.core.fmt.ASCII.d = 100;
de.polygonal.core.fmt.ASCII.e = 101;
de.polygonal.core.fmt.ASCII.f = 102;
de.polygonal.core.fmt.ASCII.g = 103;
de.polygonal.core.fmt.ASCII.h = 104;
de.polygonal.core.fmt.ASCII.i = 105;
de.polygonal.core.fmt.ASCII.j = 106;
de.polygonal.core.fmt.ASCII.k = 107;
de.polygonal.core.fmt.ASCII.l = 108;
de.polygonal.core.fmt.ASCII.m = 109;
de.polygonal.core.fmt.ASCII.n = 110;
de.polygonal.core.fmt.ASCII.o = 111;
de.polygonal.core.fmt.ASCII.p = 112;
de.polygonal.core.fmt.ASCII.q = 113;
de.polygonal.core.fmt.ASCII.r = 114;
de.polygonal.core.fmt.ASCII.s = 115;
de.polygonal.core.fmt.ASCII.t = 116;
de.polygonal.core.fmt.ASCII.u = 117;
de.polygonal.core.fmt.ASCII.v = 118;
de.polygonal.core.fmt.ASCII.w = 119;
de.polygonal.core.fmt.ASCII.x = 120;
de.polygonal.core.fmt.ASCII.y = 121;
de.polygonal.core.fmt.ASCII.z = 122;
de.polygonal.core.fmt.ASCII.BRACELEFT = 123;
de.polygonal.core.fmt.ASCII.BAR = 124;
de.polygonal.core.fmt.ASCII.BRACERIGTH = 125;
de.polygonal.core.fmt.ASCII.TILDE = 126;
de.polygonal.core.event.ObserverMacro.NUM_BITS = 32;
de.polygonal.core.event.ObserverMacro.NUM_GROUP_BITS = 5;
de.polygonal.core.event.ObserverMacro.NUM_EVENT_BITS = 27;
de.polygonal.core.event.ObserverMacro.EVENT_MASK = 134217727;
de.polygonal.core.event.ObserverMacro.GROUP_MASK = -134217728;
de.polygonal.core.fmt.NumberFormat._hexLUT = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];
jeash.display.StageQuality.BEST = "best";
jeash.display.StageQuality.HIGH = "high";
jeash.display.StageQuality.MEDIUM = "medium";
jeash.display.StageQuality.LOW = "low";
jeash.Lib.DEFAULT_PRIORITY = ["2d","swf"];
jeash.Lib.mShowCursor = true;
jeash.Lib.mShowFPS = false;
jeash.Lib.mFullscreen = false;
jeash.Lib.mCollectEveryFrame = false;
jeash.Lib.mQuitOnEscape = true;
jeash.Lib.mLastMouse = new jeash.geom.Point();
jeash.Lib.VENDOR_HTML_TAG = "data-";
jeash.Lib.HTML_DIV_EVENT_TYPES = ["resize","mouseup","mouseover","mouseout","mousemove","mousedown","mousewheel","dblclick","click"];
jeash.Lib.HTML_WINDOW_EVENT_TYPES = ["keyup","keypress","keydown","resize"];
jeash.Lib.HTML_TOUCH_EVENT_TYPES = ["touchstart","touchmove","touchend"];
jeash.Lib.JEASH_IDENTIFIER = "haxe:jeash";
jeash.Lib.DEFAULT_WIDTH = 500;
jeash.Lib.DEFAULT_HEIGHT = 500;
jeash.text.TextFieldAutoSize.CENTER = "CENTER";
jeash.text.TextFieldAutoSize.LEFT = "LEFT";
jeash.text.TextFieldAutoSize.NONE = "NONE";
jeash.text.TextFieldAutoSize.RIGHT = "RIGHT";
jeash.media.Sound.MEDIA_TYPE_MP3 = "audio/mpeg";
jeash.media.Sound.MEDIA_TYPE_OGG = "audio/ogg; codecs=\"vorbis\"";
jeash.media.Sound.MEDIA_TYPE_WAV = "audio/wav; codecs=\"1\"";
jeash.media.Sound.MEDIA_TYPE_AAC = "audio/mp4; codecs=\"mp4a.40.2\"";
jeash.media.Sound.EXTENSION_MP3 = "mp3";
jeash.media.Sound.EXTENSION_OGG = "ogg";
jeash.media.Sound.EXTENSION_WAV = "wav";
jeash.media.Sound.EXTENSION_AAC = "aac";
jeash.ui.Keyboard.KEY_0 = 48;
jeash.ui.Keyboard.KEY_1 = 49;
jeash.ui.Keyboard.KEY_2 = 50;
jeash.ui.Keyboard.KEY_3 = 51;
jeash.ui.Keyboard.KEY_4 = 52;
jeash.ui.Keyboard.KEY_5 = 53;
jeash.ui.Keyboard.KEY_6 = 54;
jeash.ui.Keyboard.KEY_7 = 55;
jeash.ui.Keyboard.KEY_8 = 56;
jeash.ui.Keyboard.KEY_9 = 57;
jeash.ui.Keyboard.A = 65;
jeash.ui.Keyboard.B = 66;
jeash.ui.Keyboard.C = 67;
jeash.ui.Keyboard.D = 68;
jeash.ui.Keyboard.E = 69;
jeash.ui.Keyboard.F = 70;
jeash.ui.Keyboard.G = 71;
jeash.ui.Keyboard.H = 72;
jeash.ui.Keyboard.I = 73;
jeash.ui.Keyboard.J = 74;
jeash.ui.Keyboard.K = 75;
jeash.ui.Keyboard.L = 76;
jeash.ui.Keyboard.M = 77;
jeash.ui.Keyboard.N = 78;
jeash.ui.Keyboard.O = 79;
jeash.ui.Keyboard.P = 80;
jeash.ui.Keyboard.Q = 81;
jeash.ui.Keyboard.R = 82;
jeash.ui.Keyboard.S = 83;
jeash.ui.Keyboard.T = 84;
jeash.ui.Keyboard.U = 85;
jeash.ui.Keyboard.V = 86;
jeash.ui.Keyboard.W = 87;
jeash.ui.Keyboard.X = 88;
jeash.ui.Keyboard.Y = 89;
jeash.ui.Keyboard.Z = 90;
jeash.ui.Keyboard.NUMPAD_0 = 96;
jeash.ui.Keyboard.NUMPAD_1 = 97;
jeash.ui.Keyboard.NUMPAD_2 = 98;
jeash.ui.Keyboard.NUMPAD_3 = 99;
jeash.ui.Keyboard.NUMPAD_4 = 100;
jeash.ui.Keyboard.NUMPAD_5 = 101;
jeash.ui.Keyboard.NUMPAD_6 = 102;
jeash.ui.Keyboard.NUMPAD_7 = 103;
jeash.ui.Keyboard.NUMPAD_8 = 104;
jeash.ui.Keyboard.NUMPAD_9 = 105;
jeash.ui.Keyboard.NUMPAD_MULTIPLY = 106;
jeash.ui.Keyboard.NUMPAD_ADD = 107;
jeash.ui.Keyboard.NUMPAD_ENTER = 108;
jeash.ui.Keyboard.NUMPAD_SUBTRACT = 109;
jeash.ui.Keyboard.NUMPAD_DECIMAL = 110;
jeash.ui.Keyboard.NUMPAD_DIVIDE = 111;
jeash.ui.Keyboard.F1 = 112;
jeash.ui.Keyboard.F2 = 113;
jeash.ui.Keyboard.F3 = 114;
jeash.ui.Keyboard.F4 = 115;
jeash.ui.Keyboard.F5 = 116;
jeash.ui.Keyboard.F6 = 117;
jeash.ui.Keyboard.F7 = 118;
jeash.ui.Keyboard.F8 = 119;
jeash.ui.Keyboard.F9 = 120;
jeash.ui.Keyboard.F10 = 121;
jeash.ui.Keyboard.F11 = 122;
jeash.ui.Keyboard.F12 = 123;
jeash.ui.Keyboard.F13 = 124;
jeash.ui.Keyboard.F14 = 125;
jeash.ui.Keyboard.F15 = 126;
jeash.ui.Keyboard.BACKSPACE = 8;
jeash.ui.Keyboard.TAB = 9;
jeash.ui.Keyboard.ENTER = 13;
jeash.ui.Keyboard.SHIFT = 16;
jeash.ui.Keyboard.CONTROL = 17;
jeash.ui.Keyboard.CAPS_LOCK = 18;
jeash.ui.Keyboard.ESCAPE = 27;
jeash.ui.Keyboard.SPACE = 32;
jeash.ui.Keyboard.PAGE_UP = 33;
jeash.ui.Keyboard.PAGE_DOWN = 34;
jeash.ui.Keyboard.END = 35;
jeash.ui.Keyboard.HOME = 36;
jeash.ui.Keyboard.LEFT = 37;
jeash.ui.Keyboard.RIGHT = 39;
jeash.ui.Keyboard.UP = 38;
jeash.ui.Keyboard.DOWN = 40;
jeash.ui.Keyboard.INSERT = 45;
jeash.ui.Keyboard.DELETE = 46;
jeash.ui.Keyboard.NUMLOCK = 144;
jeash.ui.Keyboard.BREAK = 19;
jeash.ui.Keyboard.DOM_VK_CANCEL = 3;
jeash.ui.Keyboard.DOM_VK_HELP = 6;
jeash.ui.Keyboard.DOM_VK_BACK_SPACE = 8;
jeash.ui.Keyboard.DOM_VK_TAB = 9;
jeash.ui.Keyboard.DOM_VK_CLEAR = 12;
jeash.ui.Keyboard.DOM_VK_RETURN = 13;
jeash.ui.Keyboard.DOM_VK_ENTER = 14;
jeash.ui.Keyboard.DOM_VK_SHIFT = 16;
jeash.ui.Keyboard.DOM_VK_CONTROL = 17;
jeash.ui.Keyboard.DOM_VK_ALT = 18;
jeash.ui.Keyboard.DOM_VK_PAUSE = 19;
jeash.ui.Keyboard.DOM_VK_CAPS_LOCK = 20;
jeash.ui.Keyboard.DOM_VK_ESCAPE = 27;
jeash.ui.Keyboard.DOM_VK_SPACE = 32;
jeash.ui.Keyboard.DOM_VK_PAGE_UP = 33;
jeash.ui.Keyboard.DOM_VK_PAGE_DOWN = 34;
jeash.ui.Keyboard.DOM_VK_END = 35;
jeash.ui.Keyboard.DOM_VK_HOME = 36;
jeash.ui.Keyboard.DOM_VK_LEFT = 37;
jeash.ui.Keyboard.DOM_VK_UP = 38;
jeash.ui.Keyboard.DOM_VK_RIGHT = 39;
jeash.ui.Keyboard.DOM_VK_DOWN = 40;
jeash.ui.Keyboard.DOM_VK_PRINTSCREEN = 44;
jeash.ui.Keyboard.DOM_VK_INSERT = 45;
jeash.ui.Keyboard.DOM_VK_DELETE = 46;
jeash.ui.Keyboard.DOM_VK_0 = 48;
jeash.ui.Keyboard.DOM_VK_1 = 49;
jeash.ui.Keyboard.DOM_VK_2 = 50;
jeash.ui.Keyboard.DOM_VK_3 = 51;
jeash.ui.Keyboard.DOM_VK_4 = 52;
jeash.ui.Keyboard.DOM_VK_5 = 53;
jeash.ui.Keyboard.DOM_VK_6 = 54;
jeash.ui.Keyboard.DOM_VK_7 = 55;
jeash.ui.Keyboard.DOM_VK_8 = 56;
jeash.ui.Keyboard.DOM_VK_9 = 57;
jeash.ui.Keyboard.DOM_VK_SEMICOLON = 59;
jeash.ui.Keyboard.DOM_VK_EQUALS = 61;
jeash.ui.Keyboard.DOM_VK_A = 65;
jeash.ui.Keyboard.DOM_VK_B = 66;
jeash.ui.Keyboard.DOM_VK_C = 67;
jeash.ui.Keyboard.DOM_VK_D = 68;
jeash.ui.Keyboard.DOM_VK_E = 69;
jeash.ui.Keyboard.DOM_VK_F = 70;
jeash.ui.Keyboard.DOM_VK_G = 71;
jeash.ui.Keyboard.DOM_VK_H = 72;
jeash.ui.Keyboard.DOM_VK_I = 73;
jeash.ui.Keyboard.DOM_VK_J = 74;
jeash.ui.Keyboard.DOM_VK_K = 75;
jeash.ui.Keyboard.DOM_VK_L = 76;
jeash.ui.Keyboard.DOM_VK_M = 77;
jeash.ui.Keyboard.DOM_VK_N = 78;
jeash.ui.Keyboard.DOM_VK_O = 79;
jeash.ui.Keyboard.DOM_VK_P = 80;
jeash.ui.Keyboard.DOM_VK_Q = 81;
jeash.ui.Keyboard.DOM_VK_R = 82;
jeash.ui.Keyboard.DOM_VK_S = 83;
jeash.ui.Keyboard.DOM_VK_T = 84;
jeash.ui.Keyboard.DOM_VK_U = 85;
jeash.ui.Keyboard.DOM_VK_V = 86;
jeash.ui.Keyboard.DOM_VK_W = 87;
jeash.ui.Keyboard.DOM_VK_X = 88;
jeash.ui.Keyboard.DOM_VK_Y = 89;
jeash.ui.Keyboard.DOM_VK_Z = 90;
jeash.ui.Keyboard.DOM_VK_CONTEXT_MENU = 93;
jeash.ui.Keyboard.DOM_VK_NUMPAD0 = 96;
jeash.ui.Keyboard.DOM_VK_NUMPAD1 = 97;
jeash.ui.Keyboard.DOM_VK_NUMPAD2 = 98;
jeash.ui.Keyboard.DOM_VK_NUMPAD3 = 99;
jeash.ui.Keyboard.DOM_VK_NUMPAD4 = 100;
jeash.ui.Keyboard.DOM_VK_NUMPAD5 = 101;
jeash.ui.Keyboard.DOM_VK_NUMPAD6 = 102;
jeash.ui.Keyboard.DOM_VK_NUMPAD7 = 103;
jeash.ui.Keyboard.DOM_VK_NUMPAD8 = 104;
jeash.ui.Keyboard.DOM_VK_NUMPAD9 = 105;
jeash.ui.Keyboard.DOM_VK_MULTIPLY = 106;
jeash.ui.Keyboard.DOM_VK_ADD = 107;
jeash.ui.Keyboard.DOM_VK_SEPARATOR = 108;
jeash.ui.Keyboard.DOM_VK_SUBTRACT = 109;
jeash.ui.Keyboard.DOM_VK_DECIMAL = 110;
jeash.ui.Keyboard.DOM_VK_DIVIDE = 111;
jeash.ui.Keyboard.DOM_VK_F1 = 112;
jeash.ui.Keyboard.DOM_VK_F2 = 113;
jeash.ui.Keyboard.DOM_VK_F3 = 114;
jeash.ui.Keyboard.DOM_VK_F4 = 115;
jeash.ui.Keyboard.DOM_VK_F5 = 116;
jeash.ui.Keyboard.DOM_VK_F6 = 117;
jeash.ui.Keyboard.DOM_VK_F7 = 118;
jeash.ui.Keyboard.DOM_VK_F8 = 119;
jeash.ui.Keyboard.DOM_VK_F9 = 120;
jeash.ui.Keyboard.DOM_VK_F10 = 121;
jeash.ui.Keyboard.DOM_VK_F11 = 122;
jeash.ui.Keyboard.DOM_VK_F12 = 123;
jeash.ui.Keyboard.DOM_VK_F13 = 124;
jeash.ui.Keyboard.DOM_VK_F14 = 125;
jeash.ui.Keyboard.DOM_VK_F15 = 126;
jeash.ui.Keyboard.DOM_VK_F16 = 127;
jeash.ui.Keyboard.DOM_VK_F17 = 128;
jeash.ui.Keyboard.DOM_VK_F18 = 129;
jeash.ui.Keyboard.DOM_VK_F19 = 130;
jeash.ui.Keyboard.DOM_VK_F20 = 131;
jeash.ui.Keyboard.DOM_VK_F21 = 132;
jeash.ui.Keyboard.DOM_VK_F22 = 133;
jeash.ui.Keyboard.DOM_VK_F23 = 134;
jeash.ui.Keyboard.DOM_VK_F24 = 135;
jeash.ui.Keyboard.DOM_VK_NUM_LOCK = 144;
jeash.ui.Keyboard.DOM_VK_SCROLL_LOCK = 145;
jeash.ui.Keyboard.DOM_VK_COMMA = 188;
jeash.ui.Keyboard.DOM_VK_PERIOD = 190;
jeash.ui.Keyboard.DOM_VK_SLASH = 191;
jeash.ui.Keyboard.DOM_VK_BACK_QUOTE = 192;
jeash.ui.Keyboard.DOM_VK_OPEN_BRACKET = 219;
jeash.ui.Keyboard.DOM_VK_BACK_SLASH = 220;
jeash.ui.Keyboard.DOM_VK_CLOSE_BRACKET = 221;
jeash.ui.Keyboard.DOM_VK_QUOTE = 222;
jeash.ui.Keyboard.DOM_VK_META = 224;
jeash.ui.Keyboard.DOM_VK_KANA = 21;
jeash.ui.Keyboard.DOM_VK_HANGUL = 21;
jeash.ui.Keyboard.DOM_VK_JUNJA = 23;
jeash.ui.Keyboard.DOM_VK_FINAL = 24;
jeash.ui.Keyboard.DOM_VK_HANJA = 25;
jeash.ui.Keyboard.DOM_VK_KANJI = 25;
jeash.ui.Keyboard.DOM_VK_CONVERT = 28;
jeash.ui.Keyboard.DOM_VK_NONCONVERT = 29;
jeash.ui.Keyboard.DOM_VK_ACEPT = 30;
jeash.ui.Keyboard.DOM_VK_MODECHANGE = 31;
jeash.ui.Keyboard.DOM_VK_SELECT = 41;
jeash.ui.Keyboard.DOM_VK_PRINT = 42;
jeash.ui.Keyboard.DOM_VK_EXECUTE = 43;
jeash.ui.Keyboard.DOM_VK_SLEEP = 95;
hsl.haxe._DirectSignaler.PropagationStatus.IMMEDIATELY_STOPPED = 1;
hsl.haxe._DirectSignaler.PropagationStatus.STOPPED = 2;
hsl.haxe._DirectSignaler.PropagationStatus.UNDISTURBED = 3;
jeash.events.FocusEvent.FOCUS_IN = "FOCUS_IN";
jeash.events.FocusEvent.FOCUS_OUT = "FOCUS_OUT";
jeash.events.FocusEvent.KEY_FOCUS_CHANGE = "KEY_FOCUS_CHANGE";
jeash.events.FocusEvent.MOUSE_FOCUS_CHANGE = "MOUSE_FOCUS_CHANGE";
Xml.enode = new EReg("^<([a-zA-Z0-9:._-]+)","");
Xml.ecdata = new EReg("^<!\\[CDATA\\[","i");
Xml.edoctype = new EReg("^<!DOCTYPE ","i");
Xml.eend = new EReg("^</([a-zA-Z0-9:._-]+)>","");
Xml.epcdata = new EReg("^[^<]+","");
Xml.ecomment = new EReg("^<!--","");
Xml.eprolog = new EReg("^<\\?[^\\?]+\\?>","");
Xml.eattribute = new EReg("^\\s*([a-zA-Z0-9:_-]+)\\s*=\\s*([\"'])([^\\2]*?)\\2","");
Xml.eclose = new EReg("^[ \r\n\t]*(>|(/>))","");
Xml.ecdata_end = new EReg("\\]\\]>","");
Xml.edoctype_elt = new EReg("[\\[|\\]>]","");
Xml.ecomment_end = new EReg("-->","");
haxe.SHA1.hex_chr = "0123456789abcdef";
jeash.events.MouseEvent.CLICK = "click";
jeash.events.MouseEvent.DOUBLE_CLICK = "doubleClick";
jeash.events.MouseEvent.MOUSE_DOWN = "mouseDown";
jeash.events.MouseEvent.MOUSE_MOVE = "mouseMove";
jeash.events.MouseEvent.MOUSE_OUT = "mouseOut";
jeash.events.MouseEvent.MOUSE_OVER = "mouseOver";
jeash.events.MouseEvent.MOUSE_UP = "mouseUp";
jeash.events.MouseEvent.MOUSE_WHEEL = "mouseWheel";
jeash.events.MouseEvent.ROLL_OUT = "rollOut";
jeash.events.MouseEvent.ROLL_OVER = "rollOver";
jeash.events.EventPhase.CAPTURING_PHASE = 0;
jeash.events.EventPhase.AT_TARGET = 1;
jeash.events.EventPhase.BUBBLING_PHASE = 2;
de.polygonal.core.math.Limits.INT8_MIN = -128;
de.polygonal.core.math.Limits.INT8_MAX = 127;
de.polygonal.core.math.Limits.UINT8_MAX = 255;
de.polygonal.core.math.Limits.INT16_MIN = -32768;
de.polygonal.core.math.Limits.INT16_MAX = 32767;
de.polygonal.core.math.Limits.UINT16_MAX = 65535;
de.polygonal.core.math.Limits.INT32_MIN = -2147483648;
de.polygonal.core.math.Limits.INT32_MAX = 2147483647;
de.polygonal.core.math.Limits.UINT32_MAX = -1;
de.polygonal.core.math.Limits.INT_BITS = 32;
de.polygonal.core.math.Limits.FLOAT_MAX = 3.40282346638528e+38;
de.polygonal.core.math.Limits.FLOAT_MIN = -3.40282346638528e+38;
de.polygonal.core.math.Limits.DOUBLE_MAX = 1.79769313486231e+308;
de.polygonal.core.math.Limits.DOUBLE_MIN = -1.79769313486231e+308;
jeash.text.TextField.mDefaultFont = "Bitstream_Vera_Sans";
jeash.text.TextField.sSelectionOwner = null;
jeash.text.TextField.CARET_BLINK_SPEED = 1000;
jeash.text.FontInstance.mSolidFonts = new Hash();
nme.net.URLRequestMethod.DELETE = "DELETE";
nme.net.URLRequestMethod.GET = "GET";
nme.net.URLRequestMethod.HEAD = "HEAD";
nme.net.URLRequestMethod.OPTIONS = "OPTIONS";
nme.net.URLRequestMethod.POST = "POST";
nme.net.URLRequestMethod.PUT = "PUT";
jeash.display.GraphicsPathCommand.LINE_TO = 2;
jeash.display.GraphicsPathCommand.MOVE_TO = 1;
jeash.display.GraphicsPathCommand.CURVE_TO = 3;
jeash.display.GraphicsPathCommand.WIDE_LINE_TO = 5;
jeash.display.GraphicsPathCommand.WIDE_MOVE_TO = 4;
jeash.display.GraphicsPathCommand.NO_OP = 0;
haxe.Unserializer.DEFAULT_RESOLVER = Type;
haxe.Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe.Unserializer.CODES = null;
jeash.events.TouchEvent.TOUCH_BEGIN = "touchBegin";
jeash.events.TouchEvent.TOUCH_END = "touchEnd";
jeash.events.TouchEvent.TOUCH_MOVE = "touchMove";
jeash.events.TouchEvent.TOUCH_OUT = "touchOut";
jeash.events.TouchEvent.TOUCH_OVER = "touchOver";
jeash.events.TouchEvent.TOUCH_ROLL_OUT = "touchRollOut";
jeash.events.TouchEvent.TOUCH_ROLL_OVER = "touchRollOver";
jeash.events.TouchEvent.TOUCH_TAP = "touchTap";
de.polygonal.ui.UIEvent.KEY_DOWN = 134217729;
de.polygonal.ui.UIEvent.KEY_UP = 134217730;
de.polygonal.ui.UIEvent.KEY_REPEAT = 134217732;
de.polygonal.ui.UIEvent.MOUSE_DOWN = 134217736;
de.polygonal.ui.UIEvent.MOUSE_UP = 134217744;
de.polygonal.ui.UIEvent.MOUSE_WHEEL = 134217760;
de.polygonal.ui.UIEvent.MOUSE_MOVE = 134217792;
de.polygonal.ui.UIEvent.SHORTCUT = 134217856;
de.polygonal.ui.UIEvent.SEQUENCE = 134217984;
de.polygonal.ui.UIEvent.GROUP_ID = 1;
de.polygonal.ui.UIEvent.GROUP_MASK = 134217728;
de.polygonal.ui.UIEvent.EVENT_MASK = 511;
jeash.display.BitmapDataChannel.ALPHA = 8;
jeash.display.BitmapDataChannel.BLUE = 4;
jeash.display.BitmapDataChannel.GREEN = 2;
jeash.display.BitmapDataChannel.RED = 1;
js.Lib.onerror = null;
de.polygonal.core.io.Base64._instance = null;
jeash.display.Stage.jeashMouseChanges = [jeash.events.MouseEvent.MOUSE_OUT,jeash.events.MouseEvent.MOUSE_OVER,jeash.events.MouseEvent.ROLL_OUT,jeash.events.MouseEvent.ROLL_OVER];
jeash.display.Stage.jeashTouchChanges = [jeash.events.TouchEvent.TOUCH_OUT,jeash.events.TouchEvent.TOUCH_OVER,jeash.events.TouchEvent.TOUCH_ROLL_OUT,jeash.events.TouchEvent.TOUCH_ROLL_OVER];
jeash.display.Stage.DEFAULT_FRAMERATE = 60.0;
jeash.display.Stage.DEFAULT_PROJ_MATRIX = [1.,0,0,0,0,1,0,0,0,0,-1,-1,0,0,0,0];
jeash.text.TextFieldType.DYNAMIC = "DYNAMIC";
jeash.text.TextFieldType.INPUT = "INPUT";
com.wighawag.game.xjump.world.Tower.WIDTH = 32;
com.wighawag.game.xjump.world.Tower.HEIGHT = 24;
com.wighawag.game.xjump.world.Tower.BLOCK_WIDTH = 16;
com.wighawag.game.xjump.world.Tower.BLOCK_HEIGHT = 16;
com.wighawag.game.xjump.world.Tower.JUMPY_WIDTH = 32;
com.wighawag.game.xjump.world.Tower.JUMPY_HEIGHT = 32;
de.polygonal.ds.HashKey._counter = 0;
de.polygonal.ds.IntIntHashTable.KEY_ABSENT = -2147483648;
de.polygonal.ds.IntIntHashTable.VAL_ABSENT = -2147483648;
de.polygonal.ds.IntIntHashTable.EMPTY_SLOT = -1;
de.polygonal.ds.IntIntHashTable.NULL_POINTER = -1;
de.polygonal.core.math.Mathematics.NaN = Math.NaN;
de.polygonal.core.math.Mathematics.POSITIVE_INFINITY = Math.POSITIVE_INFINITY;
de.polygonal.core.math.Mathematics.NEGATIVE_INFINITY = Math.NEGATIVE_INFINITY;
de.polygonal.core.math.Mathematics.ZERO_TOLERANCE = 1e-08;
de.polygonal.core.math.Mathematics.RAD_DEG = 180 / 3.141592653589793;
de.polygonal.core.math.Mathematics.DEG_RAD = 3.141592653589793 / 180;
de.polygonal.core.math.Mathematics.LN2 = 0.6931471805599453;
de.polygonal.core.math.Mathematics.LN10 = 2.302585092994046;
de.polygonal.core.math.Mathematics.PIHALF = 1.5707963267948966;
de.polygonal.core.math.Mathematics.PI = 3.141592653589793;
de.polygonal.core.math.Mathematics.PI2 = 6.283185307179586;
de.polygonal.core.math.Mathematics.EPS = 1e-6;
de.polygonal.core.math.Mathematics.SQRT2 = 1.414213562373095;
de.polygonal.core.fmt.Sprintf.BIT_MINUS = 1;
de.polygonal.core.fmt.Sprintf.BIT_PLUS = 2;
de.polygonal.core.fmt.Sprintf.BIT_SPACE = 4;
de.polygonal.core.fmt.Sprintf.BIT_SHARP = 8;
de.polygonal.core.fmt.Sprintf.BIT_ZERO = 16;
de.polygonal.core.fmt.Sprintf.BIT_h = 32;
de.polygonal.core.fmt.Sprintf.BIT_l = 64;
de.polygonal.core.fmt.Sprintf.BIT_L = 128;
de.polygonal.core.fmt.Sprintf.BIT_c = 256;
de.polygonal.core.fmt.Sprintf.BIT_d = 512;
de.polygonal.core.fmt.Sprintf.BIT_i = 1024;
de.polygonal.core.fmt.Sprintf.BIT_e = 2048;
de.polygonal.core.fmt.Sprintf.BIT_E = 4096;
de.polygonal.core.fmt.Sprintf.BIT_f = 8192;
de.polygonal.core.fmt.Sprintf.BIT_g = 16384;
de.polygonal.core.fmt.Sprintf.BIT_G = 32768;
de.polygonal.core.fmt.Sprintf.BIT_o = 65536;
de.polygonal.core.fmt.Sprintf.BIT_s = 131072;
de.polygonal.core.fmt.Sprintf.BIT_u = 262144;
de.polygonal.core.fmt.Sprintf.BIT_x = 524288;
de.polygonal.core.fmt.Sprintf.BIT_X = 1048576;
de.polygonal.core.fmt.Sprintf.BIT_p = 2097152;
de.polygonal.core.fmt.Sprintf.BIT_n = 4194304;
de.polygonal.core.fmt.Sprintf.BIT_b = 8388608;
de.polygonal.core.fmt.Sprintf.MASK_SPECIFIERS = 16776960;
de.polygonal.core.fmt.Sprintf._instance = null;
haxe.Timer.arr = new Array();
jeash.display.Graphics.defaultFontName = "ARIAL.TTF";
jeash.display.Graphics.defaultFontSize = 12;
jeash.display.Graphics.immediateMatrix = null;
jeash.display.Graphics.immediateMask = null;
jeash.display.Graphics.TOP = 0;
jeash.display.Graphics.CENTER = 1;
jeash.display.Graphics.BOTTOM = 2;
jeash.display.Graphics.LEFT = 0;
jeash.display.Graphics.RIGHT = 2;
jeash.display.Graphics.RADIAL = 1;
jeash.display.Graphics.SPREAD_REPEAT = 2;
jeash.display.Graphics.SPREAD_REFLECT = 4;
jeash.display.Graphics.EDGE_MASK = 240;
jeash.display.Graphics.EDGE_CLAMP = 0;
jeash.display.Graphics.EDGE_REPEAT = 16;
jeash.display.Graphics.EDGE_UNCHECKED = 32;
jeash.display.Graphics.EDGE_REPEAT_POW2 = 48;
jeash.display.Graphics.END_NONE = 0;
jeash.display.Graphics.END_ROUND = 256;
jeash.display.Graphics.END_SQUARE = 512;
jeash.display.Graphics.END_MASK = 768;
jeash.display.Graphics.END_SHIFT = 8;
jeash.display.Graphics.CORNER_ROUND = 0;
jeash.display.Graphics.CORNER_MITER = 4096;
jeash.display.Graphics.CORNER_BEVEL = 8192;
jeash.display.Graphics.CORNER_MASK = 12288;
jeash.display.Graphics.CORNER_SHIFT = 12;
jeash.display.Graphics.PIXEL_HINTING = 16384;
jeash.display.Graphics.BMP_REPEAT = 16;
jeash.display.Graphics.BMP_SMOOTH = 65536;
jeash.display.Graphics.SCALE_NONE = 0;
jeash.display.Graphics.SCALE_VERTICAL = 1;
jeash.display.Graphics.SCALE_HORIZONTAL = 2;
jeash.display.Graphics.SCALE_NORMAL = 3;
jeash.display.Graphics.MOVE = 0;
jeash.display.Graphics.LINE = 1;
jeash.display.Graphics.CURVE = 2;
jeash.display.Graphics.BLEND_ADD = 0;
jeash.display.Graphics.BLEND_ALPHA = 1;
jeash.display.Graphics.BLEND_DARKEN = 2;
jeash.display.Graphics.BLEND_DIFFERENCE = 3;
jeash.display.Graphics.BLEND_ERASE = 4;
jeash.display.Graphics.BLEND_HARDLIGHT = 5;
jeash.display.Graphics.BLEND_INVERT = 6;
jeash.display.Graphics.BLEND_LAYER = 7;
jeash.display.Graphics.BLEND_LIGHTEN = 8;
jeash.display.Graphics.BLEND_MULTIPLY = 9;
jeash.display.Graphics.BLEND_NORMAL = 10;
jeash.display.Graphics.BLEND_OVERLAY = 11;
jeash.display.Graphics.BLEND_SCREEN = 12;
jeash.display.Graphics.BLEND_SUBTRACT = 13;
jeash.display.Graphics.BLEND_SHADER = 14;
jeash.display.Graphics.TILE_SCALE = 1;
jeash.display.Graphics.TILE_ROTATION = 2;
jeash.display.Graphics.TILE_RGB = 4;
jeash.display.Graphics.TILE_ALPHA = 8;
jeash.display.Graphics.TILE_SMOOTH = 4096;
jeash.display.Graphics.JEASH_MAX_DIMENSION = 5000;
de.polygonal.core.time.TimebaseEvent.TICK = 1;
de.polygonal.core.time.TimebaseEvent.RENDER = 2;
de.polygonal.core.time.TimebaseEvent.HALT = 4;
de.polygonal.core.time.TimebaseEvent.CLAMP = 8;
de.polygonal.core.time.TimebaseEvent.RESUME = 16;
de.polygonal.core.time.TimebaseEvent.FREEZE_BEGIN = 32;
de.polygonal.core.time.TimebaseEvent.FREEZE_END = 64;
de.polygonal.core.time.TimebaseEvent.GROUP_ID = 0;
de.polygonal.core.time.TimebaseEvent.GROUP_MASK = 0;
de.polygonal.core.time.TimebaseEvent.EVENT_MASK = 127;
ApplicationMain.main()